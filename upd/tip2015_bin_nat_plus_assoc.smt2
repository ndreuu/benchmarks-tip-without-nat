
(set-logic HORN)
(declare-datatypes ((Bin_6 0)) (((One_6) (ZeroAnd_6 (projZeroAnd_12 Bin_6)) (OneAnd_6 (projOneAnd_12 Bin_6)))))
(declare-fun diseqBin_6 (Bin_6 Bin_6) Bool)
(declare-fun projZeroAnd_13 (Bin_6 Bin_6) Bool)
(declare-fun projOneAnd_13 (Bin_6 Bin_6) Bool)
(declare-fun isOne_6 (Bin_6) Bool)
(declare-fun isZeroAnd_6 (Bin_6) Bool)
(declare-fun isOneAnd_6 (Bin_6) Bool)
(assert (forall ((x_22913 Bin_6))
	(projZeroAnd_13 x_22913 (ZeroAnd_6 x_22913))))
(assert (forall ((x_22915 Bin_6))
	(projOneAnd_13 x_22915 (OneAnd_6 x_22915))))
(assert (isOne_6 One_6))
(assert (forall ((x_22917 Bin_6))
	(isZeroAnd_6 (ZeroAnd_6 x_22917))))
(assert (forall ((x_22918 Bin_6))
	(isOneAnd_6 (OneAnd_6 x_22918))))
(assert (forall ((x_22919 Bin_6))
	(diseqBin_6 One_6 (ZeroAnd_6 x_22919))))
(assert (forall ((x_22920 Bin_6))
	(diseqBin_6 One_6 (OneAnd_6 x_22920))))
(assert (forall ((x_22921 Bin_6))
	(diseqBin_6 (ZeroAnd_6 x_22921) One_6)))
(assert (forall ((x_22922 Bin_6))
	(diseqBin_6 (OneAnd_6 x_22922) One_6)))
(assert (forall ((x_22923 Bin_6) (x_22924 Bin_6))
	(diseqBin_6 (ZeroAnd_6 x_22923) (OneAnd_6 x_22924))))
(assert (forall ((x_22925 Bin_6) (x_22926 Bin_6))
	(diseqBin_6 (OneAnd_6 x_22925) (ZeroAnd_6 x_22926))))
(assert (forall ((x_22927 Bin_6) (x_22928 Bin_6))
	(=> (diseqBin_6 x_22927 x_22928) (diseqBin_6 (ZeroAnd_6 x_22927) (ZeroAnd_6 x_22928)))))
(assert (forall ((x_22929 Bin_6) (x_22930 Bin_6))
	(=> (diseqBin_6 x_22929 x_22930) (diseqBin_6 (OneAnd_6 x_22929) (OneAnd_6 x_22930)))))
(declare-fun s_246 (Bin_6 Bin_6) Bool)
(assert (forall ((x_22889 Bin_6) (ys_86 Bin_6))
	(=> (s_246 x_22889 ys_86) (s_246 (ZeroAnd_6 x_22889) (OneAnd_6 ys_86)))))
(assert (forall ((xs_283 Bin_6))
	(s_246 (OneAnd_6 xs_283) (ZeroAnd_6 xs_283))))
(assert (s_246 (ZeroAnd_6 One_6) One_6))
(declare-fun plus_47 (Bin_6 Bin_6 Bin_6) Bool)
(assert (forall ((x_22893 Bin_6) (x_22894 Bin_6) (ys_87 Bin_6) (x_22886 Bin_6))
	(=> (and (plus_47 x_22893 x_22886 ys_87) (s_246 x_22894 x_22893)) (plus_47 (ZeroAnd_6 x_22894) (OneAnd_6 x_22886) (OneAnd_6 ys_87)))))
(assert (forall ((x_22896 Bin_6) (zs_22 Bin_6) (x_22886 Bin_6))
	(=> (plus_47 x_22896 x_22886 zs_22) (plus_47 (OneAnd_6 x_22896) (OneAnd_6 x_22886) (ZeroAnd_6 zs_22)))))
(assert (forall ((x_22897 Bin_6) (x_22886 Bin_6))
	(=> (s_246 x_22897 (OneAnd_6 x_22886)) (plus_47 x_22897 (OneAnd_6 x_22886) One_6))))
(assert (forall ((x_22900 Bin_6) (xs_284 Bin_6) (z_897 Bin_6))
	(=> (plus_47 x_22900 z_897 xs_284) (plus_47 (OneAnd_6 x_22900) (ZeroAnd_6 z_897) (OneAnd_6 xs_284)))))
(assert (forall ((x_22902 Bin_6) (ys_88 Bin_6) (z_897 Bin_6))
	(=> (plus_47 x_22902 z_897 ys_88) (plus_47 (ZeroAnd_6 x_22902) (ZeroAnd_6 z_897) (ZeroAnd_6 ys_88)))))
(assert (forall ((x_22903 Bin_6) (z_897 Bin_6))
	(=> (s_246 x_22903 (ZeroAnd_6 z_897)) (plus_47 x_22903 (ZeroAnd_6 z_897) One_6))))
(assert (forall ((x_22905 Bin_6) (y_910 Bin_6))
	(=> (s_246 x_22905 y_910) (plus_47 x_22905 One_6 y_910))))
(assert (forall ((x_22907 Bin_6) (x_22908 Bin_6) (x_22909 Bin_6) (x_22910 Bin_6) (x_22887 Bin_6) (y_911 Bin_6) (z_898 Bin_6))
	(=> (and true (diseqBin_6 x_22908 x_22910) (plus_47 x_22907 y_911 z_898) (plus_47 x_22908 x_22887 x_22907) (plus_47 x_22909 x_22887 y_911) (plus_47 x_22910 x_22909 z_898)) false)))
(check-sat)
