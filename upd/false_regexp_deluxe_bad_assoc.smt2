
(set-logic HORN)
(declare-datatypes ((Bool_390 0)) (((false_390) (true_390))))
(declare-fun diseqBool_181 (Bool_390 Bool_390) Bool)
(declare-fun isfalse_181 (Bool_390) Bool)
(declare-fun istrue_181 (Bool_390) Bool)
(assert (isfalse_181 false_390))
(assert (istrue_181 true_390))
(assert (diseqBool_181 false_390 true_390))
(assert (diseqBool_181 true_390 false_390))
(declare-fun and_392 (Bool_390 Bool_390 Bool_390) Bool)
(declare-fun or_403 (Bool_390 Bool_390 Bool_390) Bool)
(declare-fun hence_390 (Bool_390 Bool_390 Bool_390) Bool)
(declare-fun not_395 (Bool_390 Bool_390) Bool)
(assert (and_392 false_390 false_390 false_390))
(assert (and_392 false_390 true_390 false_390))
(assert (and_392 false_390 false_390 true_390))
(assert (and_392 true_390 true_390 true_390))
(assert (or_403 false_390 false_390 false_390))
(assert (or_403 true_390 true_390 false_390))
(assert (or_403 true_390 false_390 true_390))
(assert (or_403 true_390 true_390 true_390))
(assert (hence_390 true_390 false_390 false_390))
(assert (hence_390 false_390 true_390 false_390))
(assert (hence_390 true_390 false_390 true_390))
(assert (hence_390 true_390 true_390 true_390))
(assert (not_395 true_390 false_390))
(assert (not_395 false_390 true_390))
(declare-datatypes ((T_9 0)) (((A_73) (B_64) (C_37))))
(declare-fun diseqT_9 (T_9 T_9) Bool)
(declare-fun isA_16 (T_9) Bool)
(declare-fun isB_16 (T_9) Bool)
(declare-fun isC_16 (T_9) Bool)
(assert (isA_16 A_73))
(assert (isB_16 B_64))
(assert (isC_16 C_37))
(assert (diseqT_9 A_73 B_64))
(assert (diseqT_9 A_73 C_37))
(assert (diseqT_9 B_64 A_73))
(assert (diseqT_9 C_37 A_73))
(assert (diseqT_9 B_64 C_37))
(assert (diseqT_9 C_37 B_64))
(declare-datatypes ((list_313 0)) (((nil_349) (cons_310 (head_620 T_9) (tail_623 list_313)))))
(declare-fun diseqlist_310 (list_313 list_313) Bool)
(declare-fun head_621 (T_9 list_313) Bool)
(declare-fun tail_624 (list_313 list_313) Bool)
(declare-fun isnil_349 (list_313) Bool)
(declare-fun iscons_310 (list_313) Bool)
(assert (forall ((x_69882 T_9) (x_69883 list_313))
	(head_621 x_69882 (cons_310 x_69882 x_69883))))
(assert (forall ((x_69882 T_9) (x_69883 list_313))
	(tail_624 x_69883 (cons_310 x_69882 x_69883))))
(assert (isnil_349 nil_349))
(assert (forall ((x_69885 T_9) (x_69886 list_313))
	(iscons_310 (cons_310 x_69885 x_69886))))
(assert (forall ((x_69887 T_9) (x_69888 list_313))
	(diseqlist_310 nil_349 (cons_310 x_69887 x_69888))))
(assert (forall ((x_69889 T_9) (x_69890 list_313))
	(diseqlist_310 (cons_310 x_69889 x_69890) nil_349)))
(assert (forall ((x_69891 T_9) (x_69892 list_313) (x_69893 T_9) (x_69894 list_313))
	(=> (diseqT_9 x_69891 x_69893) (diseqlist_310 (cons_310 x_69891 x_69892) (cons_310 x_69893 x_69894)))))
(assert (forall ((x_69891 T_9) (x_69892 list_313) (x_69893 T_9) (x_69894 list_313))
	(=> (diseqlist_310 x_69892 x_69894) (diseqlist_310 (cons_310 x_69891 x_69892) (cons_310 x_69893 x_69894)))))
(declare-datatypes ((R_499 0)) (((Nil_350) (Eps_46) (Atom_23 (projAtom_46 T_9)) (x_65475 (proj_96 R_499) (proj_97 R_499)) (x_65476 (proj_98 R_499) (proj_99 R_499)) (x_65477 (proj_100 R_499) (proj_101 R_499)) (Star_23 (projStar_46 R_499)))))
(declare-fun diseqR_23 (R_499 R_499) Bool)
(declare-fun projAtom_47 (T_9 R_499) Bool)
(declare-fun proj_102 (R_499 R_499) Bool)
(declare-fun proj_103 (R_499 R_499) Bool)
(declare-fun proj_104 (R_499 R_499) Bool)
(declare-fun proj_105 (R_499 R_499) Bool)
(declare-fun proj_106 (R_499 R_499) Bool)
(declare-fun proj_107 (R_499 R_499) Bool)
(declare-fun projStar_47 (R_499 R_499) Bool)
(declare-fun isNil_350 (R_499) Bool)
(declare-fun isEps_23 (R_499) Bool)
(declare-fun isAtom_23 (R_499) Bool)
(declare-fun isx_38 (R_499) Bool)
(declare-fun isx_39 (R_499) Bool)
(declare-fun isx_40 (R_499) Bool)
(declare-fun isStar_23 (R_499) Bool)
(assert (forall ((x_69897 T_9))
	(projAtom_47 x_69897 (Atom_23 x_69897))))
(assert (forall ((x_69899 R_499) (x_69900 R_499))
	(proj_102 x_69899 (x_65475 x_69899 x_69900))))
(assert (forall ((x_69899 R_499) (x_69900 R_499))
	(proj_103 x_69900 (x_65475 x_69899 x_69900))))
(assert (forall ((x_69902 R_499) (x_69903 R_499))
	(proj_104 x_69902 (x_65476 x_69902 x_69903))))
(assert (forall ((x_69902 R_499) (x_69903 R_499))
	(proj_105 x_69903 (x_65476 x_69902 x_69903))))
(assert (forall ((x_69905 R_499) (x_69906 R_499))
	(proj_106 x_69905 (x_65477 x_69905 x_69906))))
(assert (forall ((x_69905 R_499) (x_69906 R_499))
	(proj_107 x_69906 (x_65477 x_69905 x_69906))))
(assert (forall ((x_69908 R_499))
	(projStar_47 x_69908 (Star_23 x_69908))))
(assert (isNil_350 Nil_350))
(assert (isEps_23 Eps_46))
(assert (forall ((x_69910 T_9))
	(isAtom_23 (Atom_23 x_69910))))
(assert (forall ((x_69911 R_499) (x_69912 R_499))
	(isx_38 (x_65475 x_69911 x_69912))))
(assert (forall ((x_69913 R_499) (x_69914 R_499))
	(isx_39 (x_65476 x_69913 x_69914))))
(assert (forall ((x_69915 R_499) (x_69916 R_499))
	(isx_40 (x_65477 x_69915 x_69916))))
(assert (forall ((x_69917 R_499))
	(isStar_23 (Star_23 x_69917))))
(assert (diseqR_23 Nil_350 Eps_46))
(assert (forall ((x_69918 T_9))
	(diseqR_23 Nil_350 (Atom_23 x_69918))))
(assert (forall ((x_69919 R_499) (x_69920 R_499))
	(diseqR_23 Nil_350 (x_65475 x_69919 x_69920))))
(assert (forall ((x_69921 R_499) (x_69922 R_499))
	(diseqR_23 Nil_350 (x_65476 x_69921 x_69922))))
(assert (forall ((x_69923 R_499) (x_69924 R_499))
	(diseqR_23 Nil_350 (x_65477 x_69923 x_69924))))
(assert (forall ((x_69925 R_499))
	(diseqR_23 Nil_350 (Star_23 x_69925))))
(assert (diseqR_23 Eps_46 Nil_350))
(assert (forall ((x_69926 T_9))
	(diseqR_23 (Atom_23 x_69926) Nil_350)))
(assert (forall ((x_69927 R_499) (x_69928 R_499))
	(diseqR_23 (x_65475 x_69927 x_69928) Nil_350)))
(assert (forall ((x_69929 R_499) (x_69930 R_499))
	(diseqR_23 (x_65476 x_69929 x_69930) Nil_350)))
(assert (forall ((x_69931 R_499) (x_69932 R_499))
	(diseqR_23 (x_65477 x_69931 x_69932) Nil_350)))
(assert (forall ((x_69933 R_499))
	(diseqR_23 (Star_23 x_69933) Nil_350)))
(assert (forall ((x_69934 T_9))
	(diseqR_23 Eps_46 (Atom_23 x_69934))))
(assert (forall ((x_69935 R_499) (x_69936 R_499))
	(diseqR_23 Eps_46 (x_65475 x_69935 x_69936))))
(assert (forall ((x_69937 R_499) (x_69938 R_499))
	(diseqR_23 Eps_46 (x_65476 x_69937 x_69938))))
(assert (forall ((x_69939 R_499) (x_69940 R_499))
	(diseqR_23 Eps_46 (x_65477 x_69939 x_69940))))
(assert (forall ((x_69941 R_499))
	(diseqR_23 Eps_46 (Star_23 x_69941))))
(assert (forall ((x_69942 T_9))
	(diseqR_23 (Atom_23 x_69942) Eps_46)))
(assert (forall ((x_69943 R_499) (x_69944 R_499))
	(diseqR_23 (x_65475 x_69943 x_69944) Eps_46)))
(assert (forall ((x_69945 R_499) (x_69946 R_499))
	(diseqR_23 (x_65476 x_69945 x_69946) Eps_46)))
(assert (forall ((x_69947 R_499) (x_69948 R_499))
	(diseqR_23 (x_65477 x_69947 x_69948) Eps_46)))
(assert (forall ((x_69949 R_499))
	(diseqR_23 (Star_23 x_69949) Eps_46)))
(assert (forall ((x_69950 T_9) (x_69951 R_499) (x_69952 R_499))
	(diseqR_23 (Atom_23 x_69950) (x_65475 x_69951 x_69952))))
(assert (forall ((x_69953 T_9) (x_69954 R_499) (x_69955 R_499))
	(diseqR_23 (Atom_23 x_69953) (x_65476 x_69954 x_69955))))
(assert (forall ((x_69956 T_9) (x_69957 R_499) (x_69958 R_499))
	(diseqR_23 (Atom_23 x_69956) (x_65477 x_69957 x_69958))))
(assert (forall ((x_69959 T_9) (x_69960 R_499))
	(diseqR_23 (Atom_23 x_69959) (Star_23 x_69960))))
(assert (forall ((x_69961 R_499) (x_69962 R_499) (x_69963 T_9))
	(diseqR_23 (x_65475 x_69961 x_69962) (Atom_23 x_69963))))
(assert (forall ((x_69964 R_499) (x_69965 R_499) (x_69966 T_9))
	(diseqR_23 (x_65476 x_69964 x_69965) (Atom_23 x_69966))))
(assert (forall ((x_69967 R_499) (x_69968 R_499) (x_69969 T_9))
	(diseqR_23 (x_65477 x_69967 x_69968) (Atom_23 x_69969))))
(assert (forall ((x_69970 R_499) (x_69971 T_9))
	(diseqR_23 (Star_23 x_69970) (Atom_23 x_69971))))
(assert (forall ((x_69972 R_499) (x_69973 R_499) (x_69974 R_499) (x_69975 R_499))
	(diseqR_23 (x_65475 x_69972 x_69973) (x_65476 x_69974 x_69975))))
(assert (forall ((x_69976 R_499) (x_69977 R_499) (x_69978 R_499) (x_69979 R_499))
	(diseqR_23 (x_65475 x_69976 x_69977) (x_65477 x_69978 x_69979))))
(assert (forall ((x_69980 R_499) (x_69981 R_499) (x_69982 R_499))
	(diseqR_23 (x_65475 x_69980 x_69981) (Star_23 x_69982))))
(assert (forall ((x_69983 R_499) (x_69984 R_499) (x_69985 R_499) (x_69986 R_499))
	(diseqR_23 (x_65476 x_69983 x_69984) (x_65475 x_69985 x_69986))))
(assert (forall ((x_69987 R_499) (x_69988 R_499) (x_69989 R_499) (x_69990 R_499))
	(diseqR_23 (x_65477 x_69987 x_69988) (x_65475 x_69989 x_69990))))
(assert (forall ((x_69991 R_499) (x_69992 R_499) (x_69993 R_499))
	(diseqR_23 (Star_23 x_69991) (x_65475 x_69992 x_69993))))
(assert (forall ((x_69994 R_499) (x_69995 R_499) (x_69996 R_499) (x_69997 R_499))
	(diseqR_23 (x_65476 x_69994 x_69995) (x_65477 x_69996 x_69997))))
(assert (forall ((x_69998 R_499) (x_69999 R_499) (x_70000 R_499))
	(diseqR_23 (x_65476 x_69998 x_69999) (Star_23 x_70000))))
(assert (forall ((x_70001 R_499) (x_70002 R_499) (x_70003 R_499) (x_70004 R_499))
	(diseqR_23 (x_65477 x_70001 x_70002) (x_65476 x_70003 x_70004))))
(assert (forall ((x_70005 R_499) (x_70006 R_499) (x_70007 R_499))
	(diseqR_23 (Star_23 x_70005) (x_65476 x_70006 x_70007))))
(assert (forall ((x_70008 R_499) (x_70009 R_499) (x_70010 R_499))
	(diseqR_23 (x_65477 x_70008 x_70009) (Star_23 x_70010))))
(assert (forall ((x_70011 R_499) (x_70012 R_499) (x_70013 R_499))
	(diseqR_23 (Star_23 x_70011) (x_65477 x_70012 x_70013))))
(assert (forall ((x_70014 T_9) (x_70015 T_9))
	(=> (diseqT_9 x_70014 x_70015) (diseqR_23 (Atom_23 x_70014) (Atom_23 x_70015)))))
(assert (forall ((x_70016 R_499) (x_70017 R_499) (x_70018 R_499) (x_70019 R_499))
	(=> (diseqR_23 x_70016 x_70018) (diseqR_23 (x_65475 x_70016 x_70017) (x_65475 x_70018 x_70019)))))
(assert (forall ((x_70016 R_499) (x_70017 R_499) (x_70018 R_499) (x_70019 R_499))
	(=> (diseqR_23 x_70017 x_70019) (diseqR_23 (x_65475 x_70016 x_70017) (x_65475 x_70018 x_70019)))))
(assert (forall ((x_70020 R_499) (x_70021 R_499) (x_70022 R_499) (x_70023 R_499))
	(=> (diseqR_23 x_70020 x_70022) (diseqR_23 (x_65476 x_70020 x_70021) (x_65476 x_70022 x_70023)))))
(assert (forall ((x_70020 R_499) (x_70021 R_499) (x_70022 R_499) (x_70023 R_499))
	(=> (diseqR_23 x_70021 x_70023) (diseqR_23 (x_65476 x_70020 x_70021) (x_65476 x_70022 x_70023)))))
(assert (forall ((x_70024 R_499) (x_70025 R_499) (x_70026 R_499) (x_70027 R_499))
	(=> (diseqR_23 x_70024 x_70026) (diseqR_23 (x_65477 x_70024 x_70025) (x_65477 x_70026 x_70027)))))
(assert (forall ((x_70024 R_499) (x_70025 R_499) (x_70026 R_499) (x_70027 R_499))
	(=> (diseqR_23 x_70025 x_70027) (diseqR_23 (x_65477 x_70024 x_70025) (x_65477 x_70026 x_70027)))))
(assert (forall ((x_70028 R_499) (x_70029 R_499))
	(=> (diseqR_23 x_70028 x_70029) (diseqR_23 (Star_23 x_70028) (Star_23 x_70029)))))
(declare-fun x_65478 (R_499 R_499 R_499) Bool)
(assert (forall ((y_2639 R_499))
	(x_65478 Nil_350 Nil_350 y_2639)))
(assert (forall ((x_65480 R_499) (x_65903 T_9))
	(x_65478 Nil_350 (Atom_23 x_65903) Nil_350)))
(assert (forall ((x_65480 R_499))
	(x_65478 Nil_350 Eps_46 Nil_350)))
(assert (forall ((x_65480 R_499) (x_65904 R_499))
	(x_65478 Nil_350 (Star_23 x_65904) Nil_350)))
(assert (forall ((x_65480 R_499) (x_65905 R_499) (x_65906 R_499))
	(x_65478 Nil_350 (x_65475 x_65905 x_65906) Nil_350)))
(assert (forall ((x_65480 R_499) (x_65907 R_499) (x_65908 R_499))
	(x_65478 Nil_350 (x_65476 x_65907 x_65908) Nil_350)))
(assert (forall ((x_65480 R_499) (x_65909 R_499) (x_65910 R_499))
	(x_65478 Nil_350 (x_65477 x_65909 x_65910) Nil_350)))
(assert (forall ((x_65481 R_499) (x_65559 T_9) (x_65480 R_499))
	(x_65478 (Atom_23 x_65559) Eps_46 (Atom_23 x_65559))))
(assert (forall ((x_65481 R_499) (x_65480 R_499))
	(x_65478 Eps_46 Eps_46 Eps_46)))
(assert (forall ((x_65481 R_499) (x_65560 R_499) (x_65480 R_499))
	(x_65478 (Star_23 x_65560) Eps_46 (Star_23 x_65560))))
(assert (forall ((x_65481 R_499) (x_65561 R_499) (x_65562 R_499) (x_65480 R_499))
	(x_65478 (x_65475 x_65561 x_65562) Eps_46 (x_65475 x_65561 x_65562))))
(assert (forall ((x_65481 R_499) (x_65563 R_499) (x_65564 R_499) (x_65480 R_499))
	(x_65478 (x_65476 x_65563 x_65564) Eps_46 (x_65476 x_65563 x_65564))))
(assert (forall ((x_65481 R_499) (x_65565 R_499) (x_65566 R_499) (x_65480 R_499))
	(x_65478 (x_65477 x_65565 x_65566) Eps_46 (x_65477 x_65565 x_65566))))
(assert (forall ((x_65482 R_499) (x_65503 T_9) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (Atom_23 x_65503) (Atom_23 x_65503) Eps_46)))
(assert (forall ((x_65482 R_499) (x_65504 R_499) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (Star_23 x_65504) (Star_23 x_65504) Eps_46)))
(assert (forall ((x_65482 R_499) (x_65505 R_499) (x_65506 R_499) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (x_65475 x_65505 x_65506) (x_65475 x_65505 x_65506) Eps_46)))
(assert (forall ((x_65482 R_499) (x_65507 R_499) (x_65508 R_499) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (x_65476 x_65507 x_65508) (x_65476 x_65507 x_65508) Eps_46)))
(assert (forall ((x_65482 R_499) (x_65509 R_499) (x_65510 R_499) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (x_65477 x_65509 x_65510) (x_65477 x_65509 x_65510) Eps_46)))
(assert (forall ((x_65483 R_499) (x_65495 T_9) (x_65482 R_499) (x_65511 T_9) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (x_65477 (Atom_23 x_65511) (Atom_23 x_65495)) (Atom_23 x_65511) (Atom_23 x_65495))))
(assert (forall ((x_65483 R_499) (x_65495 T_9) (x_65482 R_499) (x_65512 R_499) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (x_65477 (Star_23 x_65512) (Atom_23 x_65495)) (Star_23 x_65512) (Atom_23 x_65495))))
(assert (forall ((x_65483 R_499) (x_65495 T_9) (x_65482 R_499) (x_65513 R_499) (x_65514 R_499) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (x_65477 (x_65475 x_65513 x_65514) (Atom_23 x_65495)) (x_65475 x_65513 x_65514) (Atom_23 x_65495))))
(assert (forall ((x_65483 R_499) (x_65495 T_9) (x_65482 R_499) (x_65515 R_499) (x_65516 R_499) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (x_65477 (x_65476 x_65515 x_65516) (Atom_23 x_65495)) (x_65476 x_65515 x_65516) (Atom_23 x_65495))))
(assert (forall ((x_65483 R_499) (x_65495 T_9) (x_65482 R_499) (x_65517 R_499) (x_65518 R_499) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (x_65477 (x_65477 x_65517 x_65518) (Atom_23 x_65495)) (x_65477 x_65517 x_65518) (Atom_23 x_65495))))
(assert (forall ((x_65483 R_499) (x_65496 R_499) (x_65482 R_499) (x_65527 T_9) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (x_65477 (Atom_23 x_65527) (Star_23 x_65496)) (Atom_23 x_65527) (Star_23 x_65496))))
(assert (forall ((x_65483 R_499) (x_65496 R_499) (x_65482 R_499) (x_65528 R_499) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (x_65477 (Star_23 x_65528) (Star_23 x_65496)) (Star_23 x_65528) (Star_23 x_65496))))
(assert (forall ((x_65483 R_499) (x_65496 R_499) (x_65482 R_499) (x_65529 R_499) (x_65530 R_499) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (x_65477 (x_65475 x_65529 x_65530) (Star_23 x_65496)) (x_65475 x_65529 x_65530) (Star_23 x_65496))))
(assert (forall ((x_65483 R_499) (x_65496 R_499) (x_65482 R_499) (x_65531 R_499) (x_65532 R_499) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (x_65477 (x_65476 x_65531 x_65532) (Star_23 x_65496)) (x_65476 x_65531 x_65532) (Star_23 x_65496))))
(assert (forall ((x_65483 R_499) (x_65496 R_499) (x_65482 R_499) (x_65533 R_499) (x_65534 R_499) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (x_65477 (x_65477 x_65533 x_65534) (Star_23 x_65496)) (x_65477 x_65533 x_65534) (Star_23 x_65496))))
(assert (forall ((x_65483 R_499) (x_65497 R_499) (x_65498 R_499) (x_65482 R_499) (x_65535 T_9) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (x_65477 (Atom_23 x_65535) (x_65475 x_65497 x_65498)) (Atom_23 x_65535) (x_65475 x_65497 x_65498))))
(assert (forall ((x_65483 R_499) (x_65497 R_499) (x_65498 R_499) (x_65482 R_499) (x_65536 R_499) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (x_65477 (Star_23 x_65536) (x_65475 x_65497 x_65498)) (Star_23 x_65536) (x_65475 x_65497 x_65498))))
(assert (forall ((x_65483 R_499) (x_65497 R_499) (x_65498 R_499) (x_65482 R_499) (x_65537 R_499) (x_65538 R_499) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (x_65477 (x_65475 x_65537 x_65538) (x_65475 x_65497 x_65498)) (x_65475 x_65537 x_65538) (x_65475 x_65497 x_65498))))
(assert (forall ((x_65483 R_499) (x_65497 R_499) (x_65498 R_499) (x_65482 R_499) (x_65539 R_499) (x_65540 R_499) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (x_65477 (x_65476 x_65539 x_65540) (x_65475 x_65497 x_65498)) (x_65476 x_65539 x_65540) (x_65475 x_65497 x_65498))))
(assert (forall ((x_65483 R_499) (x_65497 R_499) (x_65498 R_499) (x_65482 R_499) (x_65541 R_499) (x_65542 R_499) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (x_65477 (x_65477 x_65541 x_65542) (x_65475 x_65497 x_65498)) (x_65477 x_65541 x_65542) (x_65475 x_65497 x_65498))))
(assert (forall ((x_65483 R_499) (x_65499 R_499) (x_65500 R_499) (x_65482 R_499) (x_65543 T_9) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (x_65477 (Atom_23 x_65543) (x_65476 x_65499 x_65500)) (Atom_23 x_65543) (x_65476 x_65499 x_65500))))
(assert (forall ((x_65483 R_499) (x_65499 R_499) (x_65500 R_499) (x_65482 R_499) (x_65544 R_499) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (x_65477 (Star_23 x_65544) (x_65476 x_65499 x_65500)) (Star_23 x_65544) (x_65476 x_65499 x_65500))))
(assert (forall ((x_65483 R_499) (x_65499 R_499) (x_65500 R_499) (x_65482 R_499) (x_65545 R_499) (x_65546 R_499) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (x_65477 (x_65475 x_65545 x_65546) (x_65476 x_65499 x_65500)) (x_65475 x_65545 x_65546) (x_65476 x_65499 x_65500))))
(assert (forall ((x_65483 R_499) (x_65499 R_499) (x_65500 R_499) (x_65482 R_499) (x_65547 R_499) (x_65548 R_499) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (x_65477 (x_65476 x_65547 x_65548) (x_65476 x_65499 x_65500)) (x_65476 x_65547 x_65548) (x_65476 x_65499 x_65500))))
(assert (forall ((x_65483 R_499) (x_65499 R_499) (x_65500 R_499) (x_65482 R_499) (x_65549 R_499) (x_65550 R_499) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (x_65477 (x_65477 x_65549 x_65550) (x_65476 x_65499 x_65500)) (x_65477 x_65549 x_65550) (x_65476 x_65499 x_65500))))
(assert (forall ((x_65483 R_499) (x_65501 R_499) (x_65502 R_499) (x_65482 R_499) (x_65551 T_9) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (x_65477 (Atom_23 x_65551) (x_65477 x_65501 x_65502)) (Atom_23 x_65551) (x_65477 x_65501 x_65502))))
(assert (forall ((x_65483 R_499) (x_65501 R_499) (x_65502 R_499) (x_65482 R_499) (x_65552 R_499) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (x_65477 (Star_23 x_65552) (x_65477 x_65501 x_65502)) (Star_23 x_65552) (x_65477 x_65501 x_65502))))
(assert (forall ((x_65483 R_499) (x_65501 R_499) (x_65502 R_499) (x_65482 R_499) (x_65553 R_499) (x_65554 R_499) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (x_65477 (x_65475 x_65553 x_65554) (x_65477 x_65501 x_65502)) (x_65475 x_65553 x_65554) (x_65477 x_65501 x_65502))))
(assert (forall ((x_65483 R_499) (x_65501 R_499) (x_65502 R_499) (x_65482 R_499) (x_65555 R_499) (x_65556 R_499) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (x_65477 (x_65476 x_65555 x_65556) (x_65477 x_65501 x_65502)) (x_65476 x_65555 x_65556) (x_65477 x_65501 x_65502))))
(assert (forall ((x_65483 R_499) (x_65501 R_499) (x_65502 R_499) (x_65482 R_499) (x_65557 R_499) (x_65558 R_499) (x_65481 R_499) (x_65480 R_499))
	(x_65478 (x_65477 (x_65477 x_65557 x_65558) (x_65477 x_65501 x_65502)) (x_65477 x_65557 x_65558) (x_65477 x_65501 x_65502))))
(declare-fun x_65484 (R_499 R_499 R_499) Bool)
(assert (forall ((x_69659 R_499))
	(x_65484 x_69659 Nil_350 x_69659)))
(assert (forall ((x_65486 R_499) (x_67983 T_9))
	(x_65484 (Atom_23 x_67983) (Atom_23 x_67983) Nil_350)))
(assert (forall ((x_65486 R_499))
	(x_65484 Eps_46 Eps_46 Nil_350)))
(assert (forall ((x_65486 R_499) (x_67984 R_499))
	(x_65484 (Star_23 x_67984) (Star_23 x_67984) Nil_350)))
(assert (forall ((x_65486 R_499) (x_67985 R_499) (x_67986 R_499))
	(x_65484 (x_65475 x_67985 x_67986) (x_65475 x_67985 x_67986) Nil_350)))
(assert (forall ((x_65486 R_499) (x_67987 R_499) (x_67988 R_499))
	(x_65484 (x_65476 x_67987 x_67988) (x_65476 x_67987 x_67988) Nil_350)))
(assert (forall ((x_65486 R_499) (x_67989 R_499) (x_67990 R_499))
	(x_65484 (x_65477 x_67989 x_67990) (x_65477 x_67989 x_67990) Nil_350)))
(assert (forall ((x_65487 R_499) (x_67975 T_9) (x_65486 R_499) (x_67991 T_9))
	(x_65484 (x_65475 (Atom_23 x_67991) (Atom_23 x_67975)) (Atom_23 x_67991) (Atom_23 x_67975))))
(assert (forall ((x_65487 R_499) (x_67975 T_9) (x_65486 R_499))
	(x_65484 (x_65475 Eps_46 (Atom_23 x_67975)) Eps_46 (Atom_23 x_67975))))
(assert (forall ((x_65487 R_499) (x_67975 T_9) (x_65486 R_499) (x_67992 R_499))
	(x_65484 (x_65475 (Star_23 x_67992) (Atom_23 x_67975)) (Star_23 x_67992) (Atom_23 x_67975))))
(assert (forall ((x_65487 R_499) (x_67975 T_9) (x_65486 R_499) (x_67993 R_499) (x_67994 R_499))
	(x_65484 (x_65475 (x_65475 x_67993 x_67994) (Atom_23 x_67975)) (x_65475 x_67993 x_67994) (Atom_23 x_67975))))
(assert (forall ((x_65487 R_499) (x_67975 T_9) (x_65486 R_499) (x_67995 R_499) (x_67996 R_499))
	(x_65484 (x_65475 (x_65476 x_67995 x_67996) (Atom_23 x_67975)) (x_65476 x_67995 x_67996) (Atom_23 x_67975))))
(assert (forall ((x_65487 R_499) (x_67975 T_9) (x_65486 R_499) (x_67997 R_499) (x_67998 R_499))
	(x_65484 (x_65475 (x_65477 x_67997 x_67998) (Atom_23 x_67975)) (x_65477 x_67997 x_67998) (Atom_23 x_67975))))
(assert (forall ((x_65487 R_499) (x_65486 R_499) (x_67999 T_9))
	(x_65484 (x_65475 (Atom_23 x_67999) Eps_46) (Atom_23 x_67999) Eps_46)))
(assert (forall ((x_65487 R_499) (x_65486 R_499))
	(x_65484 (x_65475 Eps_46 Eps_46) Eps_46 Eps_46)))
(assert (forall ((x_65487 R_499) (x_65486 R_499) (x_68000 R_499))
	(x_65484 (x_65475 (Star_23 x_68000) Eps_46) (Star_23 x_68000) Eps_46)))
(assert (forall ((x_65487 R_499) (x_65486 R_499) (x_68001 R_499) (x_68002 R_499))
	(x_65484 (x_65475 (x_65475 x_68001 x_68002) Eps_46) (x_65475 x_68001 x_68002) Eps_46)))
(assert (forall ((x_65487 R_499) (x_65486 R_499) (x_68003 R_499) (x_68004 R_499))
	(x_65484 (x_65475 (x_65476 x_68003 x_68004) Eps_46) (x_65476 x_68003 x_68004) Eps_46)))
(assert (forall ((x_65487 R_499) (x_65486 R_499) (x_68005 R_499) (x_68006 R_499))
	(x_65484 (x_65475 (x_65477 x_68005 x_68006) Eps_46) (x_65477 x_68005 x_68006) Eps_46)))
(assert (forall ((x_65487 R_499) (x_67976 R_499) (x_65486 R_499) (x_68007 T_9))
	(x_65484 (x_65475 (Atom_23 x_68007) (Star_23 x_67976)) (Atom_23 x_68007) (Star_23 x_67976))))
(assert (forall ((x_65487 R_499) (x_67976 R_499) (x_65486 R_499))
	(x_65484 (x_65475 Eps_46 (Star_23 x_67976)) Eps_46 (Star_23 x_67976))))
(assert (forall ((x_65487 R_499) (x_67976 R_499) (x_65486 R_499) (x_68008 R_499))
	(x_65484 (x_65475 (Star_23 x_68008) (Star_23 x_67976)) (Star_23 x_68008) (Star_23 x_67976))))
(assert (forall ((x_65487 R_499) (x_67976 R_499) (x_65486 R_499) (x_68009 R_499) (x_68010 R_499))
	(x_65484 (x_65475 (x_65475 x_68009 x_68010) (Star_23 x_67976)) (x_65475 x_68009 x_68010) (Star_23 x_67976))))
(assert (forall ((x_65487 R_499) (x_67976 R_499) (x_65486 R_499) (x_68011 R_499) (x_68012 R_499))
	(x_65484 (x_65475 (x_65476 x_68011 x_68012) (Star_23 x_67976)) (x_65476 x_68011 x_68012) (Star_23 x_67976))))
(assert (forall ((x_65487 R_499) (x_67976 R_499) (x_65486 R_499) (x_68013 R_499) (x_68014 R_499))
	(x_65484 (x_65475 (x_65477 x_68013 x_68014) (Star_23 x_67976)) (x_65477 x_68013 x_68014) (Star_23 x_67976))))
(assert (forall ((x_65487 R_499) (x_67977 R_499) (x_67978 R_499) (x_65486 R_499) (x_68015 T_9))
	(x_65484 (x_65475 (Atom_23 x_68015) (x_65475 x_67977 x_67978)) (Atom_23 x_68015) (x_65475 x_67977 x_67978))))
(assert (forall ((x_65487 R_499) (x_67977 R_499) (x_67978 R_499) (x_65486 R_499))
	(x_65484 (x_65475 Eps_46 (x_65475 x_67977 x_67978)) Eps_46 (x_65475 x_67977 x_67978))))
(assert (forall ((x_65487 R_499) (x_67977 R_499) (x_67978 R_499) (x_65486 R_499) (x_68016 R_499))
	(x_65484 (x_65475 (Star_23 x_68016) (x_65475 x_67977 x_67978)) (Star_23 x_68016) (x_65475 x_67977 x_67978))))
(assert (forall ((x_65487 R_499) (x_67977 R_499) (x_67978 R_499) (x_65486 R_499) (x_68017 R_499) (x_68018 R_499))
	(x_65484 (x_65475 (x_65475 x_68017 x_68018) (x_65475 x_67977 x_67978)) (x_65475 x_68017 x_68018) (x_65475 x_67977 x_67978))))
(assert (forall ((x_65487 R_499) (x_67977 R_499) (x_67978 R_499) (x_65486 R_499) (x_68019 R_499) (x_68020 R_499))
	(x_65484 (x_65475 (x_65476 x_68019 x_68020) (x_65475 x_67977 x_67978)) (x_65476 x_68019 x_68020) (x_65475 x_67977 x_67978))))
(assert (forall ((x_65487 R_499) (x_67977 R_499) (x_67978 R_499) (x_65486 R_499) (x_68021 R_499) (x_68022 R_499))
	(x_65484 (x_65475 (x_65477 x_68021 x_68022) (x_65475 x_67977 x_67978)) (x_65477 x_68021 x_68022) (x_65475 x_67977 x_67978))))
(assert (forall ((x_65487 R_499) (x_67979 R_499) (x_67980 R_499) (x_65486 R_499) (x_68023 T_9))
	(x_65484 (x_65475 (Atom_23 x_68023) (x_65476 x_67979 x_67980)) (Atom_23 x_68023) (x_65476 x_67979 x_67980))))
(assert (forall ((x_65487 R_499) (x_67979 R_499) (x_67980 R_499) (x_65486 R_499))
	(x_65484 (x_65475 Eps_46 (x_65476 x_67979 x_67980)) Eps_46 (x_65476 x_67979 x_67980))))
(assert (forall ((x_65487 R_499) (x_67979 R_499) (x_67980 R_499) (x_65486 R_499) (x_68024 R_499))
	(x_65484 (x_65475 (Star_23 x_68024) (x_65476 x_67979 x_67980)) (Star_23 x_68024) (x_65476 x_67979 x_67980))))
(assert (forall ((x_65487 R_499) (x_67979 R_499) (x_67980 R_499) (x_65486 R_499) (x_68025 R_499) (x_68026 R_499))
	(x_65484 (x_65475 (x_65475 x_68025 x_68026) (x_65476 x_67979 x_67980)) (x_65475 x_68025 x_68026) (x_65476 x_67979 x_67980))))
(assert (forall ((x_65487 R_499) (x_67979 R_499) (x_67980 R_499) (x_65486 R_499) (x_68027 R_499) (x_68028 R_499))
	(x_65484 (x_65475 (x_65476 x_68027 x_68028) (x_65476 x_67979 x_67980)) (x_65476 x_68027 x_68028) (x_65476 x_67979 x_67980))))
(assert (forall ((x_65487 R_499) (x_67979 R_499) (x_67980 R_499) (x_65486 R_499) (x_68029 R_499) (x_68030 R_499))
	(x_65484 (x_65475 (x_65477 x_68029 x_68030) (x_65476 x_67979 x_67980)) (x_65477 x_68029 x_68030) (x_65476 x_67979 x_67980))))
(assert (forall ((x_65487 R_499) (x_67981 R_499) (x_67982 R_499) (x_65486 R_499) (x_68031 T_9))
	(x_65484 (x_65475 (Atom_23 x_68031) (x_65477 x_67981 x_67982)) (Atom_23 x_68031) (x_65477 x_67981 x_67982))))
(assert (forall ((x_65487 R_499) (x_67981 R_499) (x_67982 R_499) (x_65486 R_499))
	(x_65484 (x_65475 Eps_46 (x_65477 x_67981 x_67982)) Eps_46 (x_65477 x_67981 x_67982))))
(assert (forall ((x_65487 R_499) (x_67981 R_499) (x_67982 R_499) (x_65486 R_499) (x_68032 R_499))
	(x_65484 (x_65475 (Star_23 x_68032) (x_65477 x_67981 x_67982)) (Star_23 x_68032) (x_65477 x_67981 x_67982))))
(assert (forall ((x_65487 R_499) (x_67981 R_499) (x_67982 R_499) (x_65486 R_499) (x_68033 R_499) (x_68034 R_499))
	(x_65484 (x_65475 (x_65475 x_68033 x_68034) (x_65477 x_67981 x_67982)) (x_65475 x_68033 x_68034) (x_65477 x_67981 x_67982))))
(assert (forall ((x_65487 R_499) (x_67981 R_499) (x_67982 R_499) (x_65486 R_499) (x_68035 R_499) (x_68036 R_499))
	(x_65484 (x_65475 (x_65476 x_68035 x_68036) (x_65477 x_67981 x_67982)) (x_65476 x_68035 x_68036) (x_65477 x_67981 x_67982))))
(assert (forall ((x_65487 R_499) (x_67981 R_499) (x_67982 R_499) (x_65486 R_499) (x_68037 R_499) (x_68038 R_499))
	(x_65484 (x_65475 (x_65477 x_68037 x_68038) (x_65477 x_67981 x_67982)) (x_65477 x_68037 x_68038) (x_65477 x_67981 x_67982))))
(declare-fun eps_47 (Bool_390 R_499) Bool)
(assert (forall ((y_2641 R_499))
	(eps_47 true_390 (Star_23 y_2641))))
(assert (forall ((x_69703 Bool_390) (x_69704 Bool_390) (x_69705 Bool_390) (p_453 R_499) (q_190 R_499))
	(=> (and (eps_47 x_69704 p_453) (eps_47 x_69705 q_190) (and_392 x_69703 x_69704 x_69705)) (eps_47 x_69703 (x_65477 p_453 q_190)))))
(assert (forall ((x_69706 Bool_390) (x_69707 Bool_390) (x_69708 Bool_390) (r_500 R_499) (q_191 R_499))
	(=> (and (eps_47 x_69707 r_500) (eps_47 x_69708 q_191) (and_392 x_69706 x_69707 x_69708)) (eps_47 x_69706 (x_65476 r_500 q_191)))))
(assert (forall ((x_69709 Bool_390) (x_69710 Bool_390) (x_69711 Bool_390) (p_454 R_499) (q_192 R_499))
	(=> (and (eps_47 x_69710 p_454) (eps_47 x_69711 q_192) (or_403 x_69709 x_69710 x_69711)) (eps_47 x_69709 (x_65475 p_454 q_192)))))
(assert (eps_47 true_390 Eps_46))
(assert (forall ((x_65489 R_499) (x_68039 T_9))
	(eps_47 false_390 (Atom_23 x_68039))))
(assert (forall ((x_65489 R_499))
	(eps_47 false_390 Nil_350)))
(declare-fun step_23 (R_499 R_499 T_9) Bool)
(assert (forall ((x_69715 R_499) (x_69716 R_499) (p_455 R_499) (y_2642 T_9))
	(=> (and (step_23 x_69716 p_455 y_2642) (x_65478 x_69715 x_69716 (Star_23 p_455))) (step_23 x_69715 (Star_23 p_455) y_2642))))
(assert (forall ((x_69719 R_499) (x_69720 R_499) (x_69721 R_499) (x_69722 R_499) (p_456 R_499) (q_193 R_499) (y_2642 T_9))
	(=> (and (step_23 x_69720 p_456 y_2642) (x_65478 x_69721 x_69720 q_193) (step_23 x_69722 q_193 y_2642) (x_65484 x_69719 x_69721 x_69722) (eps_47 true_390 p_456)) (step_23 x_69719 (x_65477 p_456 q_193) y_2642))))
(assert (forall ((x_69725 R_499) (x_69726 R_499) (x_69727 R_499) (p_456 R_499) (q_193 R_499) (y_2642 T_9))
	(=> (and (step_23 x_69726 p_456 y_2642) (x_65478 x_69727 x_69726 q_193) (x_65484 x_69725 x_69727 Nil_350) (eps_47 false_390 p_456)) (step_23 x_69725 (x_65477 p_456 q_193) y_2642))))
(assert (forall ((r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (step_23 Nil_350 r_501 y_2642) (step_23 Nil_350 (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65491 R_499) (x_68048 T_9) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 Nil_350 q_194 y_2642) (step_23 (Atom_23 x_68048) r_501 y_2642)) (step_23 Nil_350 (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65491 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 Nil_350 q_194 y_2642) (step_23 Eps_46 r_501 y_2642)) (step_23 Nil_350 (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65491 R_499) (x_68049 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 Nil_350 q_194 y_2642) (step_23 (Star_23 x_68049) r_501 y_2642)) (step_23 Nil_350 (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65491 R_499) (x_68050 R_499) (x_68051 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 Nil_350 q_194 y_2642) (step_23 (x_65475 x_68050 x_68051) r_501 y_2642)) (step_23 Nil_350 (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65491 R_499) (x_68052 R_499) (x_68053 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 Nil_350 q_194 y_2642) (step_23 (x_65476 x_68052 x_68053) r_501 y_2642)) (step_23 Nil_350 (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65491 R_499) (x_68054 R_499) (x_68055 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 Nil_350 q_194 y_2642) (step_23 (x_65477 x_68054 x_68055) r_501 y_2642)) (step_23 Nil_350 (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68040 T_9) (x_65491 R_499) (x_68056 T_9) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (Atom_23 x_68040) q_194 y_2642) (step_23 (Atom_23 x_68056) r_501 y_2642)) (step_23 (x_65476 (Atom_23 x_68056) (Atom_23 x_68040)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68040 T_9) (x_65491 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (Atom_23 x_68040) q_194 y_2642) (step_23 Eps_46 r_501 y_2642)) (step_23 (x_65476 Eps_46 (Atom_23 x_68040)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68040 T_9) (x_65491 R_499) (x_68057 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (Atom_23 x_68040) q_194 y_2642) (step_23 (Star_23 x_68057) r_501 y_2642)) (step_23 (x_65476 (Star_23 x_68057) (Atom_23 x_68040)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68040 T_9) (x_65491 R_499) (x_68058 R_499) (x_68059 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (Atom_23 x_68040) q_194 y_2642) (step_23 (x_65475 x_68058 x_68059) r_501 y_2642)) (step_23 (x_65476 (x_65475 x_68058 x_68059) (Atom_23 x_68040)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68040 T_9) (x_65491 R_499) (x_68060 R_499) (x_68061 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (Atom_23 x_68040) q_194 y_2642) (step_23 (x_65476 x_68060 x_68061) r_501 y_2642)) (step_23 (x_65476 (x_65476 x_68060 x_68061) (Atom_23 x_68040)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68040 T_9) (x_65491 R_499) (x_68062 R_499) (x_68063 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (Atom_23 x_68040) q_194 y_2642) (step_23 (x_65477 x_68062 x_68063) r_501 y_2642)) (step_23 (x_65476 (x_65477 x_68062 x_68063) (Atom_23 x_68040)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_65491 R_499) (x_68064 T_9) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 Eps_46 q_194 y_2642) (step_23 (Atom_23 x_68064) r_501 y_2642)) (step_23 (x_65476 (Atom_23 x_68064) Eps_46) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_65491 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 Eps_46 q_194 y_2642) (step_23 Eps_46 r_501 y_2642)) (step_23 (x_65476 Eps_46 Eps_46) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_65491 R_499) (x_68065 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 Eps_46 q_194 y_2642) (step_23 (Star_23 x_68065) r_501 y_2642)) (step_23 (x_65476 (Star_23 x_68065) Eps_46) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_65491 R_499) (x_68066 R_499) (x_68067 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 Eps_46 q_194 y_2642) (step_23 (x_65475 x_68066 x_68067) r_501 y_2642)) (step_23 (x_65476 (x_65475 x_68066 x_68067) Eps_46) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_65491 R_499) (x_68068 R_499) (x_68069 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 Eps_46 q_194 y_2642) (step_23 (x_65476 x_68068 x_68069) r_501 y_2642)) (step_23 (x_65476 (x_65476 x_68068 x_68069) Eps_46) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_65491 R_499) (x_68070 R_499) (x_68071 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 Eps_46 q_194 y_2642) (step_23 (x_65477 x_68070 x_68071) r_501 y_2642)) (step_23 (x_65476 (x_65477 x_68070 x_68071) Eps_46) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68041 R_499) (x_65491 R_499) (x_68072 T_9) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (Star_23 x_68041) q_194 y_2642) (step_23 (Atom_23 x_68072) r_501 y_2642)) (step_23 (x_65476 (Atom_23 x_68072) (Star_23 x_68041)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68041 R_499) (x_65491 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (Star_23 x_68041) q_194 y_2642) (step_23 Eps_46 r_501 y_2642)) (step_23 (x_65476 Eps_46 (Star_23 x_68041)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68041 R_499) (x_65491 R_499) (x_68073 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (Star_23 x_68041) q_194 y_2642) (step_23 (Star_23 x_68073) r_501 y_2642)) (step_23 (x_65476 (Star_23 x_68073) (Star_23 x_68041)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68041 R_499) (x_65491 R_499) (x_68074 R_499) (x_68075 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (Star_23 x_68041) q_194 y_2642) (step_23 (x_65475 x_68074 x_68075) r_501 y_2642)) (step_23 (x_65476 (x_65475 x_68074 x_68075) (Star_23 x_68041)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68041 R_499) (x_65491 R_499) (x_68076 R_499) (x_68077 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (Star_23 x_68041) q_194 y_2642) (step_23 (x_65476 x_68076 x_68077) r_501 y_2642)) (step_23 (x_65476 (x_65476 x_68076 x_68077) (Star_23 x_68041)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68041 R_499) (x_65491 R_499) (x_68078 R_499) (x_68079 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (Star_23 x_68041) q_194 y_2642) (step_23 (x_65477 x_68078 x_68079) r_501 y_2642)) (step_23 (x_65476 (x_65477 x_68078 x_68079) (Star_23 x_68041)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68042 R_499) (x_68043 R_499) (x_65491 R_499) (x_68080 T_9) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (x_65475 x_68042 x_68043) q_194 y_2642) (step_23 (Atom_23 x_68080) r_501 y_2642)) (step_23 (x_65476 (Atom_23 x_68080) (x_65475 x_68042 x_68043)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68042 R_499) (x_68043 R_499) (x_65491 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (x_65475 x_68042 x_68043) q_194 y_2642) (step_23 Eps_46 r_501 y_2642)) (step_23 (x_65476 Eps_46 (x_65475 x_68042 x_68043)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68042 R_499) (x_68043 R_499) (x_65491 R_499) (x_68081 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (x_65475 x_68042 x_68043) q_194 y_2642) (step_23 (Star_23 x_68081) r_501 y_2642)) (step_23 (x_65476 (Star_23 x_68081) (x_65475 x_68042 x_68043)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68042 R_499) (x_68043 R_499) (x_65491 R_499) (x_68082 R_499) (x_68083 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (x_65475 x_68042 x_68043) q_194 y_2642) (step_23 (x_65475 x_68082 x_68083) r_501 y_2642)) (step_23 (x_65476 (x_65475 x_68082 x_68083) (x_65475 x_68042 x_68043)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68042 R_499) (x_68043 R_499) (x_65491 R_499) (x_68084 R_499) (x_68085 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (x_65475 x_68042 x_68043) q_194 y_2642) (step_23 (x_65476 x_68084 x_68085) r_501 y_2642)) (step_23 (x_65476 (x_65476 x_68084 x_68085) (x_65475 x_68042 x_68043)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68042 R_499) (x_68043 R_499) (x_65491 R_499) (x_68086 R_499) (x_68087 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (x_65475 x_68042 x_68043) q_194 y_2642) (step_23 (x_65477 x_68086 x_68087) r_501 y_2642)) (step_23 (x_65476 (x_65477 x_68086 x_68087) (x_65475 x_68042 x_68043)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68044 R_499) (x_68045 R_499) (x_65491 R_499) (x_68088 T_9) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (x_65476 x_68044 x_68045) q_194 y_2642) (step_23 (Atom_23 x_68088) r_501 y_2642)) (step_23 (x_65476 (Atom_23 x_68088) (x_65476 x_68044 x_68045)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68044 R_499) (x_68045 R_499) (x_65491 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (x_65476 x_68044 x_68045) q_194 y_2642) (step_23 Eps_46 r_501 y_2642)) (step_23 (x_65476 Eps_46 (x_65476 x_68044 x_68045)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68044 R_499) (x_68045 R_499) (x_65491 R_499) (x_68089 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (x_65476 x_68044 x_68045) q_194 y_2642) (step_23 (Star_23 x_68089) r_501 y_2642)) (step_23 (x_65476 (Star_23 x_68089) (x_65476 x_68044 x_68045)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68044 R_499) (x_68045 R_499) (x_65491 R_499) (x_68090 R_499) (x_68091 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (x_65476 x_68044 x_68045) q_194 y_2642) (step_23 (x_65475 x_68090 x_68091) r_501 y_2642)) (step_23 (x_65476 (x_65475 x_68090 x_68091) (x_65476 x_68044 x_68045)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68044 R_499) (x_68045 R_499) (x_65491 R_499) (x_68092 R_499) (x_68093 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (x_65476 x_68044 x_68045) q_194 y_2642) (step_23 (x_65476 x_68092 x_68093) r_501 y_2642)) (step_23 (x_65476 (x_65476 x_68092 x_68093) (x_65476 x_68044 x_68045)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68044 R_499) (x_68045 R_499) (x_65491 R_499) (x_68094 R_499) (x_68095 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (x_65476 x_68044 x_68045) q_194 y_2642) (step_23 (x_65477 x_68094 x_68095) r_501 y_2642)) (step_23 (x_65476 (x_65477 x_68094 x_68095) (x_65476 x_68044 x_68045)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68046 R_499) (x_68047 R_499) (x_65491 R_499) (x_68096 T_9) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (x_65477 x_68046 x_68047) q_194 y_2642) (step_23 (Atom_23 x_68096) r_501 y_2642)) (step_23 (x_65476 (Atom_23 x_68096) (x_65477 x_68046 x_68047)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68046 R_499) (x_68047 R_499) (x_65491 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (x_65477 x_68046 x_68047) q_194 y_2642) (step_23 Eps_46 r_501 y_2642)) (step_23 (x_65476 Eps_46 (x_65477 x_68046 x_68047)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68046 R_499) (x_68047 R_499) (x_65491 R_499) (x_68097 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (x_65477 x_68046 x_68047) q_194 y_2642) (step_23 (Star_23 x_68097) r_501 y_2642)) (step_23 (x_65476 (Star_23 x_68097) (x_65477 x_68046 x_68047)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68046 R_499) (x_68047 R_499) (x_65491 R_499) (x_68098 R_499) (x_68099 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (x_65477 x_68046 x_68047) q_194 y_2642) (step_23 (x_65475 x_68098 x_68099) r_501 y_2642)) (step_23 (x_65476 (x_65475 x_68098 x_68099) (x_65477 x_68046 x_68047)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68046 R_499) (x_68047 R_499) (x_65491 R_499) (x_68100 R_499) (x_68101 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (x_65477 x_68046 x_68047) q_194 y_2642) (step_23 (x_65476 x_68100 x_68101) r_501 y_2642)) (step_23 (x_65476 (x_65476 x_68100 x_68101) (x_65477 x_68046 x_68047)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_65492 R_499) (x_68046 R_499) (x_68047 R_499) (x_65491 R_499) (x_68102 R_499) (x_68103 R_499) (r_501 R_499) (q_194 R_499) (y_2642 T_9))
	(=> (and (step_23 (x_65477 x_68046 x_68047) q_194 y_2642) (step_23 (x_65477 x_68102 x_68103) r_501 y_2642)) (step_23 (x_65476 (x_65477 x_68102 x_68103) (x_65477 x_68046 x_68047)) (x_65476 r_501 q_194) y_2642))))
(assert (forall ((x_69857 R_499) (x_69858 R_499) (x_69859 R_499) (p_457 R_499) (q_195 R_499) (y_2642 T_9))
	(=> (and (step_23 x_69858 p_457 y_2642) (step_23 x_69859 q_195 y_2642) (x_65484 x_69857 x_69858 x_69859)) (step_23 x_69857 (x_65475 p_457 q_195) y_2642))))
(assert (forall ((b_65 T_9))
	(step_23 Eps_46 (Atom_23 b_65) b_65)))
(assert (forall ((b_65 T_9) (y_2642 T_9))
	(=> (diseqT_9 b_65 y_2642) (step_23 Nil_350 (Atom_23 b_65) y_2642))))
(assert (forall ((x_65493 R_499) (y_2642 T_9))
	(step_23 Nil_350 Eps_46 y_2642)))
(assert (forall ((x_65493 R_499) (y_2642 T_9))
	(step_23 Nil_350 Nil_350 y_2642)))
(declare-fun rec_9 (Bool_390 R_499 list_313) Bool)
(assert (forall ((x_69865 Bool_390) (x_69866 R_499) (z_2353 T_9) (xs_780 list_313) (x_65494 R_499))
	(=> (and (step_23 x_69866 x_65494 z_2353) (rec_9 x_69865 x_69866 xs_780)) (rec_9 x_69865 x_65494 (cons_310 z_2353 xs_780)))))
(assert (forall ((x_69868 Bool_390) (x_65494 R_499))
	(=> (eps_47 x_69868 x_65494) (rec_9 x_69868 x_65494 nil_349))))
(assert (forall ((x_69870 Bool_390) (x_69871 Bool_390) (p_458 R_499) (q_196 R_499) (r_502 R_499) (s_545 list_313))
	(=> (and true (diseqBool_181 x_69870 x_69871) (rec_9 x_69870 (x_65475 p_458 (x_65477 q_196 r_502)) s_545) (rec_9 x_69871 (x_65477 (x_65475 p_458 q_196) r_502) s_545)) false)))
(check-sat)
