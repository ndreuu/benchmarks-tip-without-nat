
(set-logic HORN)
(define-fun Z_2613 () Int 0)
(define-fun S_601 ((x Int)) Int (+ x 1))
(declare-fun diseqInt (Int Int) Bool)
(declare-fun unS_849 (Int Int) Bool)
(declare-fun isZ_547 (Int) Bool)
(declare-fun isS_547 (Int) Bool)
(assert (forall ((x_108973 Int))
	(unS_849 x_108973 (S_601 x_108973))))
(assert (isZ_547 Z_2613))
(assert (forall ((x_108975 Int))
	(isS_547 (S_601 x_108975))))
(assert (forall ((x_108976 Int))
	(diseqInt Z_2613 (S_601 x_108976))))
(assert (forall ((x_108977 Int))
	(diseqInt (S_601 x_108977) Z_2613)))
(assert (forall ((x_108978 Int) (x_108979 Int))
	(=> (diseqInt x_108978 x_108979) (diseqInt (S_601 x_108978) (S_601 x_108979)))))
(declare-fun add_454 (Int Int Int) Bool)
(declare-fun minus_445 (Int Int Int) Bool)
(declare-fun le_424 (Int Int) Bool)
(declare-fun ge_424 (Int Int) Bool)
(declare-fun lt_444 (Int Int) Bool)
(declare-fun gt_427 (Int Int) Bool)
(declare-fun mult_425 (Int Int Int) Bool)
(declare-fun div_424 (Int Int Int) Bool)
(declare-fun mod_426 (Int Int Int) Bool)
(assert (forall ((y_3018 Int))
	(add_454 y_3018 Z_2613 y_3018)))
(assert (forall ((x_108961 Int) (y_3018 Int) (r_608 Int))
	(=> (add_454 r_608 x_108961 y_3018) (add_454 (S_601 r_608) (S_601 x_108961) y_3018))))
(assert (forall ((y_3018 Int))
	(minus_445 Z_2613 Z_2613 y_3018)))
(assert (forall ((x_108961 Int) (y_3018 Int) (r_608 Int))
	(=> (minus_445 r_608 x_108961 y_3018) (minus_445 (S_601 r_608) (S_601 x_108961) y_3018))))
(assert (forall ((y_3018 Int))
	(le_424 Z_2613 y_3018)))
(assert (forall ((x_108961 Int) (y_3018 Int))
	(=> (le_424 x_108961 y_3018) (le_424 (S_601 x_108961) (S_601 y_3018)))))
(assert (forall ((y_3018 Int))
	(ge_424 y_3018 Z_2613)))
(assert (forall ((x_108961 Int) (y_3018 Int))
	(=> (ge_424 x_108961 y_3018) (ge_424 (S_601 x_108961) (S_601 y_3018)))))
(assert (forall ((y_3018 Int))
	(lt_444 Z_2613 (S_601 y_3018))))
(assert (forall ((x_108961 Int) (y_3018 Int))
	(=> (lt_444 x_108961 y_3018) (lt_444 (S_601 x_108961) (S_601 y_3018)))))
(assert (forall ((y_3018 Int))
	(gt_427 (S_601 y_3018) Z_2613)))
(assert (forall ((x_108961 Int) (y_3018 Int))
	(=> (gt_427 x_108961 y_3018) (gt_427 (S_601 x_108961) (S_601 y_3018)))))
(assert (forall ((y_3018 Int))
	(mult_425 Z_2613 Z_2613 y_3018)))
(assert (forall ((x_108961 Int) (y_3018 Int) (r_608 Int) (z_2614 Int))
	(=> (and (mult_425 r_608 x_108961 y_3018) (add_454 z_2614 r_608 y_3018)) (mult_425 z_2614 (S_601 x_108961) y_3018))))
(assert (forall ((x_108961 Int) (y_3018 Int))
	(=> (lt_444 x_108961 y_3018) (div_424 Z_2613 x_108961 y_3018))))
(assert (forall ((x_108961 Int) (y_3018 Int) (r_608 Int) (z_2614 Int))
	(=> (and (ge_424 x_108961 y_3018) (minus_445 z_2614 x_108961 y_3018) (div_424 r_608 z_2614 y_3018)) (div_424 (S_601 r_608) x_108961 y_3018))))
(assert (forall ((x_108961 Int) (y_3018 Int))
	(=> (lt_444 x_108961 y_3018) (mod_426 x_108961 x_108961 y_3018))))
(assert (forall ((x_108961 Int) (y_3018 Int) (r_608 Int) (z_2614 Int))
	(=> (and (ge_424 x_108961 y_3018) (minus_445 z_2614 x_108961 y_3018) (mod_426 r_608 z_2614 y_3018)) (mod_426 r_608 x_108961 y_3018))))
(declare-datatypes ((Bool_424 0)) (((false_424) (true_424))))
(declare-fun diseqBool_209 (Bool_424 Bool_424) Bool)
(declare-fun isfalse_209 (Bool_424) Bool)
(declare-fun istrue_209 (Bool_424) Bool)
(assert (isfalse_209 false_424))
(assert (istrue_209 true_424))
(assert (diseqBool_209 false_424 true_424))
(assert (diseqBool_209 true_424 false_424))
(declare-fun and_430 (Bool_424 Bool_424 Bool_424) Bool)
(declare-fun or_441 (Bool_424 Bool_424 Bool_424) Bool)
(declare-fun hence_424 (Bool_424 Bool_424 Bool_424) Bool)
(declare-fun not_429 (Bool_424 Bool_424) Bool)
(assert (and_430 false_424 false_424 false_424))
(assert (and_430 false_424 true_424 false_424))
(assert (and_430 false_424 false_424 true_424))
(assert (and_430 true_424 true_424 true_424))
(assert (or_441 false_424 false_424 false_424))
(assert (or_441 true_424 true_424 false_424))
(assert (or_441 true_424 false_424 true_424))
(assert (or_441 true_424 true_424 true_424))
(assert (hence_424 true_424 false_424 false_424))
(assert (hence_424 false_424 true_424 false_424))
(assert (hence_424 true_424 false_424 true_424))
(assert (hence_424 true_424 true_424 true_424))
(assert (not_429 true_424 false_424))
(assert (not_429 false_424 true_424))
(declare-datatypes ((pair_174 0)) (((pair_175 (projpair_348 Int) (projpair_349 Int)))))
(declare-fun diseqpair_87 (pair_174 pair_174) Bool)
(declare-fun projpair_350 (Int pair_174) Bool)
(declare-fun projpair_351 (Int pair_174) Bool)
(declare-fun ispair_87 (pair_174) Bool)
(assert (forall ((x_108982 Int) (x_108983 Int))
	(projpair_350 x_108982 (pair_175 x_108982 x_108983))))
(assert (forall ((x_108982 Int) (x_108983 Int))
	(projpair_351 x_108983 (pair_175 x_108982 x_108983))))
(assert (forall ((x_108985 Int) (x_108986 Int))
	(ispair_87 (pair_175 x_108985 x_108986))))
(assert (forall ((x_108987 Int) (x_108988 Int) (x_108989 Int) (x_108990 Int))
	(=> (diseqInt x_108987 x_108989) (diseqpair_87 (pair_175 x_108987 x_108988) (pair_175 x_108989 x_108990)))))
(assert (forall ((x_108987 Int) (x_108988 Int) (x_108989 Int) (x_108990 Int))
	(=> (diseqInt x_108988 x_108990) (diseqpair_87 (pair_175 x_108987 x_108988) (pair_175 x_108989 x_108990)))))
(declare-datatypes ((list_371 0)) (((nil_423) (cons_365 (head_730 Bool_424) (tail_736 list_371)))))
(declare-fun diseqlist_365 (list_371 list_371) Bool)
(declare-fun head_734 (Bool_424 list_371) Bool)
(declare-fun tail_740 (list_371 list_371) Bool)
(declare-fun isnil_423 (list_371) Bool)
(declare-fun iscons_365 (list_371) Bool)
(assert (forall ((x_108992 Bool_424) (x_108993 list_371))
	(head_734 x_108992 (cons_365 x_108992 x_108993))))
(assert (forall ((x_108992 Bool_424) (x_108993 list_371))
	(tail_740 x_108993 (cons_365 x_108992 x_108993))))
(assert (isnil_423 nil_423))
(assert (forall ((x_108995 Bool_424) (x_108996 list_371))
	(iscons_365 (cons_365 x_108995 x_108996))))
(assert (forall ((x_108997 Bool_424) (x_108998 list_371))
	(diseqlist_365 nil_423 (cons_365 x_108997 x_108998))))
(assert (forall ((x_108999 Bool_424) (x_109000 list_371))
	(diseqlist_365 (cons_365 x_108999 x_109000) nil_423)))
(assert (forall ((x_109001 Bool_424) (x_109002 list_371) (x_109003 Bool_424) (x_109004 list_371))
	(=> (diseqBool_209 x_109001 x_109003) (diseqlist_365 (cons_365 x_109001 x_109002) (cons_365 x_109003 x_109004)))))
(assert (forall ((x_109001 Bool_424) (x_109002 list_371) (x_109003 Bool_424) (x_109004 list_371))
	(=> (diseqlist_365 x_109002 x_109004) (diseqlist_365 (cons_365 x_109001 x_109002) (cons_365 x_109003 x_109004)))))
(declare-datatypes ((list_372 0)) (((nil_424) (cons_366 (head_731 Int) (tail_737 list_372)))))
(declare-fun diseqlist_366 (list_372 list_372) Bool)
(declare-fun head_735 (Int list_372) Bool)
(declare-fun tail_741 (list_372 list_372) Bool)
(declare-fun isnil_424 (list_372) Bool)
(declare-fun iscons_366 (list_372) Bool)
(assert (forall ((x_109006 Int) (x_109007 list_372))
	(head_735 x_109006 (cons_366 x_109006 x_109007))))
(assert (forall ((x_109006 Int) (x_109007 list_372))
	(tail_741 x_109007 (cons_366 x_109006 x_109007))))
(assert (isnil_424 nil_424))
(assert (forall ((x_109009 Int) (x_109010 list_372))
	(iscons_366 (cons_366 x_109009 x_109010))))
(assert (forall ((x_109011 Int) (x_109012 list_372))
	(diseqlist_366 nil_424 (cons_366 x_109011 x_109012))))
(assert (forall ((x_109013 Int) (x_109014 list_372))
	(diseqlist_366 (cons_366 x_109013 x_109014) nil_424)))
(assert (forall ((x_109015 Int) (x_109016 list_372) (x_109017 Int) (x_109018 list_372))
	(=> (diseqInt x_109015 x_109017) (diseqlist_366 (cons_366 x_109015 x_109016) (cons_366 x_109017 x_109018)))))
(assert (forall ((x_109015 Int) (x_109016 list_372) (x_109017 Int) (x_109018 list_372))
	(=> (diseqlist_366 x_109016 x_109018) (diseqlist_366 (cons_366 x_109015 x_109016) (cons_366 x_109017 x_109018)))))
(declare-datatypes ((list_373 0)) (((nil_425) (cons_367 (head_732 pair_174) (tail_738 list_373)))))
(declare-fun diseqlist_367 (list_373 list_373) Bool)
(declare-fun head_736 (pair_174 list_373) Bool)
(declare-fun tail_742 (list_373 list_373) Bool)
(declare-fun isnil_425 (list_373) Bool)
(declare-fun iscons_367 (list_373) Bool)
(assert (forall ((x_109020 pair_174) (x_109021 list_373))
	(head_736 x_109020 (cons_367 x_109020 x_109021))))
(assert (forall ((x_109020 pair_174) (x_109021 list_373))
	(tail_742 x_109021 (cons_367 x_109020 x_109021))))
(assert (isnil_425 nil_425))
(assert (forall ((x_109023 pair_174) (x_109024 list_373))
	(iscons_367 (cons_367 x_109023 x_109024))))
(assert (forall ((x_109025 pair_174) (x_109026 list_373))
	(diseqlist_367 nil_425 (cons_367 x_109025 x_109026))))
(assert (forall ((x_109027 pair_174) (x_109028 list_373))
	(diseqlist_367 (cons_367 x_109027 x_109028) nil_425)))
(assert (forall ((x_109029 pair_174) (x_109030 list_373) (x_109031 pair_174) (x_109032 list_373))
	(=> (diseqpair_87 x_109029 x_109031) (diseqlist_367 (cons_367 x_109029 x_109030) (cons_367 x_109031 x_109032)))))
(assert (forall ((x_109029 pair_174) (x_109030 list_373) (x_109031 pair_174) (x_109032 list_373))
	(=> (diseqlist_367 x_109030 x_109032) (diseqlist_367 (cons_367 x_109029 x_109030) (cons_367 x_109031 x_109032)))))
(declare-datatypes ((list_374 0)) (((nil_426) (cons_368 (head_733 list_373) (tail_739 list_374)))))
(declare-fun diseqlist_368 (list_374 list_374) Bool)
(declare-fun head_737 (list_373 list_374) Bool)
(declare-fun tail_743 (list_374 list_374) Bool)
(declare-fun isnil_426 (list_374) Bool)
(declare-fun iscons_368 (list_374) Bool)
(assert (forall ((x_109034 list_373) (x_109035 list_374))
	(head_737 x_109034 (cons_368 x_109034 x_109035))))
(assert (forall ((x_109034 list_373) (x_109035 list_374))
	(tail_743 x_109035 (cons_368 x_109034 x_109035))))
(assert (isnil_426 nil_426))
(assert (forall ((x_109037 list_373) (x_109038 list_374))
	(iscons_368 (cons_368 x_109037 x_109038))))
(assert (forall ((x_109039 list_373) (x_109040 list_374))
	(diseqlist_368 nil_426 (cons_368 x_109039 x_109040))))
(assert (forall ((x_109041 list_373) (x_109042 list_374))
	(diseqlist_368 (cons_368 x_109041 x_109042) nil_426)))
(assert (forall ((x_109043 list_373) (x_109044 list_374) (x_109045 list_373) (x_109046 list_374))
	(=> (diseqlist_367 x_109043 x_109045) (diseqlist_368 (cons_368 x_109043 x_109044) (cons_368 x_109045 x_109046)))))
(assert (forall ((x_109043 list_373) (x_109044 list_374) (x_109045 list_373) (x_109046 list_374))
	(=> (diseqlist_368 x_109044 x_109046) (diseqlist_368 (cons_368 x_109043 x_109044) (cons_368 x_109045 x_109046)))))
(declare-datatypes ((Maybe_21 0)) (((Nothing_21) (Just_21 (projJust_42 Int)))))
(declare-fun diseqMaybe_21 (Maybe_21 Maybe_21) Bool)
(declare-fun projJust_43 (Int Maybe_21) Bool)
(declare-fun isNothing_21 (Maybe_21) Bool)
(declare-fun isJust_21 (Maybe_21) Bool)
(assert (forall ((x_109048 Int))
	(projJust_43 x_109048 (Just_21 x_109048))))
(assert (isNothing_21 Nothing_21))
(assert (forall ((x_109050 Int))
	(isJust_21 (Just_21 x_109050))))
(assert (forall ((x_109051 Int))
	(diseqMaybe_21 Nothing_21 (Just_21 x_109051))))
(assert (forall ((x_109052 Int))
	(diseqMaybe_21 (Just_21 x_109052) Nothing_21)))
(assert (forall ((x_109053 Int) (x_109054 Int))
	(=> (diseqInt x_109053 x_109054) (diseqMaybe_21 (Just_21 x_109053) (Just_21 x_109054)))))
(declare-fun primEnumFromTo_10 (list_372 Int Int) Bool)
(assert (forall ((x_108876 Int) (y_3007 Int))
	(=> (gt_427 x_108876 y_3007) (primEnumFromTo_10 nil_424 x_108876 y_3007))))
(assert (forall ((x_108962 Int) (x_108893 list_372) (x_108876 Int) (y_3007 Int))
	(=> (and (le_424 x_108876 y_3007) (primEnumFromTo_10 x_108893 x_108962 y_3007) (add_454 x_108962 (S_601 Z_2613) x_108876)) (primEnumFromTo_10 (cons_366 x_108876 x_108893) x_108876 y_3007))))
(declare-fun petersen_24 (list_373 Int list_372) Bool)
(assert (forall ((x_108963 Int) (x_108895 list_373) (z_2606 Int) (x_108878 list_372) (x_108877 Int))
	(=> (and (petersen_24 x_108895 x_108877 x_108878) (add_454 x_108963 x_108877 z_2606)) (petersen_24 (cons_367 (pair_175 z_2606 x_108963) x_108895) x_108877 (cons_366 z_2606 x_108878)))))
(assert (forall ((x_108877 Int))
	(petersen_24 nil_425 x_108877 nil_424)))
(declare-fun petersen_25 (list_373 list_372) Bool)
(assert (forall ((x_108964 Int) (x_108898 list_373) (y_3009 Int) (z_2607 list_372))
	(=> (and (petersen_25 x_108898 z_2607) (add_454 x_108964 (S_601 Z_2613) y_3009)) (petersen_25 (cons_367 (pair_175 y_3009 x_108964) x_108898) (cons_366 y_3009 z_2607)))))
(assert (petersen_25 nil_425 nil_424))
(declare-fun petersen_26 (list_374 Int list_373) Bool)
(assert (forall ((x_108965 Int) (x_108966 Int) (x_108901 list_374) (u_25 Int) (v_25 Int) (x_108881 list_373) (x_108880 Int))
	(=> (and (petersen_26 x_108901 x_108880 x_108881) (add_454 x_108965 x_108880 u_25) (add_454 x_108966 x_108880 v_25)) (petersen_26 (cons_368 (cons_367 (pair_175 u_25 v_25) (cons_367 (pair_175 x_108965 x_108966) nil_425)) x_108901) x_108880 (cons_367 (pair_175 u_25 v_25) x_108881)))))
(assert (forall ((x_108880 Int))
	(petersen_26 nil_426 x_108880 nil_425)))
(declare-fun index_5 (Maybe_21 list_372 Int) Bool)
(assert (forall ((z_2609 Int) (xs_862 list_372))
	(index_5 (Just_21 z_2609) (cons_366 z_2609 xs_862) Z_2613)))
(assert (forall ((x_108967 Int) (x_108904 Maybe_21) (z_2609 Int) (xs_862 list_372) (y_3011 Int))
	(=> (and (diseqInt y_3011 Z_2613) (index_5 x_108904 xs_862 x_108967) (minus_445 x_108967 y_3011 (S_601 Z_2613))) (index_5 x_108904 (cons_366 z_2609 xs_862) y_3011))))
(assert (forall ((y_3011 Int))
	(index_5 Nothing_21 nil_424 y_3011)))
(declare-fun formula_9 (list_371 list_372) Bool)
(assert (forall ((x_108908 list_371) (y_3012 Int) (z_2610 list_372))
	(=> (and (lt_444 y_3012 (S_601 (S_601 (S_601 Z_2613)))) (formula_9 x_108908 z_2610)) (formula_9 (cons_365 true_424 x_108908) (cons_366 y_3012 z_2610)))))
(assert (forall ((x_108910 list_371) (y_3012 Int) (z_2610 list_372))
	(=> (and (ge_424 y_3012 (S_601 (S_601 (S_601 Z_2613)))) (formula_9 x_108910 z_2610)) (formula_9 (cons_365 false_424 x_108910) (cons_366 y_3012 z_2610)))))
(assert (formula_9 nil_423 nil_424))
(declare-fun colouring_10 (list_371 list_372 list_373) Bool)
(assert (forall ((x_108915 list_371) (c_66 Int) (u_26 Int) (v_26 Int) (z_2611 list_373) (a_112 list_372))
	(=> (and (colouring_10 x_108915 a_112 z_2611) (index_5 (Just_21 c_66) a_112 v_26) (index_5 (Just_21 c_66) a_112 u_26)) (colouring_10 (cons_365 false_424 x_108915) a_112 (cons_367 (pair_175 u_26 v_26) z_2611)))))
(assert (forall ((x_108919 list_371) (c_67 Int) (c_66 Int) (u_26 Int) (v_26 Int) (z_2611 list_373) (a_112 list_372))
	(=> (and (diseqInt c_66 c_67) (colouring_10 x_108919 a_112 z_2611) (index_5 (Just_21 c_67) a_112 v_26) (index_5 (Just_21 c_66) a_112 u_26)) (colouring_10 (cons_365 true_424 x_108919) a_112 (cons_367 (pair_175 u_26 v_26) z_2611)))))
(assert (forall ((x_108923 list_371) (c_66 Int) (u_26 Int) (v_26 Int) (z_2611 list_373) (a_112 list_372))
	(=> (and (colouring_10 x_108923 a_112 z_2611) (index_5 Nothing_21 a_112 v_26) (index_5 (Just_21 c_66) a_112 u_26)) (colouring_10 (cons_365 false_424 x_108923) a_112 (cons_367 (pair_175 u_26 v_26) z_2611)))))
(assert (forall ((x_108926 list_371) (u_26 Int) (v_26 Int) (z_2611 list_373) (a_112 list_372))
	(=> (and (colouring_10 x_108926 a_112 z_2611) (index_5 Nothing_21 a_112 u_26)) (colouring_10 (cons_365 false_424 x_108926) a_112 (cons_367 (pair_175 u_26 v_26) z_2611)))))
(assert (forall ((a_112 list_372))
	(colouring_10 nil_423 a_112 nil_425)))
(declare-fun and_429 (Bool_424 list_371) Bool)
(assert (forall ((x_108928 Bool_424) (x_108929 Bool_424) (y_3014 Bool_424) (xs_863 list_371))
	(=> (and (and_429 x_108929 xs_863) (and_430 x_108928 y_3014 x_108929)) (and_429 x_108928 (cons_365 y_3014 xs_863)))))
(assert (and_429 true_424 nil_423))
(declare-fun colouring_11 (Bool_424 list_373 list_372) Bool)
(assert (forall ((x_108931 Bool_424) (x_108932 list_371) (x_108886 list_373) (y_3015 list_372))
	(=> (and (colouring_10 x_108932 y_3015 x_108886) (and_429 x_108931 x_108932)) (colouring_11 x_108931 x_108886 y_3015))))
(declare-fun x_108887 (list_373 list_373 list_373) Bool)
(assert (forall ((x_108935 list_373) (z_2612 pair_174) (xs_864 list_373) (y_3016 list_373))
	(=> (x_108887 x_108935 xs_864 y_3016) (x_108887 (cons_367 z_2612 x_108935) (cons_367 z_2612 xs_864) y_3016))))
(assert (forall ((x_108936 list_373))
	(x_108887 x_108936 nil_425 x_108936)))
(declare-fun concat_8 (list_373 list_374) Bool)
(assert (forall ((x_108937 list_373) (x_108938 list_373) (y_3017 list_373) (xs_865 list_374))
	(=> (and (concat_8 x_108938 xs_865) (x_108887 x_108937 y_3017 x_108938)) (concat_8 x_108937 (cons_368 y_3017 xs_865)))))
(assert (concat_8 nil_425 nil_426))
(declare-fun petersen_27 (list_373 Int) Bool)
(assert (petersen_27 nil_425 Z_2613))
(assert (forall ((x_108969 Int) (x_108968 Int) (x_108942 list_373) (x_108943 list_372) (x_108944 list_373) (x_108945 list_374) (x_108946 list_373) (x_108947 list_372) (x_108948 list_373) (x_108890 Int))
	(=> (and (diseqInt x_108890 Z_2613) (primEnumFromTo_10 x_108943 Z_2613 x_108968) (petersen_25 x_108944 x_108943) (petersen_26 x_108945 x_108890 (cons_367 (pair_175 x_108969 Z_2613) x_108944)) (concat_8 x_108946 x_108945) (primEnumFromTo_10 x_108947 Z_2613 x_108890) (petersen_24 x_108948 x_108890 x_108947) (x_108887 x_108942 x_108946 x_108948) (minus_445 x_108969 x_108890 (S_601 Z_2613)) (minus_445 x_108968 x_108890 (S_601 Z_2613))) (petersen_27 x_108942 x_108890))))
(assert (forall ((x_108971 Int) (x_108970 Int) (x_108958 list_371) (x_108950 list_372) (x_108951 list_373) (x_108952 list_374) (x_108953 list_373) (x_108954 list_372) (x_108955 list_373) (x_108956 list_373) (a_113 list_372))
	(=> (and true true (formula_9 x_108958 a_113) (and_429 true_424 x_108958) (primEnumFromTo_10 x_108950 Z_2613 x_108970) (petersen_25 x_108951 x_108950) (petersen_26 x_108952 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 Z_2613))))))))))) (cons_367 (pair_175 x_108971 Z_2613) x_108951)) (concat_8 x_108953 x_108952) (primEnumFromTo_10 x_108954 Z_2613 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 Z_2613)))))))))))) (petersen_24 x_108955 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 Z_2613))))))))))) x_108954) (x_108887 x_108956 x_108953 x_108955) (colouring_11 true_424 x_108956 a_113) (minus_445 x_108971 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 Z_2613))))))))))) (S_601 Z_2613)) (minus_445 x_108970 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 (S_601 Z_2613))))))))))) (S_601 Z_2613))) false)))
(check-sat)
