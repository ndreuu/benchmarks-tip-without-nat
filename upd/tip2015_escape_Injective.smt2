
(set-logic HORN)
(declare-datatypes ((Bool_213 0)) (((false_213) (true_213))))
(declare-fun diseqBool_96 (Bool_213 Bool_213) Bool)
(declare-fun isfalse_96 (Bool_213) Bool)
(declare-fun istrue_96 (Bool_213) Bool)
(assert (isfalse_96 false_213))
(assert (istrue_96 true_213))
(assert (diseqBool_96 false_213 true_213))
(assert (diseqBool_96 true_213 false_213))
(declare-fun and_213 (Bool_213 Bool_213 Bool_213) Bool)
(declare-fun or_217 (Bool_213 Bool_213 Bool_213) Bool)
(declare-fun hence_213 (Bool_213 Bool_213 Bool_213) Bool)
(declare-fun not_216 (Bool_213 Bool_213) Bool)
(assert (and_213 false_213 false_213 false_213))
(assert (and_213 false_213 true_213 false_213))
(assert (and_213 false_213 false_213 true_213))
(assert (and_213 true_213 true_213 true_213))
(assert (or_217 false_213 false_213 false_213))
(assert (or_217 true_213 true_213 false_213))
(assert (or_217 true_213 false_213 true_213))
(assert (or_217 true_213 true_213 true_213))
(assert (hence_213 true_213 false_213 false_213))
(assert (hence_213 false_213 true_213 false_213))
(assert (hence_213 true_213 false_213 true_213))
(assert (hence_213 true_213 true_213 true_213))
(assert (not_216 true_213 false_213))
(assert (not_216 false_213 true_213))
(declare-datatypes ((Token_1 0)) (((A_36) (B_25) (C_13) (D_4) (ESC_1) (P_232) (Q_80) (R_259))))
(declare-fun diseqToken_1 (Token_1 Token_1) Bool)
(declare-fun isA_3 (Token_1) Bool)
(declare-fun isB_3 (Token_1) Bool)
(declare-fun isC_3 (Token_1) Bool)
(declare-fun isD_1 (Token_1) Bool)
(declare-fun isESC_1 (Token_1) Bool)
(declare-fun isP_6 (Token_1) Bool)
(declare-fun isQ_1 (Token_1) Bool)
(declare-fun isR_1 (Token_1) Bool)
(assert (isA_3 A_36))
(assert (isB_3 B_25))
(assert (isC_3 C_13))
(assert (isD_1 D_4))
(assert (isESC_1 ESC_1))
(assert (isP_6 P_232))
(assert (isQ_1 Q_80))
(assert (isR_1 R_259))
(assert (diseqToken_1 A_36 B_25))
(assert (diseqToken_1 A_36 C_13))
(assert (diseqToken_1 A_36 D_4))
(assert (diseqToken_1 A_36 ESC_1))
(assert (diseqToken_1 A_36 P_232))
(assert (diseqToken_1 A_36 Q_80))
(assert (diseqToken_1 A_36 R_259))
(assert (diseqToken_1 B_25 A_36))
(assert (diseqToken_1 C_13 A_36))
(assert (diseqToken_1 D_4 A_36))
(assert (diseqToken_1 ESC_1 A_36))
(assert (diseqToken_1 P_232 A_36))
(assert (diseqToken_1 Q_80 A_36))
(assert (diseqToken_1 R_259 A_36))
(assert (diseqToken_1 B_25 C_13))
(assert (diseqToken_1 B_25 D_4))
(assert (diseqToken_1 B_25 ESC_1))
(assert (diseqToken_1 B_25 P_232))
(assert (diseqToken_1 B_25 Q_80))
(assert (diseqToken_1 B_25 R_259))
(assert (diseqToken_1 C_13 B_25))
(assert (diseqToken_1 D_4 B_25))
(assert (diseqToken_1 ESC_1 B_25))
(assert (diseqToken_1 P_232 B_25))
(assert (diseqToken_1 Q_80 B_25))
(assert (diseqToken_1 R_259 B_25))
(assert (diseqToken_1 C_13 D_4))
(assert (diseqToken_1 C_13 ESC_1))
(assert (diseqToken_1 C_13 P_232))
(assert (diseqToken_1 C_13 Q_80))
(assert (diseqToken_1 C_13 R_259))
(assert (diseqToken_1 D_4 C_13))
(assert (diseqToken_1 ESC_1 C_13))
(assert (diseqToken_1 P_232 C_13))
(assert (diseqToken_1 Q_80 C_13))
(assert (diseqToken_1 R_259 C_13))
(assert (diseqToken_1 D_4 ESC_1))
(assert (diseqToken_1 D_4 P_232))
(assert (diseqToken_1 D_4 Q_80))
(assert (diseqToken_1 D_4 R_259))
(assert (diseqToken_1 ESC_1 D_4))
(assert (diseqToken_1 P_232 D_4))
(assert (diseqToken_1 Q_80 D_4))
(assert (diseqToken_1 R_259 D_4))
(assert (diseqToken_1 ESC_1 P_232))
(assert (diseqToken_1 ESC_1 Q_80))
(assert (diseqToken_1 ESC_1 R_259))
(assert (diseqToken_1 P_232 ESC_1))
(assert (diseqToken_1 Q_80 ESC_1))
(assert (diseqToken_1 R_259 ESC_1))
(assert (diseqToken_1 P_232 Q_80))
(assert (diseqToken_1 P_232 R_259))
(assert (diseqToken_1 Q_80 P_232))
(assert (diseqToken_1 R_259 P_232))
(assert (diseqToken_1 Q_80 R_259))
(assert (diseqToken_1 R_259 Q_80))
(declare-datatypes ((list_147 0)) (((nil_166) (cons_147 (head_294 Token_1) (tail_294 list_147)))))
(declare-fun diseqlist_147 (list_147 list_147) Bool)
(declare-fun head_295 (Token_1 list_147) Bool)
(declare-fun tail_295 (list_147 list_147) Bool)
(declare-fun isnil_166 (list_147) Bool)
(declare-fun iscons_147 (list_147) Bool)
(assert (forall ((x_34422 Token_1) (x_34423 list_147))
	(head_295 x_34422 (cons_147 x_34422 x_34423))))
(assert (forall ((x_34422 Token_1) (x_34423 list_147))
	(tail_295 x_34423 (cons_147 x_34422 x_34423))))
(assert (isnil_166 nil_166))
(assert (forall ((x_34425 Token_1) (x_34426 list_147))
	(iscons_147 (cons_147 x_34425 x_34426))))
(assert (forall ((x_34427 Token_1) (x_34428 list_147))
	(diseqlist_147 nil_166 (cons_147 x_34427 x_34428))))
(assert (forall ((x_34429 Token_1) (x_34430 list_147))
	(diseqlist_147 (cons_147 x_34429 x_34430) nil_166)))
(assert (forall ((x_34431 Token_1) (x_34432 list_147) (x_34433 Token_1) (x_34434 list_147))
	(=> (diseqToken_1 x_34431 x_34433) (diseqlist_147 (cons_147 x_34431 x_34432) (cons_147 x_34433 x_34434)))))
(assert (forall ((x_34431 Token_1) (x_34432 list_147) (x_34433 Token_1) (x_34434 list_147))
	(=> (diseqlist_147 x_34432 x_34434) (diseqlist_147 (cons_147 x_34431 x_34432) (cons_147 x_34433 x_34434)))))
(declare-fun isSpecial_1 (Bool_213 Token_1) Bool)
(assert (isSpecial_1 true_213 R_259))
(assert (isSpecial_1 true_213 Q_80))
(assert (isSpecial_1 true_213 P_232))
(assert (isSpecial_1 true_213 ESC_1))
(assert (forall ((x_34380 Token_1))
	(isSpecial_1 false_213 A_36)))
(assert (forall ((x_34380 Token_1))
	(isSpecial_1 false_213 B_25)))
(assert (forall ((x_34380 Token_1))
	(isSpecial_1 false_213 C_13)))
(assert (forall ((x_34380 Token_1))
	(isSpecial_1 false_213 D_4)))
(declare-fun code_1 (Token_1 Token_1) Bool)
(assert (code_1 C_13 R_259))
(assert (code_1 B_25 Q_80))
(assert (code_1 A_36 P_232))
(assert (code_1 ESC_1 ESC_1))
(assert (forall ((x_34382 Token_1))
	(code_1 A_36 A_36)))
(assert (forall ((x_34382 Token_1))
	(code_1 B_25 B_25)))
(assert (forall ((x_34382 Token_1))
	(code_1 C_13 C_13)))
(assert (forall ((x_34382 Token_1))
	(code_1 D_4 D_4)))
(declare-fun escape_1 (list_147 list_147) Bool)
(assert (forall ((x_34402 Token_1) (x_34403 list_147) (y_1350 Token_1) (xs_394 list_147))
	(=> (and (code_1 x_34402 y_1350) (escape_1 x_34403 xs_394) (isSpecial_1 true_213 y_1350)) (escape_1 (cons_147 ESC_1 (cons_147 x_34402 x_34403)) (cons_147 y_1350 xs_394)))))
(assert (forall ((x_34406 list_147) (y_1350 Token_1) (xs_394 list_147))
	(=> (and (escape_1 x_34406 xs_394) (isSpecial_1 false_213 y_1350)) (escape_1 (cons_147 y_1350 x_34406) (cons_147 y_1350 xs_394)))))
(assert (escape_1 nil_166 nil_166))
(assert (forall ((x_34408 list_147) (xs_395 list_147) (ys_127 list_147))
	(=> (and true (diseqlist_147 xs_395 ys_127) (escape_1 x_34408 xs_395) (escape_1 x_34408 ys_127)) false)))
(check-sat)
