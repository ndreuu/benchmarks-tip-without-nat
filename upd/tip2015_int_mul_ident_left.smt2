
(set-logic HORN)
(define-fun zero_119 () Int 0)
(define-fun succ_116 ((x Int)) Int (+ x 1))
(declare-datatypes ((Sign_8 0)) (((Pos_4) (Neg_5))))
(declare-fun diseqSign_4 (Sign_8 Sign_8) Bool)
(declare-fun isPos_4 (Sign_8) Bool)
(declare-fun isNeg_4 (Sign_8) Bool)
(assert (isPos_4 Pos_4))
(assert (isNeg_4 Neg_5))
(assert (diseqSign_4 Pos_4 Neg_5))
(assert (diseqSign_4 Neg_5 Pos_4))
(declare-fun diseqInt (Int Int) Bool)
(declare-fun p_332 (Int Int) Bool)
(declare-fun iszero_116 (Int) Bool)
(declare-fun issucc_116 (Int) Bool)
(assert (forall ((x_50500 Int))
	(p_332 x_50500 (succ_116 x_50500))))
(assert (iszero_116 zero_119))
(assert (forall ((x_50502 Int))
	(issucc_116 (succ_116 x_50502))))
(assert (forall ((x_50503 Int))
	(diseqInt zero_119 (succ_116 x_50503))))
(assert (forall ((x_50504 Int))
	(diseqInt (succ_116 x_50504) zero_119)))
(assert (forall ((x_50505 Int) (x_50506 Int))
	(=> (diseqInt x_50505 x_50506) (diseqInt (succ_116 x_50505) (succ_116 x_50506)))))
(declare-datatypes ((Integer_9 0)) (((P_331 (projP_18 Int)) (N_94 (projN_18 Int)))))
(declare-fun diseqInteger_9 (Integer_9 Integer_9) Bool)
(declare-fun projP_19 (Int Integer_9) Bool)
(declare-fun projN_19 (Int Integer_9) Bool)
(declare-fun isP_11 (Integer_9) Bool)
(declare-fun isN_9 (Integer_9) Bool)
(assert (forall ((x_50507 Int))
	(projP_19 x_50507 (P_331 x_50507))))
(assert (forall ((x_50509 Int))
	(projN_19 x_50509 (N_94 x_50509))))
(assert (forall ((x_50511 Int))
	(isP_11 (P_331 x_50511))))
(assert (forall ((x_50512 Int))
	(isN_9 (N_94 x_50512))))
(assert (forall ((x_50513 Int) (x_50514 Int))
	(diseqInteger_9 (P_331 x_50513) (N_94 x_50514))))
(assert (forall ((x_50515 Int) (x_50516 Int))
	(diseqInteger_9 (N_94 x_50515) (P_331 x_50516))))
(assert (forall ((x_50517 Int) (x_50518 Int))
	(=> (diseqInt x_50517 x_50518) (diseqInteger_9 (P_331 x_50517) (P_331 x_50518)))))
(assert (forall ((x_50519 Int) (x_50520 Int))
	(=> (diseqInt x_50519 x_50520) (diseqInteger_9 (N_94 x_50519) (N_94 x_50520)))))
(declare-fun toInteger_4 (Integer_9 Sign_8 Int) Bool)
(assert (forall ((z_1643 Int))
	(toInteger_4 (N_94 z_1643) Neg_5 (succ_116 z_1643))))
(assert (toInteger_4 (P_331 zero_119) Neg_5 zero_119))
(assert (forall ((y_1840 Int))
	(toInteger_4 (P_331 y_1840) Pos_4 y_1840)))
(declare-fun sign_9 (Sign_8 Integer_9) Bool)
(assert (forall ((z_1644 Int))
	(sign_9 Neg_5 (N_94 z_1644))))
(assert (forall ((y_1841 Int))
	(sign_9 Pos_4 (P_331 y_1841))))
(declare-fun plus_116 (Int Int Int) Bool)
(assert (forall ((x_50443 Int) (z_1645 Int) (y_1842 Int))
	(=> (plus_116 x_50443 z_1645 y_1842) (plus_116 (succ_116 x_50443) (succ_116 z_1645) y_1842))))
(assert (forall ((x_50444 Int))
	(plus_116 x_50444 zero_119 x_50444)))
(declare-fun times_28 (Int Int Int) Bool)
(assert (forall ((x_50445 Int) (x_50446 Int) (z_1646 Int) (y_1843 Int))
	(=> (and (times_28 x_50446 z_1646 y_1843) (plus_116 x_50445 y_1843 x_50446)) (times_28 x_50445 (succ_116 z_1646) y_1843))))
(assert (forall ((y_1843 Int))
	(times_28 zero_119 zero_119 y_1843)))
(declare-fun opposite_4 (Sign_8 Sign_8) Bool)
(assert (opposite_4 Pos_4 Neg_5))
(assert (opposite_4 Neg_5 Pos_4))
(declare-fun timesSign_4 (Sign_8 Sign_8 Sign_8) Bool)
(assert (forall ((x_50451 Sign_8) (y_1844 Sign_8))
	(=> (opposite_4 x_50451 y_1844) (timesSign_4 x_50451 Neg_5 y_1844))))
(assert (forall ((x_50453 Sign_8))
	(timesSign_4 x_50453 Pos_4 x_50453)))
(declare-fun one_14 (Integer_9) Bool)
(assert (one_14 (P_331 (succ_116 zero_119))))
(declare-fun absVal_4 (Int Integer_9) Bool)
(assert (forall ((x_50455 Int) (m_36 Int))
	(=> (plus_116 x_50455 (succ_116 zero_119) m_36) (absVal_4 x_50455 (N_94 m_36)))))
(assert (forall ((n_95 Int))
	(absVal_4 n_95 (P_331 n_95))))
(declare-fun times_29 (Integer_9 Integer_9 Integer_9) Bool)
(assert (forall ((x_50458 Integer_9) (x_50459 Sign_8) (x_50460 Sign_8) (x_50461 Sign_8) (x_50462 Int) (x_50463 Int) (x_50464 Int) (x_50423 Integer_9) (y_1845 Integer_9))
	(=> (and (sign_9 x_50459 x_50423) (sign_9 x_50460 y_1845) (timesSign_4 x_50461 x_50459 x_50460) (absVal_4 x_50462 x_50423) (absVal_4 x_50463 y_1845) (times_28 x_50464 x_50462 x_50463) (toInteger_4 x_50458 x_50461 x_50464)) (times_29 x_50458 x_50423 y_1845))))
(assert (forall ((x_50466 Integer_9) (x_50467 Integer_9) (x_50424 Integer_9))
	(=> (and true (diseqInteger_9 x_50424 x_50467) (one_14 x_50466) (times_29 x_50467 x_50466 x_50424)) false)))
(assert (forall ((x_50468 Int) (x_50469 Int) (x_50470 Int) (x_50471 Int) (x_50425 Int) (y_1846 Int) (z_1647 Int))
	(=> (and true (diseqInt x_50469 x_50471) (times_28 x_50468 y_1846 z_1647) (times_28 x_50469 x_50425 x_50468) (times_28 x_50470 x_50425 y_1846) (times_28 x_50471 x_50470 z_1647)) false)))
(assert (forall ((x_50472 Int) (x_50473 Int) (x_50474 Int) (x_50475 Int) (x_50426 Int) (y_1847 Int) (z_1648 Int))
	(=> (and true (diseqInt x_50473 x_50475) (plus_116 x_50472 y_1847 z_1648) (plus_116 x_50473 x_50426 x_50472) (plus_116 x_50474 x_50426 y_1847) (plus_116 x_50475 x_50474 z_1648)) false)))
(assert (forall ((x_50476 Int) (x_50477 Int) (x_50427 Int) (y_1848 Int))
	(=> (and true (diseqInt x_50476 x_50477) (times_28 x_50476 x_50427 y_1848) (times_28 x_50477 y_1848 x_50427)) false)))
(assert (forall ((x_50478 Int) (x_50479 Int) (x_50428 Int) (y_1849 Int))
	(=> (and true (diseqInt x_50478 x_50479) (plus_116 x_50478 x_50428 y_1849) (plus_116 x_50479 y_1849 x_50428)) false)))
(assert (forall ((x_50480 Int) (x_50481 Int) (x_50482 Int) (x_50483 Int) (x_50484 Int) (x_50429 Int) (y_1850 Int) (z_1649 Int))
	(=> (and true (diseqInt x_50481 x_50484) (plus_116 x_50480 y_1850 z_1649) (times_28 x_50481 x_50429 x_50480) (times_28 x_50482 x_50429 y_1850) (times_28 x_50483 x_50429 z_1649) (plus_116 x_50484 x_50482 x_50483)) false)))
(assert (forall ((x_50485 Int) (x_50486 Int) (x_50487 Int) (x_50488 Int) (x_50489 Int) (x_50430 Int) (y_1851 Int) (z_1650 Int))
	(=> (and true (diseqInt x_50486 x_50489) (plus_116 x_50485 x_50430 y_1851) (times_28 x_50486 x_50485 z_1650) (times_28 x_50487 x_50430 z_1650) (times_28 x_50488 y_1851 z_1650) (plus_116 x_50489 x_50487 x_50488)) false)))
(assert (forall ((x_50490 Int) (x_50431 Int))
	(=> (and true (diseqInt x_50490 x_50431) (times_28 x_50490 x_50431 (succ_116 zero_119))) false)))
(assert (forall ((x_50491 Int) (x_50432 Int))
	(=> (and true (diseqInt x_50491 x_50432) (times_28 x_50491 (succ_116 zero_119) x_50432)) false)))
(assert (forall ((x_50492 Int) (x_50433 Int))
	(=> (and true (diseqInt x_50492 x_50433) (plus_116 x_50492 x_50433 zero_119)) false)))
(assert (forall ((x_50493 Int) (x_50434 Int))
	(=> (and true (diseqInt x_50493 x_50434) (plus_116 x_50493 zero_119 x_50434)) false)))
(assert (forall ((x_50494 Int) (x_50435 Int))
	(=> (and true (diseqInt x_50494 zero_119) (times_28 x_50494 x_50435 zero_119)) false)))
(assert (forall ((x_50495 Int) (x_50436 Int))
	(=> (and true (diseqInt x_50495 zero_119) (times_28 x_50495 zero_119 x_50436)) false)))
(check-sat)
