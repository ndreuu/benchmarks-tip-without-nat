
(set-logic HORN)
(define-fun Z_295 () Int 0)
(define-fun S_104 ((x Int)) Int (+ x 1))
(declare-datatypes ((Bool_54 0)) (((false_54) (true_54))))
(declare-fun diseqBool_22 (Bool_54 Bool_54) Bool)
(declare-fun isfalse_22 (Bool_54) Bool)
(declare-fun istrue_22 (Bool_54) Bool)
(assert (isfalse_22 false_54))
(assert (istrue_22 true_54))
(assert (diseqBool_22 false_54 true_54))
(assert (diseqBool_22 true_54 false_54))
(declare-fun and_54 (Bool_54 Bool_54 Bool_54) Bool)
(declare-fun or_54 (Bool_54 Bool_54 Bool_54) Bool)
(declare-fun hence_54 (Bool_54 Bool_54 Bool_54) Bool)
(declare-fun not_54 (Bool_54 Bool_54) Bool)
(assert (and_54 false_54 false_54 false_54))
(assert (and_54 false_54 true_54 false_54))
(assert (and_54 false_54 false_54 true_54))
(assert (and_54 true_54 true_54 true_54))
(assert (or_54 false_54 false_54 false_54))
(assert (or_54 true_54 true_54 false_54))
(assert (or_54 true_54 false_54 true_54))
(assert (or_54 true_54 true_54 true_54))
(assert (hence_54 true_54 false_54 false_54))
(assert (hence_54 false_54 true_54 false_54))
(assert (hence_54 true_54 false_54 true_54))
(assert (hence_54 true_54 true_54 true_54))
(assert (not_54 true_54 false_54))
(assert (not_54 false_54 true_54))
(declare-fun diseqInt (Int Int) Bool)
(declare-fun projS_101 (Int Int) Bool)
(declare-fun isZ_104 (Int) Bool)
(declare-fun isS_104 (Int) Bool)
(assert (forall ((x_2912 Int))
	(projS_101 x_2912 (S_104 x_2912))))
(assert (isZ_104 Z_295))
(assert (forall ((x_2914 Int))
	(isS_104 (S_104 x_2914))))
(assert (forall ((x_2915 Int))
	(diseqInt Z_295 (S_104 x_2915))))
(assert (forall ((x_2916 Int))
	(diseqInt (S_104 x_2916) Z_295)))
(assert (forall ((x_2917 Int) (x_2918 Int))
	(=> (diseqInt x_2917 x_2918) (diseqInt (S_104 x_2917) (S_104 x_2918)))))
(declare-datatypes ((list_49 0)) (((nil_49) (cons_49 (head_98 Int) (tail_98 list_49)))))
(declare-fun diseqlist_49 (list_49 list_49) Bool)
(declare-fun head_99 (Int list_49) Bool)
(declare-fun tail_99 (list_49 list_49) Bool)
(declare-fun isnil_49 (list_49) Bool)
(declare-fun iscons_49 (list_49) Bool)
(assert (forall ((x_2920 Int) (x_2921 list_49))
	(head_99 x_2920 (cons_49 x_2920 x_2921))))
(assert (forall ((x_2920 Int) (x_2921 list_49))
	(tail_99 x_2921 (cons_49 x_2920 x_2921))))
(assert (isnil_49 nil_49))
(assert (forall ((x_2923 Int) (x_2924 list_49))
	(iscons_49 (cons_49 x_2923 x_2924))))
(assert (forall ((x_2925 Int) (x_2926 list_49))
	(diseqlist_49 nil_49 (cons_49 x_2925 x_2926))))
(assert (forall ((x_2927 Int) (x_2928 list_49))
	(diseqlist_49 (cons_49 x_2927 x_2928) nil_49)))
(assert (forall ((x_2929 Int) (x_2930 list_49) (x_2931 Int) (x_2932 list_49))
	(=> (diseqInt x_2929 x_2931) (diseqlist_49 (cons_49 x_2929 x_2930) (cons_49 x_2931 x_2932)))))
(assert (forall ((x_2929 Int) (x_2930 list_49) (x_2931 Int) (x_2932 list_49))
	(=> (diseqlist_49 x_2930 x_2932) (diseqlist_49 (cons_49 x_2929 x_2930) (cons_49 x_2931 x_2932)))))
(declare-fun len_9 (Int list_49) Bool)
(assert (forall ((x_2889 Int) (y_233 Int) (xs_87 list_49))
	(=> (len_9 x_2889 xs_87) (len_9 (S_104 x_2889) (cons_49 y_233 xs_87)))))
(assert (len_9 Z_295 nil_49))
(declare-fun x_2883 (Bool_54 Int Int) Bool)
(assert (forall ((x_2891 Bool_54) (x_2885 Int) (z_296 Int))
	(=> (x_2883 x_2891 z_296 x_2885) (x_2883 x_2891 (S_104 z_296) (S_104 x_2885)))))
(assert (forall ((z_296 Int))
	(x_2883 false_54 (S_104 z_296) Z_295)))
(assert (forall ((y_234 Int))
	(x_2883 true_54 Z_295 y_234)))
(declare-fun insort_2 (list_49 Int list_49) Bool)
(assert (forall ((z_297 Int) (xs_88 list_49) (x_2886 Int))
	(=> (x_2883 true_54 x_2886 z_297) (insort_2 (cons_49 x_2886 (cons_49 z_297 xs_88)) x_2886 (cons_49 z_297 xs_88)))))
(assert (forall ((x_2899 list_49) (z_297 Int) (xs_88 list_49) (x_2886 Int))
	(=> (and (insort_2 x_2899 x_2886 xs_88) (x_2883 false_54 x_2886 z_297)) (insort_2 (cons_49 z_297 x_2899) x_2886 (cons_49 z_297 xs_88)))))
(assert (forall ((x_2886 Int))
	(insort_2 (cons_49 x_2886 nil_49) x_2886 nil_49)))
(declare-fun sort_1 (list_49 list_49) Bool)
(assert (forall ((x_2901 list_49) (x_2902 list_49) (y_236 Int) (xs_89 list_49))
	(=> (and (sort_1 x_2902 xs_89) (insort_2 x_2901 y_236 x_2902)) (sort_1 x_2901 (cons_49 y_236 xs_89)))))
(assert (sort_1 nil_49 nil_49))
(assert (forall ((x_2905 list_49) (x_2906 Int) (x_2907 Int) (xs_90 list_49))
	(=> (and true (diseqInt x_2906 x_2907) (sort_1 x_2905 xs_90) (len_9 x_2906 x_2905) (len_9 x_2907 xs_90)) false)))
(check-sat)
