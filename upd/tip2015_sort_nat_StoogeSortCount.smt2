
(set-logic HORN)
(define-fun zero_15 () Int 0)
(define-fun succ_15 ((x Int)) Int (+ x 1))
(declare-datatypes ((Bool_103 0)) (((false_103) (true_103))))
(declare-fun diseqBool_47 (Bool_103 Bool_103) Bool)
(declare-fun isfalse_47 (Bool_103) Bool)
(declare-fun istrue_47 (Bool_103) Bool)
(assert (isfalse_47 false_103))
(assert (istrue_47 true_103))
(assert (diseqBool_47 false_103 true_103))
(assert (diseqBool_47 true_103 false_103))
(declare-fun and_103 (Bool_103 Bool_103 Bool_103) Bool)
(declare-fun or_104 (Bool_103 Bool_103 Bool_103) Bool)
(declare-fun hence_103 (Bool_103 Bool_103 Bool_103) Bool)
(declare-fun not_103 (Bool_103 Bool_103) Bool)
(assert (and_103 false_103 false_103 false_103))
(assert (and_103 false_103 true_103 false_103))
(assert (and_103 false_103 false_103 true_103))
(assert (and_103 true_103 true_103 true_103))
(assert (or_104 false_103 false_103 false_103))
(assert (or_104 true_103 true_103 false_103))
(assert (or_104 true_103 false_103 true_103))
(assert (or_104 true_103 true_103 true_103))
(assert (hence_103 true_103 false_103 false_103))
(assert (hence_103 false_103 true_103 false_103))
(assert (hence_103 true_103 false_103 true_103))
(assert (hence_103 true_103 true_103 true_103))
(assert (not_103 true_103 false_103))
(assert (not_103 false_103 true_103))
(declare-fun diseqInt (Int Int) Bool)
(declare-fun p_43 (Int Int) Bool)
(declare-fun iszero_15 (Int) Bool)
(declare-fun issucc_15 (Int) Bool)
(assert (forall ((x_12119 Int))
	(p_43 x_12119 (succ_15 x_12119))))
(assert (iszero_15 zero_15))
(assert (forall ((x_12121 Int))
	(issucc_15 (succ_15 x_12121))))
(assert (forall ((x_12122 Int))
	(diseqInt zero_15 (succ_15 x_12122))))
(assert (forall ((x_12123 Int))
	(diseqInt (succ_15 x_12123) zero_15)))
(assert (forall ((x_12124 Int) (x_12125 Int))
	(=> (diseqInt x_12124 x_12125) (diseqInt (succ_15 x_12124) (succ_15 x_12125)))))
(declare-datatypes ((list_80 0)) (((nil_85) (cons_80 (head_160 Int) (tail_160 list_80)))))
(declare-fun diseqlist_80 (list_80 list_80) Bool)
(declare-fun head_161 (Int list_80) Bool)
(declare-fun tail_161 (list_80 list_80) Bool)
(declare-fun isnil_85 (list_80) Bool)
(declare-fun iscons_80 (list_80) Bool)
(assert (forall ((x_12127 Int) (x_12128 list_80))
	(head_161 x_12127 (cons_80 x_12127 x_12128))))
(assert (forall ((x_12127 Int) (x_12128 list_80))
	(tail_161 x_12128 (cons_80 x_12127 x_12128))))
(assert (isnil_85 nil_85))
(assert (forall ((x_12130 Int) (x_12131 list_80))
	(iscons_80 (cons_80 x_12130 x_12131))))
(assert (forall ((x_12132 Int) (x_12133 list_80))
	(diseqlist_80 nil_85 (cons_80 x_12132 x_12133))))
(assert (forall ((x_12134 Int) (x_12135 list_80))
	(diseqlist_80 (cons_80 x_12134 x_12135) nil_85)))
(assert (forall ((x_12136 Int) (x_12137 list_80) (x_12138 Int) (x_12139 list_80))
	(=> (diseqInt x_12136 x_12138) (diseqlist_80 (cons_80 x_12136 x_12137) (cons_80 x_12138 x_12139)))))
(assert (forall ((x_12136 Int) (x_12137 list_80) (x_12138 Int) (x_12139 list_80))
	(=> (diseqlist_80 x_12137 x_12139) (diseqlist_80 (cons_80 x_12136 x_12137) (cons_80 x_12138 x_12139)))))
(declare-datatypes ((pair_24 0)) (((pair_25 (projpair_48 list_80) (projpair_49 list_80)))))
(declare-fun diseqpair_12 (pair_24 pair_24) Bool)
(declare-fun projpair_50 (list_80 pair_24) Bool)
(declare-fun projpair_51 (list_80 pair_24) Bool)
(declare-fun ispair_12 (pair_24) Bool)
(assert (forall ((x_12140 list_80) (x_12141 list_80))
	(projpair_50 x_12140 (pair_25 x_12140 x_12141))))
(assert (forall ((x_12140 list_80) (x_12141 list_80))
	(projpair_51 x_12141 (pair_25 x_12140 x_12141))))
(assert (forall ((x_12143 list_80) (x_12144 list_80))
	(ispair_12 (pair_25 x_12143 x_12144))))
(assert (forall ((x_12145 list_80) (x_12146 list_80) (x_12147 list_80) (x_12148 list_80))
	(=> (diseqlist_80 x_12145 x_12147) (diseqpair_12 (pair_25 x_12145 x_12146) (pair_25 x_12147 x_12148)))))
(assert (forall ((x_12145 list_80) (x_12146 list_80) (x_12147 list_80) (x_12148 list_80))
	(=> (diseqlist_80 x_12146 x_12148) (diseqpair_12 (pair_25 x_12145 x_12146) (pair_25 x_12147 x_12148)))))
(declare-fun take_14 (list_80 Int list_80) Bool)
(assert (forall ((x_12030 list_80) (z_546 Int) (xs_162 list_80) (z_545 Int))
	(=> (take_14 x_12030 z_545 xs_162) (take_14 (cons_80 z_546 x_12030) (succ_15 z_545) (cons_80 z_546 xs_162)))))
(assert (forall ((z_545 Int))
	(take_14 nil_85 (succ_15 z_545) nil_85)))
(assert (forall ((y_483 list_80))
	(take_14 nil_85 zero_15 y_483)))
(declare-fun plus_13 (Int Int Int) Bool)
(assert (forall ((x_12034 Int) (z_547 Int) (y_484 Int))
	(=> (plus_13 x_12034 z_547 y_484) (plus_13 (succ_15 x_12034) (succ_15 z_547) y_484))))
(assert (forall ((x_12035 Int))
	(plus_13 x_12035 zero_15 x_12035)))
(declare-fun minus_103 (Int Int Int) Bool)
(assert (forall ((x_12036 Int) (y_486 Int) (z_548 Int))
	(=> (minus_103 x_12036 z_548 y_486) (minus_103 x_12036 (succ_15 z_548) (succ_15 y_486)))))
(assert (forall ((z_548 Int))
	(minus_103 zero_15 (succ_15 z_548) zero_15)))
(assert (forall ((y_485 Int))
	(minus_103 zero_15 zero_15 y_485)))
(declare-fun lt_104 (Bool_103 Int Int) Bool)
(assert (forall ((x_12040 Bool_103) (n_34 Int) (z_549 Int))
	(=> (lt_104 x_12040 n_34 z_549) (lt_104 x_12040 (succ_15 n_34) (succ_15 z_549)))))
(assert (forall ((z_549 Int))
	(lt_104 true_103 zero_15 (succ_15 z_549))))
(assert (forall ((x_12006 Int))
	(lt_104 false_103 x_12006 zero_15)))
(declare-fun leq_6 (Bool_103 Int Int) Bool)
(assert (forall ((x_12044 Bool_103) (x_12008 Int) (z_550 Int))
	(=> (leq_6 x_12044 z_550 x_12008) (leq_6 x_12044 (succ_15 z_550) (succ_15 x_12008)))))
(assert (forall ((z_550 Int))
	(leq_6 false_103 (succ_15 z_550) zero_15)))
(assert (forall ((y_488 Int))
	(leq_6 true_103 zero_15 y_488)))
(declare-fun sort_6 (list_80 Int Int) Bool)
(assert (forall ((x_12009 Int) (y_489 Int))
	(=> (leq_6 true_103 x_12009 y_489) (sort_6 (cons_80 x_12009 (cons_80 y_489 nil_85)) x_12009 y_489))))
(assert (forall ((x_12009 Int) (y_489 Int))
	(=> (leq_6 false_103 x_12009 y_489) (sort_6 (cons_80 y_489 (cons_80 x_12009 nil_85)) x_12009 y_489))))
(declare-fun length_1 (Int list_80) Bool)
(assert (forall ((x_12052 Int) (x_12053 Int) (y_490 Int) (l_3 list_80))
	(=> (and (length_1 x_12053 l_3) (plus_13 x_12052 (succ_15 zero_15) x_12053)) (length_1 x_12052 (cons_80 y_490 l_3)))))
(assert (length_1 zero_15 nil_85))
(declare-fun idiv_0 (Int Int Int) Bool)
(assert (forall ((x_12011 Int) (y_491 Int))
	(=> (lt_104 true_103 x_12011 y_491) (idiv_0 zero_15 x_12011 y_491))))
(assert (forall ((x_12060 Int) (x_12061 Int) (x_12011 Int) (y_491 Int))
	(=> (and (minus_103 x_12060 x_12011 y_491) (idiv_0 x_12061 x_12060 y_491) (lt_104 false_103 x_12011 y_491)) (idiv_0 (succ_15 x_12061) x_12011 y_491))))
(declare-fun drop_16 (list_80 Int list_80) Bool)
(assert (forall ((x_12062 list_80) (z_552 Int) (xs_163 list_80) (z_551 Int))
	(=> (drop_16 x_12062 z_551 xs_163) (drop_16 x_12062 (succ_15 z_551) (cons_80 z_552 xs_163)))))
(assert (forall ((z_551 Int))
	(drop_16 nil_85 (succ_15 z_551) nil_85)))
(assert (forall ((x_12065 list_80))
	(drop_16 x_12065 zero_15 x_12065)))
(declare-fun splitAt_1 (pair_24 Int list_80) Bool)
(assert (forall ((x_12067 list_80) (x_12068 list_80) (x_12013 Int) (y_493 list_80))
	(=> (and (take_14 x_12067 x_12013 y_493) (drop_16 x_12068 x_12013 y_493)) (splitAt_1 (pair_25 x_12067 x_12068) x_12013 y_493))))
(declare-fun count_12 (Int Int list_80) Bool)
(assert (forall ((x_12069 Int) (x_12070 Int) (ys_41 list_80) (x_12014 Int))
	(=> (and (count_12 x_12070 x_12014 ys_41) (plus_13 x_12069 (succ_15 zero_15) x_12070)) (count_12 x_12069 x_12014 (cons_80 x_12014 ys_41)))))
(assert (forall ((x_12072 Int) (z_553 Int) (ys_41 list_80) (x_12014 Int))
	(=> (and (diseqInt x_12014 z_553) (count_12 x_12072 x_12014 ys_41)) (count_12 x_12072 x_12014 (cons_80 z_553 ys_41)))))
(assert (forall ((x_12014 Int))
	(count_12 zero_15 x_12014 nil_85)))
(declare-fun x_12015 (list_80 list_80 list_80) Bool)
(assert (forall ((x_12076 list_80) (z_554 Int) (xs_164 list_80) (y_495 list_80))
	(=> (x_12015 x_12076 xs_164 y_495) (x_12015 (cons_80 z_554 x_12076) (cons_80 z_554 xs_164) y_495))))
(assert (forall ((x_12077 list_80))
	(x_12015 x_12077 nil_85 x_12077)))
(declare-fun reverse_1 (list_80 list_80) Bool)
(assert (forall ((x_12078 list_80) (x_12079 list_80) (y_496 Int) (xs_165 list_80))
	(=> (and (reverse_1 x_12079 xs_165) (x_12015 x_12078 x_12079 (cons_80 y_496 nil_85))) (reverse_1 x_12078 (cons_80 y_496 xs_165)))))
(assert (reverse_1 nil_85 nil_85))
(declare-fun stoogesort_0 (list_80 list_80) Bool)
(declare-fun stoogesort_1 (list_80 list_80) Bool)
(declare-fun stoogesort_2 (list_80 list_80) Bool)
(assert (forall ((x_12086 list_80) (x_12087 list_80) (x_12088 list_80) (x_12082 Int) (x_12083 Int) (x_12084 list_80) (ys_42 list_80) (zs_6 list_80) (x_12018 list_80))
	(=> (and (stoogesort_1 x_12087 zs_6) (reverse_1 x_12088 ys_42) (x_12015 x_12086 x_12087 x_12088) (length_1 x_12082 x_12018) (idiv_0 x_12083 x_12082 (succ_15 (succ_15 (succ_15 zero_15)))) (reverse_1 x_12084 x_12018) (splitAt_1 (pair_25 ys_42 zs_6) x_12083 x_12084)) (stoogesort_0 x_12086 x_12018))))
(assert (forall ((x_12090 list_80) (x_12091 list_80) (x_12092 list_80) (x_12021 Int) (x_12022 list_80) (y_498 Int) (y_497 Int))
	(=> (and (stoogesort_0 x_12091 (cons_80 y_497 (cons_80 y_498 (cons_80 x_12021 x_12022)))) (stoogesort_2 x_12092 x_12091) (stoogesort_0 x_12090 x_12092)) (stoogesort_1 x_12090 (cons_80 y_497 (cons_80 y_498 (cons_80 x_12021 x_12022)))))))
(assert (forall ((x_12094 list_80) (y_498 Int) (y_497 Int))
	(=> (sort_6 x_12094 y_497 y_498) (stoogesort_1 x_12094 (cons_80 y_497 (cons_80 y_498 nil_85))))))
(assert (forall ((y_497 Int))
	(stoogesort_1 (cons_80 y_497 nil_85) (cons_80 y_497 nil_85))))
(assert (stoogesort_1 nil_85 nil_85))
(assert (forall ((x_12101 list_80) (x_12102 list_80) (x_12098 Int) (x_12099 Int) (ys_43 list_80) (zs_7 list_80) (x_12023 list_80))
	(=> (and (stoogesort_1 x_12102 zs_7) (x_12015 x_12101 ys_43 x_12102) (length_1 x_12098 x_12023) (idiv_0 x_12099 x_12098 (succ_15 (succ_15 (succ_15 zero_15)))) (splitAt_1 (pair_25 ys_43 zs_7) x_12099 x_12023)) (stoogesort_2 x_12101 x_12023))))
(assert (forall ((x_12104 Int) (x_12105 Int) (x_12106 Int) (x_12107 Int) (x_12024 Int) (y_499 Int) (z_556 Int))
	(=> (and true (diseqInt x_12105 x_12107) (plus_13 x_12104 y_499 z_556) (plus_13 x_12105 x_12024 x_12104) (plus_13 x_12106 x_12024 y_499) (plus_13 x_12107 x_12106 z_556)) false)))
(assert (forall ((x_12108 Int) (x_12109 Int) (x_12025 Int) (y_500 Int))
	(=> (and true (diseqInt x_12108 x_12109) (plus_13 x_12108 x_12025 y_500) (plus_13 x_12109 y_500 x_12025)) false)))
(assert (forall ((x_12110 Int) (x_12026 Int))
	(=> (and true (diseqInt x_12110 x_12026) (plus_13 x_12110 x_12026 zero_15)) false)))
(assert (forall ((x_12111 Int) (x_12027 Int))
	(=> (and true (diseqInt x_12111 x_12027) (plus_13 x_12111 zero_15 x_12027)) false)))
(assert (forall ((x_12112 list_80) (x_12113 Int) (x_12114 Int) (x_12028 Int) (xs_166 list_80))
	(=> (and true (diseqInt x_12113 x_12114) (stoogesort_1 x_12112 xs_166) (count_12 x_12113 x_12028 x_12112) (count_12 x_12114 x_12028 xs_166)) false)))
(check-sat)
