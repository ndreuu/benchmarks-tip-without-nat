
(set-logic HORN)
(define-fun Z_1676 () Int 0)
(define-fun S_381 ((x Int)) Int (+ x 1))
(declare-fun diseqInt (Int Int) Bool)
(declare-fun unS_557 (Int Int) Bool)
(declare-fun isZ_351 (Int) Bool)
(declare-fun isS_351 (Int) Bool)
(assert (forall ((x_50826 Int))
	(unS_557 x_50826 (S_381 x_50826))))
(assert (isZ_351 Z_1676))
(assert (forall ((x_50828 Int))
	(isS_351 (S_381 x_50828))))
(assert (forall ((x_50829 Int))
	(diseqInt Z_1676 (S_381 x_50829))))
(assert (forall ((x_50830 Int))
	(diseqInt (S_381 x_50830) Z_1676)))
(assert (forall ((x_50831 Int) (x_50832 Int))
	(=> (diseqInt x_50831 x_50832) (diseqInt (S_381 x_50831) (S_381 x_50832)))))
(declare-fun add_298 (Int Int Int) Bool)
(declare-fun minus_295 (Int Int Int) Bool)
(declare-fun le_278 (Int Int) Bool)
(declare-fun ge_278 (Int Int) Bool)
(declare-fun lt_297 (Int Int) Bool)
(declare-fun gt_281 (Int Int) Bool)
(declare-fun mult_278 (Int Int Int) Bool)
(declare-fun div_278 (Int Int Int) Bool)
(declare-fun mod_280 (Int Int Int) Bool)
(assert (forall ((y_1883 Int))
	(add_298 y_1883 Z_1676 y_1883)))
(assert (forall ((x_50824 Int) (y_1883 Int) (r_347 Int))
	(=> (add_298 r_347 x_50824 y_1883) (add_298 (S_381 r_347) (S_381 x_50824) y_1883))))
(assert (forall ((y_1883 Int))
	(minus_295 Z_1676 Z_1676 y_1883)))
(assert (forall ((x_50824 Int) (y_1883 Int) (r_347 Int))
	(=> (minus_295 r_347 x_50824 y_1883) (minus_295 (S_381 r_347) (S_381 x_50824) y_1883))))
(assert (forall ((y_1883 Int))
	(le_278 Z_1676 y_1883)))
(assert (forall ((x_50824 Int) (y_1883 Int))
	(=> (le_278 x_50824 y_1883) (le_278 (S_381 x_50824) (S_381 y_1883)))))
(assert (forall ((y_1883 Int))
	(ge_278 y_1883 Z_1676)))
(assert (forall ((x_50824 Int) (y_1883 Int))
	(=> (ge_278 x_50824 y_1883) (ge_278 (S_381 x_50824) (S_381 y_1883)))))
(assert (forall ((y_1883 Int))
	(lt_297 Z_1676 (S_381 y_1883))))
(assert (forall ((x_50824 Int) (y_1883 Int))
	(=> (lt_297 x_50824 y_1883) (lt_297 (S_381 x_50824) (S_381 y_1883)))))
(assert (forall ((y_1883 Int))
	(gt_281 (S_381 y_1883) Z_1676)))
(assert (forall ((x_50824 Int) (y_1883 Int))
	(=> (gt_281 x_50824 y_1883) (gt_281 (S_381 x_50824) (S_381 y_1883)))))
(assert (forall ((y_1883 Int))
	(mult_278 Z_1676 Z_1676 y_1883)))
(assert (forall ((x_50824 Int) (y_1883 Int) (r_347 Int) (z_1677 Int))
	(=> (and (mult_278 r_347 x_50824 y_1883) (add_298 z_1677 r_347 y_1883)) (mult_278 z_1677 (S_381 x_50824) y_1883))))
(assert (forall ((x_50824 Int) (y_1883 Int))
	(=> (lt_297 x_50824 y_1883) (div_278 Z_1676 x_50824 y_1883))))
(assert (forall ((x_50824 Int) (y_1883 Int) (r_347 Int) (z_1677 Int))
	(=> (and (ge_278 x_50824 y_1883) (minus_295 z_1677 x_50824 y_1883) (div_278 r_347 z_1677 y_1883)) (div_278 (S_381 r_347) x_50824 y_1883))))
(assert (forall ((x_50824 Int) (y_1883 Int))
	(=> (lt_297 x_50824 y_1883) (mod_280 x_50824 x_50824 y_1883))))
(assert (forall ((x_50824 Int) (y_1883 Int) (r_347 Int) (z_1677 Int))
	(=> (and (ge_278 x_50824 y_1883) (minus_295 z_1677 x_50824 y_1883) (mod_280 r_347 z_1677 y_1883)) (mod_280 r_347 x_50824 y_1883))))
(declare-datatypes ((Bool_278 0)) (((false_278) (true_278))))
(declare-fun diseqBool_133 (Bool_278 Bool_278) Bool)
(declare-fun isfalse_133 (Bool_278) Bool)
(declare-fun istrue_133 (Bool_278) Bool)
(assert (isfalse_133 false_278))
(assert (istrue_133 true_278))
(assert (diseqBool_133 false_278 true_278))
(assert (diseqBool_133 true_278 false_278))
(declare-fun and_278 (Bool_278 Bool_278 Bool_278) Bool)
(declare-fun or_284 (Bool_278 Bool_278 Bool_278) Bool)
(declare-fun hence_278 (Bool_278 Bool_278 Bool_278) Bool)
(declare-fun not_282 (Bool_278 Bool_278) Bool)
(assert (and_278 false_278 false_278 false_278))
(assert (and_278 false_278 true_278 false_278))
(assert (and_278 false_278 false_278 true_278))
(assert (and_278 true_278 true_278 true_278))
(assert (or_284 false_278 false_278 false_278))
(assert (or_284 true_278 true_278 false_278))
(assert (or_284 true_278 false_278 true_278))
(assert (or_284 true_278 true_278 true_278))
(assert (hence_278 true_278 false_278 false_278))
(assert (hence_278 false_278 true_278 false_278))
(assert (hence_278 true_278 false_278 true_278))
(assert (hence_278 true_278 true_278 true_278))
(assert (not_282 true_278 false_278))
(assert (not_282 false_278 true_278))
(declare-datatypes ((list_199 0)) (((nil_226) (cons_199 (head_398 Int) (tail_398 list_199)))))
(declare-fun diseqlist_199 (list_199 list_199) Bool)
(declare-fun head_400 (Int list_199) Bool)
(declare-fun tail_400 (list_199 list_199) Bool)
(declare-fun isnil_226 (list_199) Bool)
(declare-fun iscons_199 (list_199) Bool)
(assert (forall ((x_50836 Int) (x_50837 list_199))
	(head_400 x_50836 (cons_199 x_50836 x_50837))))
(assert (forall ((x_50836 Int) (x_50837 list_199))
	(tail_400 x_50837 (cons_199 x_50836 x_50837))))
(assert (isnil_226 nil_226))
(assert (forall ((x_50839 Int) (x_50840 list_199))
	(iscons_199 (cons_199 x_50839 x_50840))))
(assert (forall ((x_50841 Int) (x_50842 list_199))
	(diseqlist_199 nil_226 (cons_199 x_50841 x_50842))))
(assert (forall ((x_50843 Int) (x_50844 list_199))
	(diseqlist_199 (cons_199 x_50843 x_50844) nil_226)))
(assert (forall ((x_50845 Int) (x_50846 list_199) (x_50847 Int) (x_50848 list_199))
	(=> (diseqInt x_50845 x_50847) (diseqlist_199 (cons_199 x_50845 x_50846) (cons_199 x_50847 x_50848)))))
(assert (forall ((x_50845 Int) (x_50846 list_199) (x_50847 Int) (x_50848 list_199))
	(=> (diseqlist_199 x_50846 x_50848) (diseqlist_199 (cons_199 x_50845 x_50846) (cons_199 x_50847 x_50848)))))
(declare-datatypes ((Heap_10 0)) (((Node_14 (projNode_84 Heap_10) (projNode_85 Int) (projNode_86 Heap_10)) (Nil_227))))
(declare-fun diseqHeap_10 (Heap_10 Heap_10) Bool)
(declare-fun projNode_87 (Heap_10 Heap_10) Bool)
(declare-fun projNode_88 (Int Heap_10) Bool)
(declare-fun projNode_89 (Heap_10 Heap_10) Bool)
(declare-fun isNode_14 (Heap_10) Bool)
(declare-fun isNil_227 (Heap_10) Bool)
(assert (forall ((x_50849 Heap_10) (x_50850 Int) (x_50851 Heap_10))
	(projNode_87 x_50849 (Node_14 x_50849 x_50850 x_50851))))
(assert (forall ((x_50849 Heap_10) (x_50850 Int) (x_50851 Heap_10))
	(projNode_88 x_50850 (Node_14 x_50849 x_50850 x_50851))))
(assert (forall ((x_50849 Heap_10) (x_50850 Int) (x_50851 Heap_10))
	(projNode_89 x_50851 (Node_14 x_50849 x_50850 x_50851))))
(assert (forall ((x_50854 Heap_10) (x_50855 Int) (x_50856 Heap_10))
	(isNode_14 (Node_14 x_50854 x_50855 x_50856))))
(assert (isNil_227 Nil_227))
(assert (forall ((x_50857 Heap_10) (x_50858 Int) (x_50859 Heap_10))
	(diseqHeap_10 (Node_14 x_50857 x_50858 x_50859) Nil_227)))
(assert (forall ((x_50860 Heap_10) (x_50861 Int) (x_50862 Heap_10))
	(diseqHeap_10 Nil_227 (Node_14 x_50860 x_50861 x_50862))))
(assert (forall ((x_50863 Heap_10) (x_50864 Int) (x_50865 Heap_10) (x_50866 Heap_10) (x_50867 Int) (x_50868 Heap_10))
	(=> (diseqHeap_10 x_50863 x_50866) (diseqHeap_10 (Node_14 x_50863 x_50864 x_50865) (Node_14 x_50866 x_50867 x_50868)))))
(assert (forall ((x_50863 Heap_10) (x_50864 Int) (x_50865 Heap_10) (x_50866 Heap_10) (x_50867 Int) (x_50868 Heap_10))
	(=> (diseqInt x_50864 x_50867) (diseqHeap_10 (Node_14 x_50863 x_50864 x_50865) (Node_14 x_50866 x_50867 x_50868)))))
(assert (forall ((x_50863 Heap_10) (x_50864 Int) (x_50865 Heap_10) (x_50866 Heap_10) (x_50867 Int) (x_50868 Heap_10))
	(=> (diseqHeap_10 x_50865 x_50868) (diseqHeap_10 (Node_14 x_50863 x_50864 x_50865) (Node_14 x_50866 x_50867 x_50868)))))
(declare-datatypes ((list_200 0)) (((nil_228) (cons_200 (head_399 Heap_10) (tail_399 list_200)))))
(declare-fun diseqlist_200 (list_200 list_200) Bool)
(declare-fun head_401 (Heap_10 list_200) Bool)
(declare-fun tail_401 (list_200 list_200) Bool)
(declare-fun isnil_228 (list_200) Bool)
(declare-fun iscons_200 (list_200) Bool)
(assert (forall ((x_50870 Heap_10) (x_50871 list_200))
	(head_401 x_50870 (cons_200 x_50870 x_50871))))
(assert (forall ((x_50870 Heap_10) (x_50871 list_200))
	(tail_401 x_50871 (cons_200 x_50870 x_50871))))
(assert (isnil_228 nil_228))
(assert (forall ((x_50873 Heap_10) (x_50874 list_200))
	(iscons_200 (cons_200 x_50873 x_50874))))
(assert (forall ((x_50875 Heap_10) (x_50876 list_200))
	(diseqlist_200 nil_228 (cons_200 x_50875 x_50876))))
(assert (forall ((x_50877 Heap_10) (x_50878 list_200))
	(diseqlist_200 (cons_200 x_50877 x_50878) nil_228)))
(assert (forall ((x_50879 Heap_10) (x_50880 list_200) (x_50881 Heap_10) (x_50882 list_200))
	(=> (diseqHeap_10 x_50879 x_50881) (diseqlist_200 (cons_200 x_50879 x_50880) (cons_200 x_50881 x_50882)))))
(assert (forall ((x_50879 Heap_10) (x_50880 list_200) (x_50881 Heap_10) (x_50882 list_200))
	(=> (diseqlist_200 x_50880 x_50882) (diseqlist_200 (cons_200 x_50879 x_50880) (cons_200 x_50881 x_50882)))))
(declare-fun toHeap_14 (list_200 list_199) Bool)
(assert (forall ((x_50789 list_200) (y_1876 Int) (z_1672 list_199))
	(=> (toHeap_14 x_50789 z_1672) (toHeap_14 (cons_200 (Node_14 Nil_227 y_1876 Nil_227) x_50789) (cons_199 y_1876 z_1672)))))
(assert (toHeap_14 nil_228 nil_226))
(declare-fun ordered_21 (Bool_278 list_199) Bool)
(assert (forall ((x_50791 Bool_278) (y_1878 Int) (xs_541 list_199) (y_1877 Int))
	(=> (and (le_278 y_1877 y_1878) (ordered_21 x_50791 (cons_199 y_1878 xs_541))) (ordered_21 x_50791 (cons_199 y_1877 (cons_199 y_1878 xs_541))))))
(assert (forall ((y_1878 Int) (xs_541 list_199) (y_1877 Int))
	(=> (gt_281 y_1877 y_1878) (ordered_21 false_278 (cons_199 y_1877 (cons_199 y_1878 xs_541))))))
(assert (forall ((y_1877 Int))
	(ordered_21 true_278 (cons_199 y_1877 nil_226))))
(assert (ordered_21 true_278 nil_226))
(declare-fun hmerge_10 (Heap_10 Heap_10 Heap_10) Bool)
(assert (forall ((x_50796 Heap_10))
	(hmerge_10 x_50796 Nil_227 x_50796)))
(assert (forall ((z_1674 Heap_10) (x_50777 Int) (x_50778 Heap_10))
	(hmerge_10 (Node_14 z_1674 x_50777 x_50778) (Node_14 z_1674 x_50777 x_50778) Nil_227)))
(assert (forall ((x_50799 Heap_10) (x_50779 Heap_10) (x_50780 Int) (x_50781 Heap_10) (z_1674 Heap_10) (x_50777 Int) (x_50778 Heap_10))
	(=> (and (le_278 x_50777 x_50780) (hmerge_10 x_50799 x_50778 (Node_14 x_50779 x_50780 x_50781))) (hmerge_10 (Node_14 x_50799 x_50777 z_1674) (Node_14 z_1674 x_50777 x_50778) (Node_14 x_50779 x_50780 x_50781)))))
(assert (forall ((x_50801 Heap_10) (x_50779 Heap_10) (x_50780 Int) (x_50781 Heap_10) (z_1674 Heap_10) (x_50777 Int) (x_50778 Heap_10))
	(=> (and (gt_281 x_50777 x_50780) (hmerge_10 x_50801 (Node_14 z_1674 x_50777 x_50778) x_50781)) (hmerge_10 (Node_14 x_50801 x_50780 x_50779) (Node_14 z_1674 x_50777 x_50778) (Node_14 x_50779 x_50780 x_50781)))))
(declare-fun hpairwise_4 (list_200 list_200) Bool)
(assert (forall ((x_50803 Heap_10) (x_50804 list_200) (q_116 Heap_10) (qs_4 list_200) (p_339 Heap_10))
	(=> (and (hmerge_10 x_50803 p_339 q_116) (hpairwise_4 x_50804 qs_4)) (hpairwise_4 (cons_200 x_50803 x_50804) (cons_200 p_339 (cons_200 q_116 qs_4))))))
(assert (forall ((p_339 Heap_10))
	(hpairwise_4 (cons_200 p_339 nil_228) (cons_200 p_339 nil_228))))
(assert (hpairwise_4 nil_228 nil_228))
(declare-fun hmerging_4 (Heap_10 list_200) Bool)
(assert (forall ((x_50807 Heap_10) (x_50808 list_200) (z_1675 Heap_10) (x_50784 list_200) (p_340 Heap_10))
	(=> (and (hpairwise_4 x_50808 (cons_200 p_340 (cons_200 z_1675 x_50784))) (hmerging_4 x_50807 x_50808)) (hmerging_4 x_50807 (cons_200 p_340 (cons_200 z_1675 x_50784))))))
(assert (forall ((p_340 Heap_10))
	(hmerging_4 p_340 (cons_200 p_340 nil_228))))
(assert (hmerging_4 Nil_227 nil_228))
(declare-fun toHeap_15 (Heap_10 list_199) Bool)
(assert (forall ((x_50812 Heap_10) (x_50813 list_200) (x_50785 list_199))
	(=> (and (toHeap_14 x_50813 x_50785) (hmerging_4 x_50812 x_50813)) (toHeap_15 x_50812 x_50785))))
(declare-fun toList_10 (list_199 Heap_10) Bool)
(assert (toList_10 nil_226 Nil_227))
(assert (forall ((x_50817 Heap_10) (x_50818 list_199) (p_341 Heap_10) (y_1882 Int) (q_117 Heap_10))
	(=> (and (hmerge_10 x_50817 p_341 q_117) (toList_10 x_50818 x_50817)) (toList_10 (cons_199 y_1882 x_50818) (Node_14 p_341 y_1882 q_117)))))
(declare-fun hsort_10 (list_199 list_199) Bool)
(assert (forall ((x_50819 list_199) (x_50820 Heap_10) (x_50787 list_199))
	(=> (and (toHeap_15 x_50820 x_50787) (toList_10 x_50819 x_50820)) (hsort_10 x_50819 x_50787))))
(assert (forall ((x_50822 list_199) (xs_542 list_199))
	(=> (and true (hsort_10 x_50822 xs_542) (ordered_21 false_278 x_50822)) false)))
(check-sat)
