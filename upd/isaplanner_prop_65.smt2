
(set-logic HORN)
(define-fun Z_187 () Int 0)
(define-fun S_65 ((x Int)) Int (+ x 1))
(declare-datatypes ((Bool_34 0)) (((false_34) (true_34))))
(declare-fun diseqBool_12 (Bool_34 Bool_34) Bool)
(declare-fun isfalse_12 (Bool_34) Bool)
(declare-fun istrue_12 (Bool_34) Bool)
(assert (isfalse_12 false_34))
(assert (istrue_12 true_34))
(assert (diseqBool_12 false_34 true_34))
(assert (diseqBool_12 true_34 false_34))
(declare-fun and_34 (Bool_34 Bool_34 Bool_34) Bool)
(declare-fun or_34 (Bool_34 Bool_34 Bool_34) Bool)
(declare-fun hence_34 (Bool_34 Bool_34 Bool_34) Bool)
(declare-fun not_34 (Bool_34 Bool_34) Bool)
(assert (and_34 false_34 false_34 false_34))
(assert (and_34 false_34 true_34 false_34))
(assert (and_34 false_34 false_34 true_34))
(assert (and_34 true_34 true_34 true_34))
(assert (or_34 false_34 false_34 false_34))
(assert (or_34 true_34 true_34 false_34))
(assert (or_34 true_34 false_34 true_34))
(assert (or_34 true_34 true_34 true_34))
(assert (hence_34 true_34 false_34 false_34))
(assert (hence_34 false_34 true_34 false_34))
(assert (hence_34 true_34 false_34 true_34))
(assert (hence_34 true_34 true_34 true_34))
(assert (not_34 true_34 false_34))
(assert (not_34 false_34 true_34))
(declare-fun diseqInt (Int Int) Bool)
(declare-fun projS_63 (Int Int) Bool)
(declare-fun isZ_65 (Int) Bool)
(declare-fun isS_65 (Int) Bool)
(assert (forall ((x_1862 Int))
	(projS_63 x_1862 (S_65 x_1862))))
(assert (isZ_65 Z_187))
(assert (forall ((x_1864 Int))
	(isS_65 (S_65 x_1864))))
(assert (forall ((x_1865 Int))
	(diseqInt Z_187 (S_65 x_1865))))
(assert (forall ((x_1866 Int))
	(diseqInt (S_65 x_1866) Z_187)))
(assert (forall ((x_1867 Int) (x_1868 Int))
	(=> (diseqInt x_1867 x_1868) (diseqInt (S_65 x_1867) (S_65 x_1868)))))
(declare-fun x_1844 (Bool_34 Int Int) Bool)
(assert (forall ((x_1849 Bool_34) (x_1846 Int) (z_188 Int))
	(=> (x_1844 x_1849 x_1846 z_188) (x_1844 x_1849 (S_65 x_1846) (S_65 z_188)))))
(assert (forall ((z_188 Int))
	(x_1844 true_34 Z_187 (S_65 z_188))))
(assert (forall ((x_1845 Int))
	(x_1844 false_34 x_1845 Z_187)))
(declare-fun x_1847 (Int Int Int) Bool)
(assert (forall ((x_1854 Int) (z_189 Int) (y_149 Int))
	(=> (x_1847 x_1854 z_189 y_149) (x_1847 (S_65 x_1854) (S_65 z_189) y_149))))
(assert (forall ((x_1855 Int))
	(x_1847 x_1855 Z_187 x_1855)))
(assert (forall ((x_1856 Int) (i_2 Int) (m_4 Int))
	(=> (and true (x_1847 x_1856 m_4 i_2) (x_1844 false_34 i_2 (S_65 x_1856))) false)))
(check-sat)
