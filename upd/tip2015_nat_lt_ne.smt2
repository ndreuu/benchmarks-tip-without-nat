
(set-logic HORN)
(define-fun zero_74 () Int 0)
(define-fun succ_72 ((x Int)) Int (+ x 1))
(declare-datatypes ((Bool_199 0)) (((false_199) (true_199))))
(declare-fun diseqBool_87 (Bool_199 Bool_199) Bool)
(declare-fun isfalse_87 (Bool_199) Bool)
(declare-fun istrue_87 (Bool_199) Bool)
(assert (isfalse_87 false_199))
(assert (istrue_87 true_199))
(assert (diseqBool_87 false_199 true_199))
(assert (diseqBool_87 true_199 false_199))
(declare-fun and_199 (Bool_199 Bool_199 Bool_199) Bool)
(declare-fun or_202 (Bool_199 Bool_199 Bool_199) Bool)
(declare-fun hence_199 (Bool_199 Bool_199 Bool_199) Bool)
(declare-fun not_201 (Bool_199 Bool_199) Bool)
(assert (and_199 false_199 false_199 false_199))
(assert (and_199 false_199 true_199 false_199))
(assert (and_199 false_199 false_199 true_199))
(assert (and_199 true_199 true_199 true_199))
(assert (or_202 false_199 false_199 false_199))
(assert (or_202 true_199 true_199 false_199))
(assert (or_202 true_199 false_199 true_199))
(assert (or_202 true_199 true_199 true_199))
(assert (hence_199 true_199 false_199 false_199))
(assert (hence_199 false_199 true_199 false_199))
(assert (hence_199 true_199 false_199 true_199))
(assert (hence_199 true_199 true_199 true_199))
(assert (not_201 true_199 false_199))
(assert (not_201 false_199 true_199))
(declare-fun diseqInt (Int Int) Bool)
(declare-fun p_202 (Int Int) Bool)
(declare-fun iszero_72 (Int) Bool)
(declare-fun issucc_72 (Int) Bool)
(assert (forall ((x_30919 Int))
	(p_202 x_30919 (succ_72 x_30919))))
(assert (iszero_72 zero_74))
(assert (forall ((x_30921 Int))
	(issucc_72 (succ_72 x_30921))))
(assert (forall ((x_30922 Int))
	(diseqInt zero_74 (succ_72 x_30922))))
(assert (forall ((x_30923 Int))
	(diseqInt (succ_72 x_30923) zero_74)))
(assert (forall ((x_30924 Int) (x_30925 Int))
	(=> (diseqInt x_30924 x_30925) (diseqInt (succ_72 x_30924) (succ_72 x_30925)))))
(declare-fun lt_210 (Bool_199 Int Int) Bool)
(assert (forall ((x_30910 Bool_199) (n_64 Int) (z_1142 Int))
	(=> (lt_210 x_30910 n_64 z_1142) (lt_210 x_30910 (succ_72 n_64) (succ_72 z_1142)))))
(assert (forall ((z_1142 Int))
	(lt_210 true_199 zero_74 (succ_72 z_1142))))
(assert (forall ((x_30908 Int))
	(lt_210 false_199 x_30908 zero_74)))
(assert (forall ((x_30909 Int))
	(=> (and true (lt_210 true_199 x_30909 x_30909)) false)))
(check-sat)
