
(set-logic HORN)
(define-fun zero_59 () Int 0)
(define-fun succ_58 ((x Int)) Int (+ x 1))
(declare-datatypes ((Bool_176 0)) (((false_176) (true_176))))
(declare-fun diseqBool_75 (Bool_176 Bool_176) Bool)
(declare-fun isfalse_75 (Bool_176) Bool)
(declare-fun istrue_75 (Bool_176) Bool)
(assert (isfalse_75 false_176))
(assert (istrue_75 true_176))
(assert (diseqBool_75 false_176 true_176))
(assert (diseqBool_75 true_176 false_176))
(declare-fun and_176 (Bool_176 Bool_176 Bool_176) Bool)
(declare-fun or_178 (Bool_176 Bool_176 Bool_176) Bool)
(declare-fun hence_176 (Bool_176 Bool_176 Bool_176) Bool)
(declare-fun not_177 (Bool_176 Bool_176) Bool)
(assert (and_176 false_176 false_176 false_176))
(assert (and_176 false_176 true_176 false_176))
(assert (and_176 false_176 false_176 true_176))
(assert (and_176 true_176 true_176 true_176))
(assert (or_178 false_176 false_176 false_176))
(assert (or_178 true_176 true_176 false_176))
(assert (or_178 true_176 false_176 true_176))
(assert (or_178 true_176 true_176 true_176))
(assert (hence_176 true_176 false_176 false_176))
(assert (hence_176 false_176 true_176 false_176))
(assert (hence_176 true_176 false_176 true_176))
(assert (hence_176 true_176 true_176 true_176))
(assert (not_177 true_176 false_176))
(assert (not_177 false_176 true_176))
(declare-fun diseqInt (Int Int) Bool)
(declare-fun p_162 (Int Int) Bool)
(declare-fun iszero_58 (Int) Bool)
(declare-fun issucc_58 (Int) Bool)
(assert (forall ((x_26575 Int))
	(p_162 x_26575 (succ_58 x_26575))))
(assert (iszero_58 zero_59))
(assert (forall ((x_26577 Int))
	(issucc_58 (succ_58 x_26577))))
(assert (forall ((x_26578 Int))
	(diseqInt zero_59 (succ_58 x_26578))))
(assert (forall ((x_26579 Int))
	(diseqInt (succ_58 x_26579) zero_59)))
(assert (forall ((x_26580 Int) (x_26581 Int))
	(=> (diseqInt x_26580 x_26581) (diseqInt (succ_58 x_26580) (succ_58 x_26581)))))
(declare-fun leq_21 (Bool_176 Int Int) Bool)
(assert (forall ((x_26563 Bool_176) (x_26560 Int) (z_1012 Int))
	(=> (leq_21 x_26563 z_1012 x_26560) (leq_21 x_26563 (succ_58 z_1012) (succ_58 x_26560)))))
(assert (forall ((z_1012 Int))
	(leq_21 false_176 (succ_58 z_1012) zero_59)))
(assert (forall ((y_1054 Int))
	(leq_21 true_176 zero_59 y_1054)))
(declare-fun geq_0 (Bool_176 Int Int) Bool)
(assert (forall ((x_26567 Bool_176) (x_26561 Int) (y_1055 Int))
	(=> (leq_21 x_26567 y_1055 x_26561) (geq_0 x_26567 x_26561 y_1055))))
(assert (forall ((x_26562 Int) (y_1056 Int))
	(=> (and true (diseqInt x_26562 y_1056) (geq_0 true_176 x_26562 y_1056) (leq_21 true_176 x_26562 y_1056)) false)))
(check-sat)
