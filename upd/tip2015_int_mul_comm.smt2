
(set-logic HORN)
(declare-fun zero_23 () Int)
(declare-fun succ_23 (Int) Int)
(declare-datatypes ((Sign_0 0)) (((Pos_0) (Neg_0))))
(declare-fun diseqSign_0 (Sign_0 Sign_0) Bool)
(declare-fun isPos_0 (Sign_0) Bool)
(declare-fun isNeg_0 (Sign_0) Bool)
(assert (isPos_0 Pos_0))
(assert (isNeg_0 Neg_0))
(assert (diseqSign_0 Pos_0 Neg_0))
(assert (diseqSign_0 Neg_0 Pos_0))
(declare-fun diseqInt (Int Int) Bool)
(declare-fun p_65 (Int Int) Bool)
(declare-fun iszero_23 (Int) Bool)
(declare-fun issucc_23 (Int) Bool)
(assert (forall ((x_15166 Int))
	(p_65 x_15166 (succ_23 x_15166))))
(assert (iszero_23 zero_23))
(assert (forall ((x_15168 Int))
	(issucc_23 (succ_23 x_15168))))
(assert (forall ((x_15169 Int))
	(diseqInt zero_23 (succ_23 x_15169))))
(assert (forall ((x_15170 Int))
	(diseqInt (succ_23 x_15170) zero_23)))
(assert (forall ((x_15171 Int) (x_15172 Int))
	(=> (diseqInt x_15171 x_15172) (diseqInt (succ_23 x_15171) (succ_23 x_15172)))))
(declare-datatypes ((Integer_0 0)) (((P_64 (projP_0 Int)) (N_36 (projN_0 Int)))))
(declare-fun diseqInteger_0 (Integer_0 Integer_0) Bool)
(declare-fun projP_1 (Int Integer_0) Bool)
(declare-fun projN_1 (Int Integer_0) Bool)
(declare-fun isP_0 (Integer_0) Bool)
(declare-fun isN_0 (Integer_0) Bool)
(assert (forall ((x_15173 Int))
	(projP_1 x_15173 (P_64 x_15173))))
(assert (forall ((x_15175 Int))
	(projN_1 x_15175 (N_36 x_15175))))
(assert (forall ((x_15177 Int))
	(isP_0 (P_64 x_15177))))
(assert (forall ((x_15178 Int))
	(isN_0 (N_36 x_15178))))
(assert (forall ((x_15179 Int) (x_15180 Int))
	(diseqInteger_0 (P_64 x_15179) (N_36 x_15180))))
(assert (forall ((x_15181 Int) (x_15182 Int))
	(diseqInteger_0 (N_36 x_15181) (P_64 x_15182))))
(assert (forall ((x_15183 Int) (x_15184 Int))
	(=> (diseqInt x_15183 x_15184) (diseqInteger_0 (P_64 x_15183) (P_64 x_15184)))))
(assert (forall ((x_15185 Int) (x_15186 Int))
	(=> (diseqInt x_15185 x_15186) (diseqInteger_0 (N_36 x_15185) (N_36 x_15186)))))
(declare-fun toInteger_0 (Integer_0 Sign_0 Int) Bool)
(assert (forall ((z_631 Int))
	(toInteger_0 (N_36 z_631) Neg_0 (succ_23 z_631))))
(assert (toInteger_0 (P_64 zero_23) Neg_0 zero_23))
(assert (forall ((y_589 Int))
	(toInteger_0 (P_64 y_589) Pos_0 y_589)))
(declare-fun sign_1 (Sign_0 Integer_0) Bool)
(assert (forall ((z_632 Int))
	(sign_1 Neg_0 (N_36 z_632))))
(assert (forall ((y_590 Int))
	(sign_1 Pos_0 (P_64 y_590))))
(declare-fun plus_21 (Int Int Int) Bool)
(assert (forall ((x_15110 Int) (z_633 Int) (y_591 Int))
	(=> (plus_21 x_15110 z_633 y_591) (plus_21 (succ_23 x_15110) (succ_23 z_633) y_591))))
(assert (forall ((x_15111 Int))
	(plus_21 x_15111 zero_23 x_15111)))
(declare-fun times_3 (Int Int Int) Bool)
(assert (forall ((x_15112 Int) (x_15113 Int) (z_634 Int) (y_592 Int))
	(=> (and (times_3 x_15113 z_634 y_592) (plus_21 x_15112 y_592 x_15113)) (times_3 x_15112 (succ_23 z_634) y_592))))
(assert (forall ((y_592 Int))
	(times_3 zero_23 zero_23 y_592)))
(declare-fun opposite_0 (Sign_0 Sign_0) Bool)
(assert (opposite_0 Pos_0 Neg_0))
(assert (opposite_0 Neg_0 Pos_0))
(declare-fun timesSign_0 (Sign_0 Sign_0 Sign_0) Bool)
(assert (forall ((x_15118 Sign_0) (y_593 Sign_0))
	(=> (opposite_0 x_15118 y_593) (timesSign_0 x_15118 Neg_0 y_593))))
(assert (forall ((x_15120 Sign_0))
	(timesSign_0 x_15120 Pos_0 x_15120)))
(declare-fun absVal_0 (Int Integer_0) Bool)
(assert (forall ((x_15121 Int) (m_17 Int))
	(=> (plus_21 x_15121 (succ_23 zero_23) m_17) (absVal_0 x_15121 (N_36 m_17)))))
(assert (forall ((n_37 Int))
	(absVal_0 n_37 (P_64 n_37))))
(declare-fun times_4 (Integer_0 Integer_0 Integer_0) Bool)
(assert (forall ((x_15124 Integer_0) (x_15125 Sign_0) (x_15126 Sign_0) (x_15127 Sign_0) (x_15128 Int) (x_15129 Int) (x_15130 Int) (x_15090 Integer_0) (y_594 Integer_0))
	(=> (and (sign_1 x_15125 x_15090) (sign_1 x_15126 y_594) (timesSign_0 x_15127 x_15125 x_15126) (absVal_0 x_15128 x_15090) (absVal_0 x_15129 y_594) (times_3 x_15130 x_15128 x_15129) (toInteger_0 x_15124 x_15127 x_15130)) (times_4 x_15124 x_15090 y_594))))
(assert (forall ((x_15132 Integer_0) (x_15133 Integer_0) (x_15091 Integer_0) (y_595 Integer_0))
	(=> (and true (diseqInteger_0 x_15132 x_15133) (times_4 x_15132 x_15091 y_595) (times_4 x_15133 y_595 x_15091)) false)))
(assert (forall ((x_15134 Int) (x_15135 Int) (x_15136 Int) (x_15137 Int) (x_15092 Int) (y_596 Int) (z_635 Int))
	(=> (and true (diseqInt x_15135 x_15137) (times_3 x_15134 y_596 z_635) (times_3 x_15135 x_15092 x_15134) (times_3 x_15136 x_15092 y_596) (times_3 x_15137 x_15136 z_635)) false)))
(assert (forall ((x_15138 Int) (x_15139 Int) (x_15140 Int) (x_15141 Int) (x_15093 Int) (y_597 Int) (z_636 Int))
	(=> (and true (diseqInt x_15139 x_15141) (plus_21 x_15138 y_597 z_636) (plus_21 x_15139 x_15093 x_15138) (plus_21 x_15140 x_15093 y_597) (plus_21 x_15141 x_15140 z_636)) false)))
(assert (forall ((x_15142 Int) (x_15143 Int) (x_15094 Int) (y_598 Int))
	(=> (and true (diseqInt x_15142 x_15143) (times_3 x_15142 x_15094 y_598) (times_3 x_15143 y_598 x_15094)) false)))
(assert (forall ((x_15144 Int) (x_15145 Int) (x_15095 Int) (y_599 Int))
	(=> (and true (diseqInt x_15144 x_15145) (plus_21 x_15144 x_15095 y_599) (plus_21 x_15145 y_599 x_15095)) false)))
(assert (forall ((x_15146 Int) (x_15147 Int) (x_15148 Int) (x_15149 Int) (x_15150 Int) (x_15096 Int) (y_600 Int) (z_637 Int))
	(=> (and true (diseqInt x_15147 x_15150) (plus_21 x_15146 y_600 z_637) (times_3 x_15147 x_15096 x_15146) (times_3 x_15148 x_15096 y_600) (times_3 x_15149 x_15096 z_637) (plus_21 x_15150 x_15148 x_15149)) false)))
(assert (forall ((x_15151 Int) (x_15152 Int) (x_15153 Int) (x_15154 Int) (x_15155 Int) (x_15097 Int) (y_601 Int) (z_638 Int))
	(=> (and true (diseqInt x_15152 x_15155) (plus_21 x_15151 x_15097 y_601) (times_3 x_15152 x_15151 z_638) (times_3 x_15153 x_15097 z_638) (times_3 x_15154 y_601 z_638) (plus_21 x_15155 x_15153 x_15154)) false)))
(assert (forall ((x_15156 Int) (x_15098 Int))
	(=> (and true (diseqInt x_15156 x_15098) (times_3 x_15156 x_15098 (succ_23 zero_23))) false)))
(assert (forall ((x_15157 Int) (x_15099 Int))
	(=> (and true (diseqInt x_15157 x_15099) (times_3 x_15157 (succ_23 zero_23) x_15099)) false)))
(assert (forall ((x_15158 Int) (x_15100 Int))
	(=> (and true (diseqInt x_15158 x_15100) (plus_21 x_15158 x_15100 zero_23)) false)))
(assert (forall ((x_15159 Int) (x_15101 Int))
	(=> (and true (diseqInt x_15159 x_15101) (plus_21 x_15159 zero_23 x_15101)) false)))
(assert (forall ((x_15160 Int) (x_15102 Int))
	(=> (and true (diseqInt x_15160 zero_23) (times_3 x_15160 x_15102 zero_23)) false)))
(assert (forall ((x_15161 Int) (x_15103 Int))
	(=> (and true (diseqInt x_15161 zero_23) (times_3 x_15161 zero_23 x_15103)) false)))
(check-sat)
