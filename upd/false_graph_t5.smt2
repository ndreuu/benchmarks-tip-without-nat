
(set-logic HORN)
(declare-fun Z_2330 () Int)
(declare-fun S_536 (Int) Int)
(declare-fun diseqInt (Int Int) Bool)
(declare-fun unS_769 (Int Int) Bool)
(declare-fun isZ_503 (Int) Bool)
(declare-fun isS_503 (Int) Bool)
(assert (forall ((x_60078 Int))
	(unS_769 x_60078 (S_536 x_60078))))
(assert (isZ_503 Z_2330))
(assert (forall ((x_60080 Int))
	(isS_503 (S_536 x_60080))))
(assert (forall ((x_60081 Int))
	(diseqInt Z_2330 (S_536 x_60081))))
(assert (forall ((x_60082 Int))
	(diseqInt (S_536 x_60082) Z_2330)))
(assert (forall ((x_60083 Int) (x_60084 Int))
	(=> (diseqInt x_60083 x_60084) (diseqInt (S_536 x_60083) (S_536 x_60084)))))
(declare-fun add_410 (Int Int Int) Bool)
(declare-fun minus_405 (Int Int Int) Bool)
(declare-fun le_384 (Int Int) Bool)
(declare-fun ge_384 (Int Int) Bool)
(declare-fun lt_404 (Int Int) Bool)
(declare-fun gt_387 (Int Int) Bool)
(declare-fun mult_385 (Int Int Int) Bool)
(declare-fun div_384 (Int Int Int) Bool)
(declare-fun mod_386 (Int Int Int) Bool)
(assert (forall ((y_2607 Int))
	(add_410 y_2607 Z_2330 y_2607)))
(assert (forall ((x_60019 Int) (y_2607 Int) (r_481 Int))
	(=> (add_410 r_481 x_60019 y_2607) (add_410 (S_536 r_481) (S_536 x_60019) y_2607))))
(assert (forall ((y_2607 Int))
	(minus_405 Z_2330 Z_2330 y_2607)))
(assert (forall ((x_60019 Int) (y_2607 Int) (r_481 Int))
	(=> (minus_405 r_481 x_60019 y_2607) (minus_405 (S_536 r_481) (S_536 x_60019) y_2607))))
(assert (forall ((y_2607 Int))
	(le_384 Z_2330 y_2607)))
(assert (forall ((x_60019 Int) (y_2607 Int))
	(=> (le_384 x_60019 y_2607) (le_384 (S_536 x_60019) (S_536 y_2607)))))
(assert (forall ((y_2607 Int))
	(ge_384 y_2607 Z_2330)))
(assert (forall ((x_60019 Int) (y_2607 Int))
	(=> (ge_384 x_60019 y_2607) (ge_384 (S_536 x_60019) (S_536 y_2607)))))
(assert (forall ((y_2607 Int))
	(lt_404 Z_2330 (S_536 y_2607))))
(assert (forall ((x_60019 Int) (y_2607 Int))
	(=> (lt_404 x_60019 y_2607) (lt_404 (S_536 x_60019) (S_536 y_2607)))))
(assert (forall ((y_2607 Int))
	(gt_387 (S_536 y_2607) Z_2330)))
(assert (forall ((x_60019 Int) (y_2607 Int))
	(=> (gt_387 x_60019 y_2607) (gt_387 (S_536 x_60019) (S_536 y_2607)))))
(assert (forall ((y_2607 Int))
	(mult_385 Z_2330 Z_2330 y_2607)))
(assert (forall ((x_60019 Int) (y_2607 Int) (r_481 Int) (z_2331 Int))
	(=> (and (mult_385 r_481 x_60019 y_2607) (add_410 z_2331 r_481 y_2607)) (mult_385 z_2331 (S_536 x_60019) y_2607))))
(assert (forall ((x_60019 Int) (y_2607 Int))
	(=> (lt_404 x_60019 y_2607) (div_384 Z_2330 x_60019 y_2607))))
(assert (forall ((x_60019 Int) (y_2607 Int) (r_481 Int) (z_2331 Int))
	(=> (and (ge_384 x_60019 y_2607) (minus_405 z_2331 x_60019 y_2607) (div_384 r_481 z_2331 y_2607)) (div_384 (S_536 r_481) x_60019 y_2607))))
(assert (forall ((x_60019 Int) (y_2607 Int))
	(=> (lt_404 x_60019 y_2607) (mod_386 x_60019 x_60019 y_2607))))
(assert (forall ((x_60019 Int) (y_2607 Int) (r_481 Int) (z_2331 Int))
	(=> (and (ge_384 x_60019 y_2607) (minus_405 z_2331 x_60019 y_2607) (mod_386 r_481 z_2331 y_2607)) (mod_386 r_481 x_60019 y_2607))))
(declare-datatypes ((Bool_384 0)) (((false_384) (true_384))))
(declare-fun diseqBool_175 (Bool_384 Bool_384) Bool)
(declare-fun isfalse_175 (Bool_384) Bool)
(declare-fun istrue_175 (Bool_384) Bool)
(assert (isfalse_175 false_384))
(assert (istrue_175 true_384))
(assert (diseqBool_175 false_384 true_384))
(assert (diseqBool_175 true_384 false_384))
(declare-fun and_385 (Bool_384 Bool_384 Bool_384) Bool)
(declare-fun or_397 (Bool_384 Bool_384 Bool_384) Bool)
(declare-fun hence_384 (Bool_384 Bool_384 Bool_384) Bool)
(declare-fun not_389 (Bool_384 Bool_384) Bool)
(assert (and_385 false_384 false_384 false_384))
(assert (and_385 false_384 true_384 false_384))
(assert (and_385 false_384 false_384 true_384))
(assert (and_385 true_384 true_384 true_384))
(assert (or_397 false_384 false_384 false_384))
(assert (or_397 true_384 true_384 false_384))
(assert (or_397 true_384 false_384 true_384))
(assert (or_397 true_384 true_384 true_384))
(assert (hence_384 true_384 false_384 false_384))
(assert (hence_384 false_384 true_384 false_384))
(assert (hence_384 true_384 false_384 true_384))
(assert (hence_384 true_384 true_384 true_384))
(assert (not_389 true_384 false_384))
(assert (not_389 false_384 true_384))
(declare-datatypes ((pair_120 0)) (((pair_121 (projpair_240 Int) (projpair_241 Int)))))
(declare-fun diseqpair_60 (pair_120 pair_120) Bool)
(declare-fun projpair_242 (Int pair_120) Bool)
(declare-fun projpair_243 (Int pair_120) Bool)
(declare-fun ispair_60 (pair_120) Bool)
(assert (forall ((x_60087 Int) (x_60088 Int))
	(projpair_242 x_60087 (pair_121 x_60087 x_60088))))
(assert (forall ((x_60087 Int) (x_60088 Int))
	(projpair_243 x_60088 (pair_121 x_60087 x_60088))))
(assert (forall ((x_60090 Int) (x_60091 Int))
	(ispair_60 (pair_121 x_60090 x_60091))))
(assert (forall ((x_60092 Int) (x_60093 Int) (x_60094 Int) (x_60095 Int))
	(=> (diseqInt x_60092 x_60094) (diseqpair_60 (pair_121 x_60092 x_60093) (pair_121 x_60094 x_60095)))))
(assert (forall ((x_60092 Int) (x_60093 Int) (x_60094 Int) (x_60095 Int))
	(=> (diseqInt x_60093 x_60095) (diseqpair_60 (pair_121 x_60092 x_60093) (pair_121 x_60094 x_60095)))))
(declare-datatypes ((list_302 0)) (((nil_334) (cons_299 (head_598 Bool_384) (tail_601 list_302)))))
(declare-fun diseqlist_299 (list_302 list_302) Bool)
(declare-fun head_601 (Bool_384 list_302) Bool)
(declare-fun tail_604 (list_302 list_302) Bool)
(declare-fun isnil_334 (list_302) Bool)
(declare-fun iscons_299 (list_302) Bool)
(assert (forall ((x_60097 Bool_384) (x_60098 list_302))
	(head_601 x_60097 (cons_299 x_60097 x_60098))))
(assert (forall ((x_60097 Bool_384) (x_60098 list_302))
	(tail_604 x_60098 (cons_299 x_60097 x_60098))))
(assert (isnil_334 nil_334))
(assert (forall ((x_60100 Bool_384) (x_60101 list_302))
	(iscons_299 (cons_299 x_60100 x_60101))))
(assert (forall ((x_60102 Bool_384) (x_60103 list_302))
	(diseqlist_299 nil_334 (cons_299 x_60102 x_60103))))
(assert (forall ((x_60104 Bool_384) (x_60105 list_302))
	(diseqlist_299 (cons_299 x_60104 x_60105) nil_334)))
(assert (forall ((x_60106 Bool_384) (x_60107 list_302) (x_60108 Bool_384) (x_60109 list_302))
	(=> (diseqBool_175 x_60106 x_60108) (diseqlist_299 (cons_299 x_60106 x_60107) (cons_299 x_60108 x_60109)))))
(assert (forall ((x_60106 Bool_384) (x_60107 list_302) (x_60108 Bool_384) (x_60109 list_302))
	(=> (diseqlist_299 x_60107 x_60109) (diseqlist_299 (cons_299 x_60106 x_60107) (cons_299 x_60108 x_60109)))))
(declare-datatypes ((list_303 0)) (((nil_335) (cons_300 (head_599 Int) (tail_602 list_303)))))
(declare-fun diseqlist_300 (list_303 list_303) Bool)
(declare-fun head_602 (Int list_303) Bool)
(declare-fun tail_605 (list_303 list_303) Bool)
(declare-fun isnil_335 (list_303) Bool)
(declare-fun iscons_300 (list_303) Bool)
(assert (forall ((x_60111 Int) (x_60112 list_303))
	(head_602 x_60111 (cons_300 x_60111 x_60112))))
(assert (forall ((x_60111 Int) (x_60112 list_303))
	(tail_605 x_60112 (cons_300 x_60111 x_60112))))
(assert (isnil_335 nil_335))
(assert (forall ((x_60114 Int) (x_60115 list_303))
	(iscons_300 (cons_300 x_60114 x_60115))))
(assert (forall ((x_60116 Int) (x_60117 list_303))
	(diseqlist_300 nil_335 (cons_300 x_60116 x_60117))))
(assert (forall ((x_60118 Int) (x_60119 list_303))
	(diseqlist_300 (cons_300 x_60118 x_60119) nil_335)))
(assert (forall ((x_60120 Int) (x_60121 list_303) (x_60122 Int) (x_60123 list_303))
	(=> (diseqInt x_60120 x_60122) (diseqlist_300 (cons_300 x_60120 x_60121) (cons_300 x_60122 x_60123)))))
(assert (forall ((x_60120 Int) (x_60121 list_303) (x_60122 Int) (x_60123 list_303))
	(=> (diseqlist_300 x_60121 x_60123) (diseqlist_300 (cons_300 x_60120 x_60121) (cons_300 x_60122 x_60123)))))
(declare-datatypes ((list_304 0)) (((nil_336) (cons_301 (head_600 pair_120) (tail_603 list_304)))))
(declare-fun diseqlist_301 (list_304 list_304) Bool)
(declare-fun head_603 (pair_120 list_304) Bool)
(declare-fun tail_606 (list_304 list_304) Bool)
(declare-fun isnil_336 (list_304) Bool)
(declare-fun iscons_301 (list_304) Bool)
(assert (forall ((x_60125 pair_120) (x_60126 list_304))
	(head_603 x_60125 (cons_301 x_60125 x_60126))))
(assert (forall ((x_60125 pair_120) (x_60126 list_304))
	(tail_606 x_60126 (cons_301 x_60125 x_60126))))
(assert (isnil_336 nil_336))
(assert (forall ((x_60128 pair_120) (x_60129 list_304))
	(iscons_301 (cons_301 x_60128 x_60129))))
(assert (forall ((x_60130 pair_120) (x_60131 list_304))
	(diseqlist_301 nil_336 (cons_301 x_60130 x_60131))))
(assert (forall ((x_60132 pair_120) (x_60133 list_304))
	(diseqlist_301 (cons_301 x_60132 x_60133) nil_336)))
(assert (forall ((x_60134 pair_120) (x_60135 list_304) (x_60136 pair_120) (x_60137 list_304))
	(=> (diseqpair_60 x_60134 x_60136) (diseqlist_301 (cons_301 x_60134 x_60135) (cons_301 x_60136 x_60137)))))
(assert (forall ((x_60134 pair_120) (x_60135 list_304) (x_60136 pair_120) (x_60137 list_304))
	(=> (diseqlist_301 x_60135 x_60137) (diseqlist_301 (cons_301 x_60134 x_60135) (cons_301 x_60136 x_60137)))))
(declare-fun primEnumFromTo_3 (list_303 Int Int) Bool)
(assert (forall ((x_59817 Int) (y_2587 Int))
	(=> (gt_387 x_59817 y_2587) (primEnumFromTo_3 nil_335 x_59817 y_2587))))
(assert (forall ((x_60020 Int) (x_59850 list_303) (x_59817 Int) (y_2587 Int))
	(=> (and (le_384 x_59817 y_2587) (primEnumFromTo_3 x_59850 x_60020 y_2587) (add_410 x_60020 (S_536 Z_2330) x_59817)) (primEnumFromTo_3 (cons_300 x_59817 x_59850) x_59817 y_2587))))
(declare-fun path_2 (list_302 Int Int list_304) Bool)
(assert (forall ((x_59852 list_302) (u_8 Int) (x_59820 list_304))
	(=> (path_2 x_59852 u_8 u_8 x_59820) (path_2 (cons_299 true_384 x_59852) u_8 u_8 (cons_301 (pair_121 u_8 u_8) x_59820)))))
(assert (forall ((x_59854 list_302) (u_8 Int) (x_59820 list_304))
	(=> (and (diseqInt u_8 u_8) (path_2 x_59854 u_8 u_8 x_59820)) (path_2 (cons_299 true_384 x_59854) u_8 u_8 (cons_301 (pair_121 u_8 u_8) x_59820)))))
(assert (forall ((x_59856 list_302) (u_8 Int) (x_59820 list_304))
	(=> (and (diseqInt u_8 u_8) (path_2 x_59856 u_8 u_8 x_59820)) (path_2 (cons_299 true_384 x_59856) u_8 u_8 (cons_301 (pair_121 u_8 u_8) x_59820)))))
(assert (forall ((x_59858 list_302) (u_8 Int) (v_8 Int) (x_59820 list_304))
	(=> (and (diseqInt u_8 v_8) (diseqInt v_8 u_8) (path_2 x_59858 v_8 u_8 x_59820)) (path_2 (cons_299 true_384 x_59858) v_8 u_8 (cons_301 (pair_121 u_8 v_8) x_59820)))))
(assert (forall ((x_59860 list_302) (u_8 Int) (x_59820 list_304))
	(=> (and (diseqInt u_8 u_8) (path_2 x_59860 u_8 u_8 x_59820)) (path_2 (cons_299 true_384 x_59860) u_8 u_8 (cons_301 (pair_121 u_8 u_8) x_59820)))))
(assert (forall ((x_59862 list_302) (u_8 Int) (v_8 Int) (x_59820 list_304))
	(=> (and (diseqInt u_8 v_8) (diseqInt u_8 v_8) (path_2 x_59862 v_8 v_8 x_59820)) (path_2 (cons_299 false_384 x_59862) v_8 v_8 (cons_301 (pair_121 u_8 v_8) x_59820)))))
(assert (forall ((x_59864 list_302) (u_8 Int) (x_59820 list_304) (y_2588 Int))
	(=> (and (diseqInt u_8 y_2588) (diseqInt u_8 y_2588) (path_2 x_59864 u_8 y_2588 x_59820)) (path_2 (cons_299 false_384 x_59864) u_8 y_2588 (cons_301 (pair_121 u_8 u_8) x_59820)))))
(assert (forall ((x_59866 list_302) (u_8 Int) (v_8 Int) (x_59820 list_304) (y_2588 Int))
	(=> (and (diseqInt u_8 v_8) (diseqInt v_8 y_2588) (diseqInt u_8 y_2588) (path_2 x_59866 v_8 y_2588 x_59820)) (path_2 (cons_299 false_384 x_59866) v_8 y_2588 (cons_301 (pair_121 u_8 v_8) x_59820)))))
(assert (forall ((x_59868 list_302) (u_8 Int) (x_59820 list_304))
	(=> (and (diseqInt u_8 u_8) (path_2 x_59868 u_8 u_8 x_59820)) (path_2 (cons_299 true_384 x_59868) u_8 u_8 (cons_301 (pair_121 u_8 u_8) x_59820)))))
(assert (forall ((x_59870 list_302) (u_8 Int) (x_59820 list_304) (x_59818 Int))
	(=> (and (diseqInt u_8 x_59818) (diseqInt u_8 x_59818) (path_2 x_59870 x_59818 u_8 x_59820)) (path_2 (cons_299 false_384 x_59870) x_59818 u_8 (cons_301 (pair_121 u_8 u_8) x_59820)))))
(assert (forall ((x_59872 list_302) (u_8 Int) (v_8 Int) (x_59820 list_304))
	(=> (and (diseqInt v_8 u_8) (diseqInt v_8 u_8) (path_2 x_59872 u_8 u_8 x_59820)) (path_2 (cons_299 false_384 x_59872) u_8 u_8 (cons_301 (pair_121 u_8 v_8) x_59820)))))
(assert (forall ((x_59874 list_302) (u_8 Int) (v_8 Int) (x_59820 list_304) (x_59818 Int))
	(=> (and (diseqInt u_8 x_59818) (diseqInt v_8 u_8) (diseqInt v_8 x_59818) (path_2 x_59874 x_59818 u_8 x_59820)) (path_2 (cons_299 false_384 x_59874) x_59818 u_8 (cons_301 (pair_121 u_8 v_8) x_59820)))))
(assert (forall ((x_59876 list_302) (u_8 Int) (v_8 Int) (x_59820 list_304))
	(=> (and (diseqInt u_8 v_8) (diseqInt v_8 u_8) (path_2 x_59876 u_8 v_8 x_59820)) (path_2 (cons_299 true_384 x_59876) u_8 v_8 (cons_301 (pair_121 u_8 v_8) x_59820)))))
(assert (forall ((x_59878 list_302) (u_8 Int) (v_8 Int) (x_59820 list_304) (x_59818 Int))
	(=> (and (diseqInt u_8 x_59818) (diseqInt u_8 v_8) (diseqInt v_8 x_59818) (path_2 x_59878 x_59818 v_8 x_59820)) (path_2 (cons_299 false_384 x_59878) x_59818 v_8 (cons_301 (pair_121 u_8 v_8) x_59820)))))
(assert (forall ((x_59880 list_302) (u_8 Int) (v_8 Int) (x_59820 list_304) (y_2588 Int))
	(=> (and (diseqInt v_8 y_2588) (diseqInt u_8 y_2588) (diseqInt v_8 u_8) (path_2 x_59880 u_8 y_2588 x_59820)) (path_2 (cons_299 false_384 x_59880) u_8 y_2588 (cons_301 (pair_121 u_8 v_8) x_59820)))))
(assert (forall ((x_59882 list_302) (u_8 Int) (v_8 Int) (x_59820 list_304) (x_59818 Int) (y_2588 Int))
	(=> (and (diseqInt u_8 x_59818) (diseqInt v_8 y_2588) (diseqInt u_8 y_2588) (diseqInt v_8 x_59818) (path_2 x_59882 x_59818 y_2588 x_59820)) (path_2 (cons_299 false_384 x_59882) x_59818 y_2588 (cons_301 (pair_121 u_8 v_8) x_59820)))))
(assert (forall ((x_59818 Int) (y_2588 Int))
	(path_2 nil_334 x_59818 y_2588 nil_336)))
(declare-fun or_396 (Bool_384 list_302) Bool)
(assert (forall ((x_59884 Bool_384) (x_59885 Bool_384) (y_2589 Bool_384) (xs_767 list_302))
	(=> (and (or_396 x_59885 xs_767) (or_397 x_59884 y_2589 x_59885)) (or_396 x_59884 (cons_299 y_2589 xs_767)))))
(assert (or_396 false_384 nil_334))
(declare-fun path_3 (Bool_384 list_303 list_304) Bool)
(assert (forall ((x_59887 Bool_384) (x_59888 list_302) (x_59889 Bool_384) (x_59890 Bool_384) (y_2591 Int) (xs_768 list_303) (z_2317 Int) (y_2590 list_304))
	(=> (and (path_2 x_59888 z_2317 y_2591 y_2590) (or_396 x_59889 x_59888) (path_3 x_59890 (cons_300 y_2591 xs_768) y_2590) (and_385 x_59887 x_59889 x_59890)) (path_3 x_59887 (cons_300 z_2317 (cons_300 y_2591 xs_768)) y_2590))))
(assert (forall ((z_2317 Int) (y_2590 list_304))
	(path_3 true_384 (cons_300 z_2317 nil_335) y_2590)))
(assert (forall ((y_2590 list_304))
	(path_3 true_384 nil_335 y_2590)))
(declare-fun maximummaximum_2 (Int Int list_304) Bool)
(assert (forall ((x_59893 Int) (y_2594 Int) (y_2593 Int) (yzs_2 list_304) (x_59824 Int))
	(=> (and (le_384 y_2593 y_2594) (le_384 x_59824 y_2594) (maximummaximum_2 x_59893 y_2594 yzs_2)) (maximummaximum_2 x_59893 x_59824 (cons_301 (pair_121 y_2593 y_2594) yzs_2)))))
(assert (forall ((x_59895 Int) (y_2594 Int) (y_2593 Int) (yzs_2 list_304) (x_59824 Int))
	(=> (and (le_384 y_2593 y_2594) (gt_387 x_59824 y_2594) (maximummaximum_2 x_59895 x_59824 yzs_2)) (maximummaximum_2 x_59895 x_59824 (cons_301 (pair_121 y_2593 y_2594) yzs_2)))))
(assert (forall ((x_59897 Int) (y_2593 Int) (z_2319 Int) (yzs_2 list_304) (x_59824 Int))
	(=> (and (gt_387 y_2593 z_2319) (le_384 x_59824 y_2593) (maximummaximum_2 x_59897 y_2593 yzs_2)) (maximummaximum_2 x_59897 x_59824 (cons_301 (pair_121 y_2593 z_2319) yzs_2)))))
(assert (forall ((x_59899 Int) (y_2593 Int) (z_2319 Int) (yzs_2 list_304) (x_59824 Int))
	(=> (and (gt_387 y_2593 z_2319) (gt_387 x_59824 y_2593) (maximummaximum_2 x_59899 x_59824 yzs_2)) (maximummaximum_2 x_59899 x_59824 (cons_301 (pair_121 y_2593 z_2319) yzs_2)))))
(assert (forall ((x_59824 Int))
	(maximummaximum_2 x_59824 x_59824 nil_336)))
(declare-fun length_62 (Int list_303) Bool)
(assert (forall ((x_59902 Int) (x_59903 Int) (y_2595 Int) (l_51 list_303))
	(=> (and (length_62 x_59903 l_51) (add_410 x_59902 (S_536 Z_2330) x_59903)) (length_62 x_59902 (cons_300 y_2595 l_51)))))
(assert (length_62 Z_2330 nil_335))
(declare-fun last_11 (Int Int list_303) Bool)
(assert (forall ((x_59905 Int) (z_2320 Int) (ys_219 list_303) (x_59826 Int))
	(=> (last_11 x_59905 z_2320 ys_219) (last_11 x_59905 x_59826 (cons_300 z_2320 ys_219)))))
(assert (forall ((x_59826 Int))
	(last_11 x_59826 x_59826 nil_335)))
(declare-fun elem_26 (Bool_384 Int list_303) Bool)
(assert (forall ((xs_769 list_303) (x_59827 Int))
	(elem_26 true_384 x_59827 (cons_300 x_59827 xs_769))))
(assert (forall ((x_59909 Bool_384) (z_2321 Int) (xs_769 list_303) (x_59827 Int))
	(=> (and (diseqInt z_2321 x_59827) (elem_26 x_59909 x_59827 xs_769)) (elem_26 x_59909 x_59827 (cons_300 z_2321 xs_769)))))
(assert (forall ((x_59827 Int))
	(elem_26 false_384 x_59827 nil_335)))
(declare-fun unique_1 (Bool_384 list_303) Bool)
(assert (forall ((y_2598 Int) (xs_770 list_303))
	(=> (elem_26 true_384 y_2598 xs_770) (unique_1 false_384 (cons_300 y_2598 xs_770)))))
(assert (forall ((x_59915 Bool_384) (y_2598 Int) (xs_770 list_303))
	(=> (and (unique_1 x_59915 xs_770) (elem_26 false_384 y_2598 xs_770)) (unique_1 x_59915 (cons_300 y_2598 xs_770)))))
(assert (unique_1 true_384 nil_335))
(declare-fun tour_1 (Bool_384 list_303 list_304) Bool)
(assert (forall ((x_59921 Bool_384) (x_59922 Bool_384) (x_59923 Bool_384) (x_59919 Int) (x_59920 Int) (u_9 Int) (v_9 Int) (vs_5 list_304) (x_59830 Int) (x_59831 list_303))
	(=> (and (le_384 u_9 v_9) (path_3 x_59922 (cons_300 x_59830 x_59831) (cons_301 (pair_121 u_9 v_9) vs_5)) (unique_1 x_59923 x_59831) (length_62 x_59919 (cons_300 x_59830 x_59831)) (maximummaximum_2 x_59920 v_9 vs_5) (last_11 x_59830 x_59830 x_59831) (and_385 x_59921 x_59922 x_59923) (add_410 x_59919 (S_536 (S_536 Z_2330)) x_59920)) (tour_1 x_59921 (cons_300 x_59830 x_59831) (cons_301 (pair_121 u_9 v_9) vs_5)))))
(assert (forall ((x_59925 Int) (x_59926 Int) (x_59924 Int) (u_9 Int) (v_9 Int) (vs_5 list_304) (x_59830 Int) (x_59831 list_303))
	(=> (and (diseqInt x_59830 x_59924) (le_384 u_9 v_9) (length_62 x_59925 (cons_300 x_59830 x_59831)) (maximummaximum_2 x_59926 v_9 vs_5) (last_11 x_59924 x_59830 x_59831) (add_410 x_59925 (S_536 (S_536 Z_2330)) x_59926)) (tour_1 false_384 (cons_300 x_59830 x_59831) (cons_301 (pair_121 u_9 v_9) vs_5)))))
(assert (forall ((x_60024 Int) (x_59929 Int) (x_59930 Int) (u_9 Int) (v_9 Int) (vs_5 list_304) (x_59830 Int) (x_59831 list_303))
	(=> (and (diseqInt x_59929 x_60024) (le_384 u_9 v_9) (length_62 x_59929 (cons_300 x_59830 x_59831)) (maximummaximum_2 x_59930 v_9 vs_5) (last_11 x_59830 x_59830 x_59831) (add_410 x_60024 (S_536 (S_536 Z_2330)) x_59930)) (tour_1 false_384 (cons_300 x_59830 x_59831) (cons_301 (pair_121 u_9 v_9) vs_5)))))
(assert (forall ((x_60025 Int) (x_59933 Int) (x_59934 Int) (x_59932 Int) (u_9 Int) (v_9 Int) (vs_5 list_304) (x_59830 Int) (x_59831 list_303))
	(=> (and (diseqInt x_59830 x_59932) (diseqInt x_59933 x_60025) (le_384 u_9 v_9) (length_62 x_59933 (cons_300 x_59830 x_59831)) (maximummaximum_2 x_59934 v_9 vs_5) (last_11 x_59932 x_59830 x_59831) (add_410 x_60025 (S_536 (S_536 Z_2330)) x_59934)) (tour_1 false_384 (cons_300 x_59830 x_59831) (cons_301 (pair_121 u_9 v_9) vs_5)))))
(assert (forall ((x_59939 Bool_384) (x_59940 Bool_384) (x_59941 Bool_384) (x_59937 Int) (x_59938 Int) (u_9 Int) (v_9 Int) (vs_5 list_304) (x_59830 Int) (x_59831 list_303))
	(=> (and (gt_387 u_9 v_9) (path_3 x_59940 (cons_300 x_59830 x_59831) (cons_301 (pair_121 u_9 v_9) vs_5)) (unique_1 x_59941 x_59831) (length_62 x_59937 (cons_300 x_59830 x_59831)) (maximummaximum_2 x_59938 u_9 vs_5) (last_11 x_59830 x_59830 x_59831) (and_385 x_59939 x_59940 x_59941) (add_410 x_59937 (S_536 (S_536 Z_2330)) x_59938)) (tour_1 x_59939 (cons_300 x_59830 x_59831) (cons_301 (pair_121 u_9 v_9) vs_5)))))
(assert (forall ((x_59943 Int) (x_59944 Int) (x_59942 Int) (u_9 Int) (v_9 Int) (vs_5 list_304) (x_59830 Int) (x_59831 list_303))
	(=> (and (diseqInt x_59830 x_59942) (gt_387 u_9 v_9) (length_62 x_59943 (cons_300 x_59830 x_59831)) (maximummaximum_2 x_59944 u_9 vs_5) (last_11 x_59942 x_59830 x_59831) (add_410 x_59943 (S_536 (S_536 Z_2330)) x_59944)) (tour_1 false_384 (cons_300 x_59830 x_59831) (cons_301 (pair_121 u_9 v_9) vs_5)))))
(assert (forall ((x_60028 Int) (x_59947 Int) (x_59948 Int) (u_9 Int) (v_9 Int) (vs_5 list_304) (x_59830 Int) (x_59831 list_303))
	(=> (and (diseqInt x_59947 x_60028) (gt_387 u_9 v_9) (length_62 x_59947 (cons_300 x_59830 x_59831)) (maximummaximum_2 x_59948 u_9 vs_5) (last_11 x_59830 x_59830 x_59831) (add_410 x_60028 (S_536 (S_536 Z_2330)) x_59948)) (tour_1 false_384 (cons_300 x_59830 x_59831) (cons_301 (pair_121 u_9 v_9) vs_5)))))
(assert (forall ((x_60029 Int) (x_59951 Int) (x_59952 Int) (x_59950 Int) (u_9 Int) (v_9 Int) (vs_5 list_304) (x_59830 Int) (x_59831 list_303))
	(=> (and (diseqInt x_59830 x_59950) (diseqInt x_59951 x_60029) (gt_387 u_9 v_9) (length_62 x_59951 (cons_300 x_59830 x_59831)) (maximummaximum_2 x_59952 u_9 vs_5) (last_11 x_59950 x_59830 x_59831) (add_410 x_60029 (S_536 (S_536 Z_2330)) x_59952)) (tour_1 false_384 (cons_300 x_59830 x_59831) (cons_301 (pair_121 u_9 v_9) vs_5)))))
(assert (forall ((x_59830 Int) (x_59831 list_303))
	(tour_1 false_384 (cons_300 x_59830 x_59831) nil_336)))
(assert (forall ((z_2322 pair_120) (x_59833 list_304))
	(tour_1 false_384 nil_335 (cons_301 z_2322 x_59833))))
(assert (tour_1 true_384 nil_335 nil_336))
(declare-fun dodeca_7 (list_304 Int list_303) Bool)
(assert (forall ((x_60030 Int) (x_60031 Int) (x_60032 Int) (x_60033 Int) (x_60034 Int) (x_60035 Int) (x_60036 Int) (x_59958 list_304) (z_2323 Int) (x_59835 list_303) (x_59834 Int))
	(=> (and (dodeca_7 x_59958 x_59834 x_59835) (add_410 x_60030 x_59834 x_59834) (add_410 x_60031 x_60030 x_59834) (add_410 x_60032 x_60031 z_2323) (add_410 x_60033 x_59834 x_59834) (add_410 x_60034 x_60033 x_59834) (add_410 x_60035 (S_536 Z_2330) z_2323) (add_410 x_60036 x_60034 x_60035)) (dodeca_7 (cons_301 (pair_121 x_60032 x_60036) x_59958) x_59834 (cons_300 z_2323 x_59835)))))
(assert (forall ((x_59834 Int))
	(dodeca_7 nil_336 x_59834 nil_335)))
(declare-fun dodeca_8 (list_304 Int list_303) Bool)
(assert (forall ((x_60037 Int) (x_60038 Int) (x_60039 Int) (x_60040 Int) (x_60041 Int) (x_59961 list_304) (z_2324 Int) (x_59837 list_303) (x_59836 Int))
	(=> (and (dodeca_8 x_59961 x_59836 x_59837) (add_410 x_60037 x_59836 x_59836) (add_410 x_60038 x_60037 z_2324) (add_410 x_60039 x_59836 x_59836) (add_410 x_60040 x_60039 x_59836) (add_410 x_60041 x_60040 z_2324)) (dodeca_8 (cons_301 (pair_121 x_60038 x_60041) x_59961) x_59836 (cons_300 z_2324 x_59837)))))
(assert (forall ((x_59836 Int))
	(dodeca_8 nil_336 x_59836 nil_335)))
(declare-fun dodeca_9 (list_304 Int list_303) Bool)
(assert (forall ((x_60042 Int) (x_60043 Int) (x_60044 Int) (x_60045 Int) (x_59964 list_304) (z_2325 Int) (x_59839 list_303) (x_59838 Int))
	(=> (and (dodeca_9 x_59964 x_59838 x_59839) (add_410 x_60042 (S_536 Z_2330) z_2325) (add_410 x_60043 x_59838 x_60042) (add_410 x_60044 x_59838 x_59838) (add_410 x_60045 x_60044 z_2325)) (dodeca_9 (cons_301 (pair_121 x_60043 x_60045) x_59964) x_59838 (cons_300 z_2325 x_59839)))))
(assert (forall ((x_59838 Int))
	(dodeca_9 nil_336 x_59838 nil_335)))
(declare-fun dodeca_10 (list_304 Int list_303) Bool)
(assert (forall ((x_60046 Int) (x_60047 Int) (x_60048 Int) (x_59967 list_304) (z_2326 Int) (x_59841 list_303) (x_59840 Int))
	(=> (and (dodeca_10 x_59967 x_59840 x_59841) (add_410 x_60046 x_59840 z_2326) (add_410 x_60047 x_59840 x_59840) (add_410 x_60048 x_60047 z_2326)) (dodeca_10 (cons_301 (pair_121 x_60046 x_60048) x_59967) x_59840 (cons_300 z_2326 x_59841)))))
(assert (forall ((x_59840 Int))
	(dodeca_10 nil_336 x_59840 nil_335)))
(declare-fun dodeca_11 (list_304 Int list_303) Bool)
(assert (forall ((x_60049 Int) (x_59970 list_304) (z_2327 Int) (x_59843 list_303) (x_59842 Int))
	(=> (and (dodeca_11 x_59970 x_59842 x_59843) (add_410 x_60049 x_59842 z_2327)) (dodeca_11 (cons_301 (pair_121 z_2327 x_60049) x_59970) x_59842 (cons_300 z_2327 x_59843)))))
(assert (forall ((x_59842 Int))
	(dodeca_11 nil_336 x_59842 nil_335)))
(declare-fun dodeca_12 (list_304 list_303) Bool)
(assert (forall ((x_60050 Int) (x_59973 list_304) (y_2605 Int) (z_2328 list_303))
	(=> (and (dodeca_12 x_59973 z_2328) (add_410 x_60050 (S_536 Z_2330) y_2605)) (dodeca_12 (cons_301 (pair_121 y_2605 x_60050) x_59973) (cons_300 y_2605 z_2328)))))
(assert (dodeca_12 nil_336 nil_335))
(declare-fun x_59845 (list_304 list_304 list_304) Bool)
(assert (forall ((x_59976 list_304) (z_2329 pair_120) (xs_771 list_304) (y_2606 list_304))
	(=> (x_59845 x_59976 xs_771 y_2606) (x_59845 (cons_301 z_2329 x_59976) (cons_301 z_2329 xs_771) y_2606))))
(assert (forall ((x_59977 list_304))
	(x_59845 x_59977 nil_336 x_59977)))
(declare-fun dodeca_13 (list_304 Int) Bool)
(assert (dodeca_13 nil_336 Z_2330))
(assert (forall ((x_60063 Int) (x_60060 Int) (x_60061 Int) (x_60062 Int) (x_60054 Int) (x_60055 Int) (x_60056 Int) (x_60057 Int) (x_60058 Int) (x_60059 Int) (x_60053 Int) (x_60052 Int) (x_60051 Int) (x_59979 list_304) (x_59980 list_303) (x_59981 list_304) (x_59982 list_303) (x_59983 list_304) (x_59984 list_303) (x_59985 list_304) (x_59986 list_303) (x_59987 list_304) (x_59988 list_303) (x_59989 list_304) (x_59990 list_303) (x_59991 list_304) (x_59992 list_304) (x_59993 list_304) (x_59994 list_304) (x_59995 list_304) (x_59847 Int))
	(=> (and (diseqInt x_59847 Z_2330) (primEnumFromTo_3 x_59980 Z_2330 x_60051) (dodeca_12 x_59981 x_59980) (primEnumFromTo_3 x_59982 Z_2330 x_59847) (dodeca_11 x_59983 x_59847 x_59982) (primEnumFromTo_3 x_59984 Z_2330 x_59847) (dodeca_10 x_59985 x_59847 x_59984) (primEnumFromTo_3 x_59986 Z_2330 x_60052) (dodeca_9 x_59987 x_59847 x_59986) (primEnumFromTo_3 x_59988 Z_2330 x_59847) (dodeca_8 x_59989 x_59847 x_59988) (primEnumFromTo_3 x_59990 Z_2330 x_60053) (dodeca_7 x_59991 x_59847 x_59990) (x_59845 x_59992 x_59989 (cons_301 (pair_121 x_60057 x_60059) x_59991)) (x_59845 x_59993 (cons_301 (pair_121 x_59847 x_60062) x_59987) x_59992) (x_59845 x_59994 x_59985 x_59993) (x_59845 x_59995 x_59983 x_59994) (x_59845 x_59979 (cons_301 (pair_121 x_60063 Z_2330) x_59981) x_59995) (minus_405 x_60063 x_59847 (S_536 Z_2330)) (add_410 x_60060 x_59847 x_59847) (minus_405 x_60061 x_59847 (S_536 Z_2330)) (add_410 x_60062 x_60060 x_60061) (add_410 x_60054 x_59847 x_59847) (add_410 x_60055 x_60054 x_59847) (minus_405 x_60056 x_59847 (S_536 Z_2330)) (add_410 x_60057 x_60055 x_60056) (add_410 x_60058 x_59847 x_59847) (add_410 x_60059 x_60058 x_59847) (minus_405 x_60053 x_59847 (S_536 Z_2330)) (minus_405 x_60052 x_59847 (S_536 Z_2330)) (minus_405 x_60051 x_59847 (S_536 Z_2330))) (dodeca_13 x_59979 x_59847))))
(assert (forall ((x_60076 Int) (x_60073 Int) (x_60074 Int) (x_60075 Int) (x_60067 Int) (x_60068 Int) (x_60069 Int) (x_60070 Int) (x_60071 Int) (x_60072 Int) (x_60066 Int) (x_60065 Int) (x_60064 Int) (x_59997 list_303) (x_59998 list_304) (x_59999 list_303) (x_60000 list_304) (x_60001 list_303) (x_60002 list_304) (x_60003 list_303) (x_60004 list_304) (x_60005 list_303) (x_60006 list_304) (x_60007 list_303) (x_60008 list_304) (x_60009 list_304) (x_60010 list_304) (x_60011 list_304) (x_60012 list_304) (x_60013 list_304) (p_434 list_303))
	(=> (and true (primEnumFromTo_3 x_59997 Z_2330 x_60064) (dodeca_12 x_59998 x_59997) (primEnumFromTo_3 x_59999 Z_2330 (S_536 (S_536 (S_536 (S_536 (S_536 Z_2330)))))) (dodeca_11 x_60000 (S_536 (S_536 (S_536 (S_536 (S_536 Z_2330))))) x_59999) (primEnumFromTo_3 x_60001 Z_2330 (S_536 (S_536 (S_536 (S_536 (S_536 Z_2330)))))) (dodeca_10 x_60002 (S_536 (S_536 (S_536 (S_536 (S_536 Z_2330))))) x_60001) (primEnumFromTo_3 x_60003 Z_2330 x_60065) (dodeca_9 x_60004 (S_536 (S_536 (S_536 (S_536 (S_536 Z_2330))))) x_60003) (primEnumFromTo_3 x_60005 Z_2330 (S_536 (S_536 (S_536 (S_536 (S_536 Z_2330)))))) (dodeca_8 x_60006 (S_536 (S_536 (S_536 (S_536 (S_536 Z_2330))))) x_60005) (primEnumFromTo_3 x_60007 Z_2330 x_60066) (dodeca_7 x_60008 (S_536 (S_536 (S_536 (S_536 (S_536 Z_2330))))) x_60007) (x_59845 x_60009 x_60006 (cons_301 (pair_121 x_60070 x_60072) x_60008)) (x_59845 x_60010 (cons_301 (pair_121 (S_536 (S_536 (S_536 (S_536 (S_536 Z_2330))))) x_60075) x_60004) x_60009) (x_59845 x_60011 x_60002 x_60010) (x_59845 x_60012 x_60000 x_60011) (x_59845 x_60013 (cons_301 (pair_121 x_60076 Z_2330) x_59998) x_60012) (tour_1 true_384 p_434 x_60013) (minus_405 x_60076 (S_536 (S_536 (S_536 (S_536 (S_536 Z_2330))))) (S_536 Z_2330)) (add_410 x_60073 (S_536 (S_536 (S_536 (S_536 (S_536 Z_2330))))) (S_536 (S_536 (S_536 (S_536 (S_536 Z_2330)))))) (minus_405 x_60074 (S_536 (S_536 (S_536 (S_536 (S_536 Z_2330))))) (S_536 Z_2330)) (add_410 x_60075 x_60073 x_60074) (add_410 x_60067 (S_536 (S_536 (S_536 (S_536 (S_536 Z_2330))))) (S_536 (S_536 (S_536 (S_536 (S_536 Z_2330)))))) (add_410 x_60068 x_60067 (S_536 (S_536 (S_536 (S_536 (S_536 Z_2330)))))) (minus_405 x_60069 (S_536 (S_536 (S_536 (S_536 (S_536 Z_2330))))) (S_536 Z_2330)) (add_410 x_60070 x_60068 x_60069) (add_410 x_60071 (S_536 (S_536 (S_536 (S_536 (S_536 Z_2330))))) (S_536 (S_536 (S_536 (S_536 (S_536 Z_2330)))))) (add_410 x_60072 x_60071 (S_536 (S_536 (S_536 (S_536 (S_536 Z_2330)))))) (minus_405 x_60066 (S_536 (S_536 (S_536 (S_536 (S_536 Z_2330))))) (S_536 Z_2330)) (minus_405 x_60065 (S_536 (S_536 (S_536 (S_536 (S_536 Z_2330))))) (S_536 Z_2330)) (minus_405 x_60064 (S_536 (S_536 (S_536 (S_536 (S_536 Z_2330))))) (S_536 Z_2330))) false)))
(check-sat)
