
(set-logic HORN)
(define-fun Z_614 () Int 0)
(define-fun S_191 ((x Int)) Int (+ x 1))
(declare-fun diseqInt (Int Int) Bool)
(declare-fun unS_223 (Int Int) Bool)
(declare-fun isZ_184 (Int) Bool)
(declare-fun isS_184 (Int) Bool)
(assert (forall ((x_12706 Int))
	(unS_223 x_12706 (S_191 x_12706))))
(assert (isZ_184 Z_614))
(assert (forall ((x_12708 Int))
	(isS_184 (S_191 x_12708))))
(assert (forall ((x_12709 Int))
	(diseqInt Z_614 (S_191 x_12709))))
(assert (forall ((x_12710 Int))
	(diseqInt (S_191 x_12710) Z_614)))
(assert (forall ((x_12711 Int) (x_12712 Int))
	(=> (diseqInt x_12711 x_12712) (diseqInt (S_191 x_12711) (S_191 x_12712)))))
(declare-fun add_116 (Int Int Int) Bool)
(declare-fun minus_113 (Int Int Int) Bool)
(declare-fun le_111 (Int Int) Bool)
(declare-fun ge_111 (Int Int) Bool)
(declare-fun lt_114 (Int Int) Bool)
(declare-fun gt_112 (Int Int) Bool)
(declare-fun mult_111 (Int Int Int) Bool)
(declare-fun div_111 (Int Int Int) Bool)
(declare-fun mod_111 (Int Int Int) Bool)
(assert (forall ((y_565 Int))
	(add_116 y_565 Z_614 y_565)))
(assert (forall ((x_12700 Int) (y_565 Int) (r_125 Int))
	(=> (add_116 r_125 x_12700 y_565) (add_116 (S_191 r_125) (S_191 x_12700) y_565))))
(assert (forall ((y_565 Int))
	(minus_113 Z_614 Z_614 y_565)))
(assert (forall ((x_12700 Int) (y_565 Int) (r_125 Int))
	(=> (minus_113 r_125 x_12700 y_565) (minus_113 (S_191 r_125) (S_191 x_12700) y_565))))
(assert (forall ((y_565 Int))
	(le_111 Z_614 y_565)))
(assert (forall ((x_12700 Int) (y_565 Int))
	(=> (le_111 x_12700 y_565) (le_111 (S_191 x_12700) (S_191 y_565)))))
(assert (forall ((y_565 Int))
	(ge_111 y_565 Z_614)))
(assert (forall ((x_12700 Int) (y_565 Int))
	(=> (ge_111 x_12700 y_565) (ge_111 (S_191 x_12700) (S_191 y_565)))))
(assert (forall ((y_565 Int))
	(lt_114 Z_614 (S_191 y_565))))
(assert (forall ((x_12700 Int) (y_565 Int))
	(=> (lt_114 x_12700 y_565) (lt_114 (S_191 x_12700) (S_191 y_565)))))
(assert (forall ((y_565 Int))
	(gt_112 (S_191 y_565) Z_614)))
(assert (forall ((x_12700 Int) (y_565 Int))
	(=> (gt_112 x_12700 y_565) (gt_112 (S_191 x_12700) (S_191 y_565)))))
(assert (forall ((y_565 Int))
	(mult_111 Z_614 Z_614 y_565)))
(assert (forall ((x_12700 Int) (y_565 Int) (r_125 Int) (z_615 Int))
	(=> (and (mult_111 r_125 x_12700 y_565) (add_116 z_615 r_125 y_565)) (mult_111 z_615 (S_191 x_12700) y_565))))
(assert (forall ((x_12700 Int) (y_565 Int))
	(=> (lt_114 x_12700 y_565) (div_111 Z_614 x_12700 y_565))))
(assert (forall ((x_12700 Int) (y_565 Int) (r_125 Int) (z_615 Int))
	(=> (and (ge_111 x_12700 y_565) (minus_113 z_615 x_12700 y_565) (div_111 r_125 z_615 y_565)) (div_111 (S_191 r_125) x_12700 y_565))))
(assert (forall ((x_12700 Int) (y_565 Int))
	(=> (lt_114 x_12700 y_565) (mod_111 x_12700 x_12700 y_565))))
(assert (forall ((x_12700 Int) (y_565 Int) (r_125 Int) (z_615 Int))
	(=> (and (ge_111 x_12700 y_565) (minus_113 z_615 x_12700 y_565) (mod_111 r_125 z_615 y_565)) (mod_111 r_125 x_12700 y_565))))
(declare-datatypes ((Bin_0 0)) (((One_0) (ZeroAnd_0 (projZeroAnd_0 Bin_0)) (OneAnd_0 (projOneAnd_0 Bin_0)))))
(declare-fun diseqBin_0 (Bin_0 Bin_0) Bool)
(declare-fun projZeroAnd_1 (Bin_0 Bin_0) Bool)
(declare-fun projOneAnd_1 (Bin_0 Bin_0) Bool)
(declare-fun isOne_0 (Bin_0) Bool)
(declare-fun isZeroAnd_0 (Bin_0) Bool)
(declare-fun isOneAnd_0 (Bin_0) Bool)
(assert (forall ((x_12714 Bin_0))
	(projZeroAnd_1 x_12714 (ZeroAnd_0 x_12714))))
(assert (forall ((x_12716 Bin_0))
	(projOneAnd_1 x_12716 (OneAnd_0 x_12716))))
(assert (isOne_0 One_0))
(assert (forall ((x_12718 Bin_0))
	(isZeroAnd_0 (ZeroAnd_0 x_12718))))
(assert (forall ((x_12719 Bin_0))
	(isOneAnd_0 (OneAnd_0 x_12719))))
(assert (forall ((x_12720 Bin_0))
	(diseqBin_0 One_0 (ZeroAnd_0 x_12720))))
(assert (forall ((x_12721 Bin_0))
	(diseqBin_0 One_0 (OneAnd_0 x_12721))))
(assert (forall ((x_12722 Bin_0))
	(diseqBin_0 (ZeroAnd_0 x_12722) One_0)))
(assert (forall ((x_12723 Bin_0))
	(diseqBin_0 (OneAnd_0 x_12723) One_0)))
(assert (forall ((x_12724 Bin_0) (x_12725 Bin_0))
	(diseqBin_0 (ZeroAnd_0 x_12724) (OneAnd_0 x_12725))))
(assert (forall ((x_12726 Bin_0) (x_12727 Bin_0))
	(diseqBin_0 (OneAnd_0 x_12726) (ZeroAnd_0 x_12727))))
(assert (forall ((x_12728 Bin_0) (x_12729 Bin_0))
	(=> (diseqBin_0 x_12728 x_12729) (diseqBin_0 (ZeroAnd_0 x_12728) (ZeroAnd_0 x_12729)))))
(assert (forall ((x_12730 Bin_0) (x_12731 Bin_0))
	(=> (diseqBin_0 x_12730 x_12731) (diseqBin_0 (OneAnd_0 x_12730) (OneAnd_0 x_12731)))))
(declare-fun toNat_0 (Int Bin_0) Bool)
(assert (forall ((x_12701 Int) (x_12664 Int) (x_12665 Int) (x_12666 Int) (ys_44 Bin_0))
	(=> (and (toNat_0 x_12665 ys_44) (toNat_0 x_12666 ys_44) (add_116 x_12701 (S_191 Z_614) x_12665) (add_116 x_12664 x_12701 x_12666)) (toNat_0 x_12664 (OneAnd_0 ys_44)))))
(assert (forall ((x_12667 Int) (x_12668 Int) (x_12669 Int) (xs_179 Bin_0))
	(=> (and (toNat_0 x_12668 xs_179) (toNat_0 x_12669 xs_179) (add_116 x_12667 x_12668 x_12669)) (toNat_0 x_12667 (ZeroAnd_0 xs_179)))))
(assert (toNat_0 (S_191 Z_614) One_0))
(declare-fun s_190 (Bin_0 Bin_0) Bool)
(assert (forall ((x_12672 Bin_0) (ys_45 Bin_0))
	(=> (s_190 x_12672 ys_45) (s_190 (ZeroAnd_0 x_12672) (OneAnd_0 ys_45)))))
(assert (forall ((xs_180 Bin_0))
	(s_190 (OneAnd_0 xs_180) (ZeroAnd_0 xs_180))))
(assert (s_190 (ZeroAnd_0 One_0) One_0))
(declare-fun plus_18 (Bin_0 Bin_0 Bin_0) Bool)
(assert (forall ((x_12676 Bin_0) (x_12677 Bin_0) (ys_46 Bin_0) (x_12661 Bin_0))
	(=> (and (plus_18 x_12676 x_12661 ys_46) (s_190 x_12677 x_12676)) (plus_18 (ZeroAnd_0 x_12677) (OneAnd_0 x_12661) (OneAnd_0 ys_46)))))
(assert (forall ((x_12679 Bin_0) (zs_8 Bin_0) (x_12661 Bin_0))
	(=> (plus_18 x_12679 x_12661 zs_8) (plus_18 (OneAnd_0 x_12679) (OneAnd_0 x_12661) (ZeroAnd_0 zs_8)))))
(assert (forall ((x_12680 Bin_0) (x_12661 Bin_0))
	(=> (s_190 x_12680 (OneAnd_0 x_12661)) (plus_18 x_12680 (OneAnd_0 x_12661) One_0))))
(assert (forall ((x_12683 Bin_0) (xs_181 Bin_0) (z_613 Bin_0))
	(=> (plus_18 x_12683 z_613 xs_181) (plus_18 (OneAnd_0 x_12683) (ZeroAnd_0 z_613) (OneAnd_0 xs_181)))))
(assert (forall ((x_12685 Bin_0) (ys_47 Bin_0) (z_613 Bin_0))
	(=> (plus_18 x_12685 z_613 ys_47) (plus_18 (ZeroAnd_0 x_12685) (ZeroAnd_0 z_613) (ZeroAnd_0 ys_47)))))
(assert (forall ((x_12686 Bin_0) (z_613 Bin_0))
	(=> (s_190 x_12686 (ZeroAnd_0 z_613)) (plus_18 x_12686 (ZeroAnd_0 z_613) One_0))))
(assert (forall ((x_12688 Bin_0) (y_562 Bin_0))
	(=> (s_190 x_12688 y_562) (plus_18 x_12688 One_0 y_562))))
(declare-fun times_2 (Bin_0 Bin_0 Bin_0) Bool)
(assert (forall ((x_12690 Bin_0) (x_12691 Bin_0) (xs_182 Bin_0) (y_563 Bin_0))
	(=> (and (times_2 x_12691 xs_182 y_563) (plus_18 x_12690 (ZeroAnd_0 x_12691) y_563)) (times_2 x_12690 (OneAnd_0 xs_182) y_563))))
(assert (forall ((x_12694 Bin_0) (xs_183 Bin_0) (y_563 Bin_0))
	(=> (times_2 x_12694 xs_183 y_563) (times_2 (ZeroAnd_0 x_12694) (ZeroAnd_0 xs_183) y_563))))
(assert (forall ((x_12695 Bin_0))
	(times_2 x_12695 One_0 x_12695)))
(assert (forall ((x_12704 Int) (x_12696 Bin_0) (x_12697 Int) (x_12698 Int) (x_12699 Int) (x_12663 Bin_0) (y_564 Bin_0))
	(=> (and true (diseqInt x_12697 x_12704) (times_2 x_12696 x_12663 y_564) (toNat_0 x_12697 x_12696) (toNat_0 x_12698 x_12663) (toNat_0 x_12699 y_564) (mult_111 x_12704 x_12698 x_12699)) false)))
(check-sat)
