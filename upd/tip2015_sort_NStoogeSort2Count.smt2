
(set-logic HORN)
(define-fun Z_1093 () Int 0)
(define-fun S_279 ((x Int)) Int (+ x 1))
(declare-fun diseqInt (Int Int) Bool)
(declare-fun unS_377 (Int Int) Bool)
(declare-fun isZ_261 (Int) Bool)
(declare-fun isS_261 (Int) Bool)
(assert (forall ((x_27952 Int))
	(unS_377 x_27952 (S_279 x_27952))))
(assert (isZ_261 Z_1093))
(assert (forall ((x_27954 Int))
	(isS_261 (S_279 x_27954))))
(assert (forall ((x_27955 Int))
	(diseqInt Z_1093 (S_279 x_27955))))
(assert (forall ((x_27956 Int))
	(diseqInt (S_279 x_27956) Z_1093)))
(assert (forall ((x_27957 Int) (x_27958 Int))
	(=> (diseqInt x_27957 x_27958) (diseqInt (S_279 x_27957) (S_279 x_27958)))))
(declare-fun add_202 (Int Int Int) Bool)
(declare-fun minus_194 (Int Int Int) Bool)
(declare-fun le_188 (Int Int) Bool)
(declare-fun ge_188 (Int Int) Bool)
(declare-fun lt_198 (Int Int) Bool)
(declare-fun gt_190 (Int Int) Bool)
(declare-fun mult_188 (Int Int Int) Bool)
(declare-fun div_188 (Int Int Int) Bool)
(declare-fun mod_188 (Int Int Int) Bool)
(assert (forall ((y_1151 Int))
	(add_202 y_1151 Z_1093 y_1151)))
(assert (forall ((x_27942 Int) (y_1151 Int) (r_223 Int))
	(=> (add_202 r_223 x_27942 y_1151) (add_202 (S_279 r_223) (S_279 x_27942) y_1151))))
(assert (forall ((y_1151 Int))
	(minus_194 Z_1093 Z_1093 y_1151)))
(assert (forall ((x_27942 Int) (y_1151 Int) (r_223 Int))
	(=> (minus_194 r_223 x_27942 y_1151) (minus_194 (S_279 r_223) (S_279 x_27942) y_1151))))
(assert (forall ((y_1151 Int))
	(le_188 Z_1093 y_1151)))
(assert (forall ((x_27942 Int) (y_1151 Int))
	(=> (le_188 x_27942 y_1151) (le_188 (S_279 x_27942) (S_279 y_1151)))))
(assert (forall ((y_1151 Int))
	(ge_188 y_1151 Z_1093)))
(assert (forall ((x_27942 Int) (y_1151 Int))
	(=> (ge_188 x_27942 y_1151) (ge_188 (S_279 x_27942) (S_279 y_1151)))))
(assert (forall ((y_1151 Int))
	(lt_198 Z_1093 (S_279 y_1151))))
(assert (forall ((x_27942 Int) (y_1151 Int))
	(=> (lt_198 x_27942 y_1151) (lt_198 (S_279 x_27942) (S_279 y_1151)))))
(assert (forall ((y_1151 Int))
	(gt_190 (S_279 y_1151) Z_1093)))
(assert (forall ((x_27942 Int) (y_1151 Int))
	(=> (gt_190 x_27942 y_1151) (gt_190 (S_279 x_27942) (S_279 y_1151)))))
(assert (forall ((y_1151 Int))
	(mult_188 Z_1093 Z_1093 y_1151)))
(assert (forall ((x_27942 Int) (y_1151 Int) (r_223 Int) (z_1094 Int))
	(=> (and (mult_188 r_223 x_27942 y_1151) (add_202 z_1094 r_223 y_1151)) (mult_188 z_1094 (S_279 x_27942) y_1151))))
(assert (forall ((x_27942 Int) (y_1151 Int))
	(=> (lt_198 x_27942 y_1151) (div_188 Z_1093 x_27942 y_1151))))
(assert (forall ((x_27942 Int) (y_1151 Int) (r_223 Int) (z_1094 Int))
	(=> (and (ge_188 x_27942 y_1151) (minus_194 z_1094 x_27942 y_1151) (div_188 r_223 z_1094 y_1151)) (div_188 (S_279 r_223) x_27942 y_1151))))
(assert (forall ((x_27942 Int) (y_1151 Int))
	(=> (lt_198 x_27942 y_1151) (mod_188 x_27942 x_27942 y_1151))))
(assert (forall ((x_27942 Int) (y_1151 Int) (r_223 Int) (z_1094 Int))
	(=> (and (ge_188 x_27942 y_1151) (minus_194 z_1094 x_27942 y_1151) (mod_188 r_223 z_1094 y_1151)) (mod_188 r_223 x_27942 y_1151))))
(declare-datatypes ((list_132 0)) (((nil_146) (cons_132 (head_264 Int) (tail_264 list_132)))))
(declare-fun diseqlist_132 (list_132 list_132) Bool)
(declare-fun head_265 (Int list_132) Bool)
(declare-fun tail_265 (list_132 list_132) Bool)
(declare-fun isnil_146 (list_132) Bool)
(declare-fun iscons_132 (list_132) Bool)
(assert (forall ((x_27960 Int) (x_27961 list_132))
	(head_265 x_27960 (cons_132 x_27960 x_27961))))
(assert (forall ((x_27960 Int) (x_27961 list_132))
	(tail_265 x_27961 (cons_132 x_27960 x_27961))))
(assert (isnil_146 nil_146))
(assert (forall ((x_27963 Int) (x_27964 list_132))
	(iscons_132 (cons_132 x_27963 x_27964))))
(assert (forall ((x_27965 Int) (x_27966 list_132))
	(diseqlist_132 nil_146 (cons_132 x_27965 x_27966))))
(assert (forall ((x_27967 Int) (x_27968 list_132))
	(diseqlist_132 (cons_132 x_27967 x_27968) nil_146)))
(assert (forall ((x_27969 Int) (x_27970 list_132) (x_27971 Int) (x_27972 list_132))
	(=> (diseqInt x_27969 x_27971) (diseqlist_132 (cons_132 x_27969 x_27970) (cons_132 x_27971 x_27972)))))
(assert (forall ((x_27969 Int) (x_27970 list_132) (x_27971 Int) (x_27972 list_132))
	(=> (diseqlist_132 x_27970 x_27972) (diseqlist_132 (cons_132 x_27969 x_27970) (cons_132 x_27971 x_27972)))))
(declare-datatypes ((pair_54 0)) (((pair_55 (projpair_108 list_132) (projpair_109 list_132)))))
(declare-fun diseqpair_27 (pair_54 pair_54) Bool)
(declare-fun projpair_110 (list_132 pair_54) Bool)
(declare-fun projpair_111 (list_132 pair_54) Bool)
(declare-fun ispair_27 (pair_54) Bool)
(assert (forall ((x_27973 list_132) (x_27974 list_132))
	(projpair_110 x_27973 (pair_55 x_27973 x_27974))))
(assert (forall ((x_27973 list_132) (x_27974 list_132))
	(projpair_111 x_27974 (pair_55 x_27973 x_27974))))
(assert (forall ((x_27976 list_132) (x_27977 list_132))
	(ispair_27 (pair_55 x_27976 x_27977))))
(assert (forall ((x_27978 list_132) (x_27979 list_132) (x_27980 list_132) (x_27981 list_132))
	(=> (diseqlist_132 x_27978 x_27980) (diseqpair_27 (pair_55 x_27978 x_27979) (pair_55 x_27980 x_27981)))))
(assert (forall ((x_27978 list_132) (x_27979 list_132) (x_27980 list_132) (x_27981 list_132))
	(=> (diseqlist_132 x_27979 x_27981) (diseqpair_27 (pair_55 x_27978 x_27979) (pair_55 x_27980 x_27981)))))
(declare-fun twoThirds_1 (Int Int) Bool)
(assert (twoThirds_1 (S_279 Z_1093) (S_279 (S_279 Z_1093))))
(assert (=> (diseqInt (S_279 Z_1093) (S_279 (S_279 Z_1093))) (twoThirds_1 (S_279 Z_1093) (S_279 Z_1093))))
(assert (twoThirds_1 (S_279 Z_1093) (S_279 (S_279 Z_1093))))
(assert (=> (and (diseqInt Z_1093 (S_279 (S_279 Z_1093))) (diseqInt Z_1093 (S_279 Z_1093))) (twoThirds_1 Z_1093 Z_1093)))
(assert (twoThirds_1 (S_279 Z_1093) (S_279 (S_279 Z_1093))))
(assert (=> (diseqInt (S_279 Z_1093) (S_279 (S_279 Z_1093))) (twoThirds_1 (S_279 Z_1093) (S_279 Z_1093))))
(assert (twoThirds_1 (S_279 Z_1093) (S_279 (S_279 Z_1093))))
(assert (forall ((x_27944 Int) (x_27882 Int) (x_27883 Int) (x_27858 Int))
	(=> (and (diseqInt x_27858 (S_279 (S_279 Z_1093))) (diseqInt x_27858 (S_279 Z_1093)) (diseqInt x_27858 Z_1093) (twoThirds_1 x_27883 x_27944) (minus_194 x_27944 x_27858 (S_279 (S_279 (S_279 Z_1093)))) (add_202 x_27882 (S_279 (S_279 Z_1093)) x_27883)) (twoThirds_1 x_27882 x_27858))))
(declare-fun third_3 (Int Int) Bool)
(assert (third_3 Z_1093 (S_279 (S_279 Z_1093))))
(assert (=> (diseqInt (S_279 Z_1093) (S_279 (S_279 Z_1093))) (third_3 Z_1093 (S_279 Z_1093))))
(assert (third_3 Z_1093 (S_279 (S_279 Z_1093))))
(assert (=> (and (diseqInt Z_1093 (S_279 (S_279 Z_1093))) (diseqInt Z_1093 (S_279 Z_1093))) (third_3 Z_1093 Z_1093)))
(assert (third_3 Z_1093 (S_279 (S_279 Z_1093))))
(assert (=> (diseqInt (S_279 Z_1093) (S_279 (S_279 Z_1093))) (third_3 Z_1093 (S_279 Z_1093))))
(assert (third_3 Z_1093 (S_279 (S_279 Z_1093))))
(assert (forall ((x_27946 Int) (x_27891 Int) (x_27892 Int) (x_27859 Int))
	(=> (and (diseqInt x_27859 (S_279 (S_279 Z_1093))) (diseqInt x_27859 (S_279 Z_1093)) (diseqInt x_27859 Z_1093) (third_3 x_27892 x_27946) (minus_194 x_27946 x_27859 (S_279 (S_279 (S_279 Z_1093)))) (add_202 x_27891 (S_279 Z_1093) x_27892)) (third_3 x_27891 x_27859))))
(declare-fun take_28 (list_132 Int list_132) Bool)
(assert (forall ((x_27860 Int) (y_1142 list_132))
	(=> (le_188 x_27860 Z_1093) (take_28 nil_146 x_27860 y_1142))))
(assert (forall ((x_27947 Int) (x_27895 list_132) (z_1088 Int) (xs_351 list_132) (x_27860 Int))
	(=> (and (gt_190 x_27860 Z_1093) (take_28 x_27895 x_27947 xs_351) (minus_194 x_27947 x_27860 (S_279 Z_1093))) (take_28 (cons_132 z_1088 x_27895) x_27860 (cons_132 z_1088 xs_351)))))
(assert (forall ((x_27860 Int) (y_1142 list_132))
	(=> (le_188 x_27860 Z_1093) (take_28 nil_146 x_27860 y_1142))))
(assert (forall ((x_27860 Int))
	(=> (gt_190 x_27860 Z_1093) (take_28 nil_146 x_27860 nil_146))))
(declare-fun sort_19 (list_132 Int Int) Bool)
(assert (forall ((x_27861 Int) (y_1143 Int))
	(=> (le_188 x_27861 y_1143) (sort_19 (cons_132 x_27861 (cons_132 y_1143 nil_146)) x_27861 y_1143))))
(assert (forall ((x_27861 Int) (y_1143 Int))
	(=> (gt_190 x_27861 y_1143) (sort_19 (cons_132 y_1143 (cons_132 x_27861 nil_146)) x_27861 y_1143))))
(declare-fun length_16 (Int list_132) Bool)
(assert (forall ((x_27900 Int) (x_27901 Int) (y_1144 Int) (l_18 list_132))
	(=> (and (length_16 x_27901 l_18) (add_202 x_27900 (S_279 Z_1093) x_27901)) (length_16 x_27900 (cons_132 y_1144 l_18)))))
(assert (length_16 Z_1093 nil_146))
(declare-fun drop_30 (list_132 Int list_132) Bool)
(assert (forall ((x_27903 list_132) (x_27863 Int))
	(=> (le_188 x_27863 Z_1093) (drop_30 x_27903 x_27863 x_27903))))
(assert (forall ((x_27949 Int) (x_27904 list_132) (z_1089 Int) (xs_352 list_132) (x_27863 Int))
	(=> (and (gt_190 x_27863 Z_1093) (drop_30 x_27904 x_27949 xs_352) (minus_194 x_27949 x_27863 (S_279 Z_1093))) (drop_30 x_27904 x_27863 (cons_132 z_1089 xs_352)))))
(assert (forall ((x_27906 list_132) (x_27863 Int))
	(=> (le_188 x_27863 Z_1093) (drop_30 x_27906 x_27863 x_27906))))
(assert (forall ((x_27863 Int))
	(=> (gt_190 x_27863 Z_1093) (drop_30 nil_146 x_27863 nil_146))))
(declare-fun splitAt_11 (pair_54 Int list_132) Bool)
(assert (forall ((x_27909 list_132) (x_27910 list_132) (x_27864 Int) (y_1146 list_132))
	(=> (and (take_28 x_27909 x_27864 y_1146) (drop_30 x_27910 x_27864 y_1146)) (splitAt_11 (pair_55 x_27909 x_27910) x_27864 y_1146))))
(declare-fun count_22 (Int Int list_132) Bool)
(assert (forall ((x_27911 Int) (x_27912 Int) (ys_112 list_132) (x_27865 Int))
	(=> (and (count_22 x_27912 x_27865 ys_112) (add_202 x_27911 (S_279 Z_1093) x_27912)) (count_22 x_27911 x_27865 (cons_132 x_27865 ys_112)))))
(assert (forall ((x_27913 Int) (z_1090 Int) (ys_112 list_132) (x_27865 Int))
	(=> (and (diseqInt x_27865 z_1090) (count_22 x_27913 x_27865 ys_112)) (count_22 x_27913 x_27865 (cons_132 z_1090 ys_112)))))
(assert (forall ((x_27865 Int))
	(count_22 Z_1093 x_27865 nil_146)))
(declare-fun x_27866 (list_132 list_132 list_132) Bool)
(assert (forall ((x_27917 list_132) (z_1091 Int) (xs_353 list_132) (y_1148 list_132))
	(=> (x_27866 x_27917 xs_353 y_1148) (x_27866 (cons_132 z_1091 x_27917) (cons_132 z_1091 xs_353) y_1148))))
(assert (forall ((x_27918 list_132))
	(x_27866 x_27918 nil_146 x_27918)))
(declare-fun nstoogesort_9 (list_132 list_132) Bool)
(declare-fun nstoogesort_10 (list_132 list_132) Bool)
(declare-fun nstoogesort_11 (list_132 list_132) Bool)
(assert (forall ((x_27922 list_132) (x_27923 list_132) (x_27919 Int) (x_27920 Int) (ys_113 list_132) (zs_34 list_132) (x_27868 list_132))
	(=> (and (nstoogesort_10 x_27923 ys_113) (x_27866 x_27922 x_27923 zs_34) (length_16 x_27919 x_27868) (twoThirds_1 x_27920 x_27919) (splitAt_11 (pair_55 ys_113 zs_34) x_27920 x_27868)) (nstoogesort_9 x_27922 x_27868))))
(assert (forall ((x_27925 list_132) (x_27926 list_132) (x_27927 list_132) (x_27871 Int) (x_27872 list_132) (y_1150 Int) (y_1149 Int))
	(=> (and (nstoogesort_9 x_27926 (cons_132 y_1149 (cons_132 y_1150 (cons_132 x_27871 x_27872)))) (nstoogesort_11 x_27927 x_27926) (nstoogesort_9 x_27925 x_27927)) (nstoogesort_10 x_27925 (cons_132 y_1149 (cons_132 y_1150 (cons_132 x_27871 x_27872)))))))
(assert (forall ((x_27929 list_132) (y_1150 Int) (y_1149 Int))
	(=> (sort_19 x_27929 y_1149 y_1150) (nstoogesort_10 x_27929 (cons_132 y_1149 (cons_132 y_1150 nil_146))))))
(assert (forall ((y_1149 Int))
	(nstoogesort_10 (cons_132 y_1149 nil_146) (cons_132 y_1149 nil_146))))
(assert (nstoogesort_10 nil_146 nil_146))
(assert (forall ((x_27936 list_132) (x_27937 list_132) (x_27933 Int) (x_27934 Int) (ys_114 list_132) (zs_35 list_132) (x_27873 list_132))
	(=> (and (nstoogesort_10 x_27937 zs_35) (x_27866 x_27936 ys_114 x_27937) (length_16 x_27933 x_27873) (third_3 x_27934 x_27933) (splitAt_11 (pair_55 ys_114 zs_35) x_27934 x_27873)) (nstoogesort_11 x_27936 x_27873))))
(assert (forall ((x_27939 list_132) (x_27940 Int) (x_27941 Int) (x_27874 Int) (xs_354 list_132))
	(=> (and true (diseqInt x_27940 x_27941) (nstoogesort_10 x_27939 xs_354) (count_22 x_27940 x_27874 x_27939) (count_22 x_27941 x_27874 xs_354)) false)))
(check-sat)
