
(set-logic HORN)
(declare-fun Z_2684 () Int)
(declare-fun S_619 (Int) Int)
(declare-fun diseqInt (Int Int) Bool)
(declare-fun unS_863 (Int Int) Bool)
(declare-fun isZ_556 (Int) Bool)
(declare-fun isS_556 (Int) Bool)
(assert (forall ((x_120133 Int))
	(unS_863 x_120133 (S_619 x_120133))))
(assert (isZ_556 Z_2684))
(assert (forall ((x_120135 Int))
	(isS_556 (S_619 x_120135))))
(assert (forall ((x_120136 Int))
	(diseqInt Z_2684 (S_619 x_120136))))
(assert (forall ((x_120137 Int))
	(diseqInt (S_619 x_120137) Z_2684)))
(assert (forall ((x_120138 Int) (x_120139 Int))
	(=> (diseqInt x_120138 x_120139) (diseqInt (S_619 x_120138) (S_619 x_120139)))))
(declare-fun add_465 (Int Int Int) Bool)
(declare-fun minus_452 (Int Int Int) Bool)
(declare-fun le_431 (Int Int) Bool)
(declare-fun ge_431 (Int Int) Bool)
(declare-fun lt_451 (Int Int) Bool)
(declare-fun gt_434 (Int Int) Bool)
(declare-fun mult_432 (Int Int Int) Bool)
(declare-fun div_431 (Int Int Int) Bool)
(declare-fun mod_433 (Int Int Int) Bool)
(assert (forall ((y_3132 Int))
	(add_465 y_3132 Z_2684 y_3132)))
(assert (forall ((x_120130 Int) (y_3132 Int) (r_632 Int))
	(=> (add_465 r_632 x_120130 y_3132) (add_465 (S_619 r_632) (S_619 x_120130) y_3132))))
(assert (forall ((y_3132 Int))
	(minus_452 Z_2684 Z_2684 y_3132)))
(assert (forall ((x_120130 Int) (y_3132 Int) (r_632 Int))
	(=> (minus_452 r_632 x_120130 y_3132) (minus_452 (S_619 r_632) (S_619 x_120130) y_3132))))
(assert (forall ((y_3132 Int))
	(le_431 Z_2684 y_3132)))
(assert (forall ((x_120130 Int) (y_3132 Int))
	(=> (le_431 x_120130 y_3132) (le_431 (S_619 x_120130) (S_619 y_3132)))))
(assert (forall ((y_3132 Int))
	(ge_431 y_3132 Z_2684)))
(assert (forall ((x_120130 Int) (y_3132 Int))
	(=> (ge_431 x_120130 y_3132) (ge_431 (S_619 x_120130) (S_619 y_3132)))))
(assert (forall ((y_3132 Int))
	(lt_451 Z_2684 (S_619 y_3132))))
(assert (forall ((x_120130 Int) (y_3132 Int))
	(=> (lt_451 x_120130 y_3132) (lt_451 (S_619 x_120130) (S_619 y_3132)))))
(assert (forall ((y_3132 Int))
	(gt_434 (S_619 y_3132) Z_2684)))
(assert (forall ((x_120130 Int) (y_3132 Int))
	(=> (gt_434 x_120130 y_3132) (gt_434 (S_619 x_120130) (S_619 y_3132)))))
(assert (forall ((y_3132 Int))
	(mult_432 Z_2684 Z_2684 y_3132)))
(assert (forall ((x_120130 Int) (y_3132 Int) (r_632 Int) (z_2685 Int))
	(=> (and (mult_432 r_632 x_120130 y_3132) (add_465 z_2685 r_632 y_3132)) (mult_432 z_2685 (S_619 x_120130) y_3132))))
(assert (forall ((x_120130 Int) (y_3132 Int))
	(=> (lt_451 x_120130 y_3132) (div_431 Z_2684 x_120130 y_3132))))
(assert (forall ((x_120130 Int) (y_3132 Int) (r_632 Int) (z_2685 Int))
	(=> (and (ge_431 x_120130 y_3132) (minus_452 z_2685 x_120130 y_3132) (div_431 r_632 z_2685 y_3132)) (div_431 (S_619 r_632) x_120130 y_3132))))
(assert (forall ((x_120130 Int) (y_3132 Int))
	(=> (lt_451 x_120130 y_3132) (mod_433 x_120130 x_120130 y_3132))))
(assert (forall ((x_120130 Int) (y_3132 Int) (r_632 Int) (z_2685 Int))
	(=> (and (ge_431 x_120130 y_3132) (minus_452 z_2685 x_120130 y_3132) (mod_433 r_632 z_2685 y_3132)) (mod_433 r_632 x_120130 y_3132))))
(declare-datatypes ((Bool_431 0)) (((false_431) (true_431))))
(declare-fun diseqBool_214 (Bool_431 Bool_431) Bool)
(declare-fun isfalse_214 (Bool_431) Bool)
(declare-fun istrue_214 (Bool_431) Bool)
(assert (isfalse_214 false_431))
(assert (istrue_214 true_431))
(assert (diseqBool_214 false_431 true_431))
(assert (diseqBool_214 true_431 false_431))
(declare-fun and_437 (Bool_431 Bool_431 Bool_431) Bool)
(declare-fun or_448 (Bool_431 Bool_431 Bool_431) Bool)
(declare-fun hence_431 (Bool_431 Bool_431 Bool_431) Bool)
(declare-fun not_436 (Bool_431 Bool_431) Bool)
(assert (and_437 false_431 false_431 false_431))
(assert (and_437 false_431 true_431 false_431))
(assert (and_437 false_431 false_431 true_431))
(assert (and_437 true_431 true_431 true_431))
(assert (or_448 false_431 false_431 false_431))
(assert (or_448 true_431 true_431 false_431))
(assert (or_448 true_431 false_431 true_431))
(assert (or_448 true_431 true_431 true_431))
(assert (hence_431 true_431 false_431 false_431))
(assert (hence_431 false_431 true_431 false_431))
(assert (hence_431 true_431 false_431 true_431))
(assert (hence_431 true_431 true_431 true_431))
(assert (not_436 true_431 false_431))
(assert (not_436 false_431 true_431))
(declare-datatypes ((T_34 0)) (((A_116) (B_124) (C_70))))
(declare-fun diseqT_30 (T_34 T_34) Bool)
(declare-fun isA_37 (T_34) Bool)
(declare-fun isB_37 (T_34) Bool)
(declare-fun isC_38 (T_34) Bool)
(assert (isA_37 A_116))
(assert (isB_37 B_124))
(assert (isC_38 C_70))
(assert (diseqT_30 A_116 B_124))
(assert (diseqT_30 A_116 C_70))
(assert (diseqT_30 B_124 A_116))
(assert (diseqT_30 C_70 A_116))
(assert (diseqT_30 B_124 C_70))
(assert (diseqT_30 C_70 B_124))
(declare-datatypes ((list_379 0)) (((nil_433) (cons_373 (head_746 T_34) (tail_752 list_379)))))
(declare-fun diseqlist_373 (list_379 list_379) Bool)
(declare-fun head_747 (T_34 list_379) Bool)
(declare-fun tail_753 (list_379 list_379) Bool)
(declare-fun isnil_433 (list_379) Bool)
(declare-fun iscons_373 (list_379) Bool)
(assert (forall ((x_120146 T_34) (x_120147 list_379))
	(head_747 x_120146 (cons_373 x_120146 x_120147))))
(assert (forall ((x_120146 T_34) (x_120147 list_379))
	(tail_753 x_120147 (cons_373 x_120146 x_120147))))
(assert (isnil_433 nil_433))
(assert (forall ((x_120149 T_34) (x_120150 list_379))
	(iscons_373 (cons_373 x_120149 x_120150))))
(assert (forall ((x_120151 T_34) (x_120152 list_379))
	(diseqlist_373 nil_433 (cons_373 x_120151 x_120152))))
(assert (forall ((x_120153 T_34) (x_120154 list_379))
	(diseqlist_373 (cons_373 x_120153 x_120154) nil_433)))
(assert (forall ((x_120155 T_34) (x_120156 list_379) (x_120157 T_34) (x_120158 list_379))
	(=> (diseqT_30 x_120155 x_120157) (diseqlist_373 (cons_373 x_120155 x_120156) (cons_373 x_120157 x_120158)))))
(assert (forall ((x_120155 T_34) (x_120156 list_379) (x_120157 T_34) (x_120158 list_379))
	(=> (diseqlist_373 x_120156 x_120158) (diseqlist_373 (cons_373 x_120155 x_120156) (cons_373 x_120157 x_120158)))))
(declare-datatypes ((R_629 0)) (((Nil_434) (Eps_88) (Atom_44 (projAtom_88 T_34)) (x_115724 (proj_308 R_629) (proj_309 R_629)) (x_115725 (proj_310 R_629) (proj_311 R_629)) (x_115726 (proj_312 R_629) (proj_313 R_629)) (Star_44 (projStar_88 R_629)))))
(declare-fun diseqR_44 (R_629 R_629) Bool)
(declare-fun projAtom_89 (T_34 R_629) Bool)
(declare-fun proj_314 (R_629 R_629) Bool)
(declare-fun proj_315 (R_629 R_629) Bool)
(declare-fun proj_316 (R_629 R_629) Bool)
(declare-fun proj_317 (R_629 R_629) Bool)
(declare-fun proj_318 (R_629 R_629) Bool)
(declare-fun proj_319 (R_629 R_629) Bool)
(declare-fun projStar_89 (R_629 R_629) Bool)
(declare-fun isNil_434 (R_629) Bool)
(declare-fun isEps_44 (R_629) Bool)
(declare-fun isAtom_44 (R_629) Bool)
(declare-fun isx_92 (R_629) Bool)
(declare-fun isx_93 (R_629) Bool)
(declare-fun isx_94 (R_629) Bool)
(declare-fun isStar_44 (R_629) Bool)
(assert (forall ((x_120161 T_34))
	(projAtom_89 x_120161 (Atom_44 x_120161))))
(assert (forall ((x_120163 R_629) (x_120164 R_629))
	(proj_314 x_120163 (x_115724 x_120163 x_120164))))
(assert (forall ((x_120163 R_629) (x_120164 R_629))
	(proj_315 x_120164 (x_115724 x_120163 x_120164))))
(assert (forall ((x_120166 R_629) (x_120167 R_629))
	(proj_316 x_120166 (x_115725 x_120166 x_120167))))
(assert (forall ((x_120166 R_629) (x_120167 R_629))
	(proj_317 x_120167 (x_115725 x_120166 x_120167))))
(assert (forall ((x_120169 R_629) (x_120170 R_629))
	(proj_318 x_120169 (x_115726 x_120169 x_120170))))
(assert (forall ((x_120169 R_629) (x_120170 R_629))
	(proj_319 x_120170 (x_115726 x_120169 x_120170))))
(assert (forall ((x_120172 R_629))
	(projStar_89 x_120172 (Star_44 x_120172))))
(assert (isNil_434 Nil_434))
(assert (isEps_44 Eps_88))
(assert (forall ((x_120174 T_34))
	(isAtom_44 (Atom_44 x_120174))))
(assert (forall ((x_120175 R_629) (x_120176 R_629))
	(isx_92 (x_115724 x_120175 x_120176))))
(assert (forall ((x_120177 R_629) (x_120178 R_629))
	(isx_93 (x_115725 x_120177 x_120178))))
(assert (forall ((x_120179 R_629) (x_120180 R_629))
	(isx_94 (x_115726 x_120179 x_120180))))
(assert (forall ((x_120181 R_629))
	(isStar_44 (Star_44 x_120181))))
(assert (diseqR_44 Nil_434 Eps_88))
(assert (forall ((x_120182 T_34))
	(diseqR_44 Nil_434 (Atom_44 x_120182))))
(assert (forall ((x_120183 R_629) (x_120184 R_629))
	(diseqR_44 Nil_434 (x_115724 x_120183 x_120184))))
(assert (forall ((x_120185 R_629) (x_120186 R_629))
	(diseqR_44 Nil_434 (x_115725 x_120185 x_120186))))
(assert (forall ((x_120187 R_629) (x_120188 R_629))
	(diseqR_44 Nil_434 (x_115726 x_120187 x_120188))))
(assert (forall ((x_120189 R_629))
	(diseqR_44 Nil_434 (Star_44 x_120189))))
(assert (diseqR_44 Eps_88 Nil_434))
(assert (forall ((x_120190 T_34))
	(diseqR_44 (Atom_44 x_120190) Nil_434)))
(assert (forall ((x_120191 R_629) (x_120192 R_629))
	(diseqR_44 (x_115724 x_120191 x_120192) Nil_434)))
(assert (forall ((x_120193 R_629) (x_120194 R_629))
	(diseqR_44 (x_115725 x_120193 x_120194) Nil_434)))
(assert (forall ((x_120195 R_629) (x_120196 R_629))
	(diseqR_44 (x_115726 x_120195 x_120196) Nil_434)))
(assert (forall ((x_120197 R_629))
	(diseqR_44 (Star_44 x_120197) Nil_434)))
(assert (forall ((x_120198 T_34))
	(diseqR_44 Eps_88 (Atom_44 x_120198))))
(assert (forall ((x_120199 R_629) (x_120200 R_629))
	(diseqR_44 Eps_88 (x_115724 x_120199 x_120200))))
(assert (forall ((x_120201 R_629) (x_120202 R_629))
	(diseqR_44 Eps_88 (x_115725 x_120201 x_120202))))
(assert (forall ((x_120203 R_629) (x_120204 R_629))
	(diseqR_44 Eps_88 (x_115726 x_120203 x_120204))))
(assert (forall ((x_120205 R_629))
	(diseqR_44 Eps_88 (Star_44 x_120205))))
(assert (forall ((x_120206 T_34))
	(diseqR_44 (Atom_44 x_120206) Eps_88)))
(assert (forall ((x_120207 R_629) (x_120208 R_629))
	(diseqR_44 (x_115724 x_120207 x_120208) Eps_88)))
(assert (forall ((x_120209 R_629) (x_120210 R_629))
	(diseqR_44 (x_115725 x_120209 x_120210) Eps_88)))
(assert (forall ((x_120211 R_629) (x_120212 R_629))
	(diseqR_44 (x_115726 x_120211 x_120212) Eps_88)))
(assert (forall ((x_120213 R_629))
	(diseqR_44 (Star_44 x_120213) Eps_88)))
(assert (forall ((x_120214 T_34) (x_120215 R_629) (x_120216 R_629))
	(diseqR_44 (Atom_44 x_120214) (x_115724 x_120215 x_120216))))
(assert (forall ((x_120217 T_34) (x_120218 R_629) (x_120219 R_629))
	(diseqR_44 (Atom_44 x_120217) (x_115725 x_120218 x_120219))))
(assert (forall ((x_120220 T_34) (x_120221 R_629) (x_120222 R_629))
	(diseqR_44 (Atom_44 x_120220) (x_115726 x_120221 x_120222))))
(assert (forall ((x_120223 T_34) (x_120224 R_629))
	(diseqR_44 (Atom_44 x_120223) (Star_44 x_120224))))
(assert (forall ((x_120225 R_629) (x_120226 R_629) (x_120227 T_34))
	(diseqR_44 (x_115724 x_120225 x_120226) (Atom_44 x_120227))))
(assert (forall ((x_120228 R_629) (x_120229 R_629) (x_120230 T_34))
	(diseqR_44 (x_115725 x_120228 x_120229) (Atom_44 x_120230))))
(assert (forall ((x_120231 R_629) (x_120232 R_629) (x_120233 T_34))
	(diseqR_44 (x_115726 x_120231 x_120232) (Atom_44 x_120233))))
(assert (forall ((x_120234 R_629) (x_120235 T_34))
	(diseqR_44 (Star_44 x_120234) (Atom_44 x_120235))))
(assert (forall ((x_120236 R_629) (x_120237 R_629) (x_120238 R_629) (x_120239 R_629))
	(diseqR_44 (x_115724 x_120236 x_120237) (x_115725 x_120238 x_120239))))
(assert (forall ((x_120240 R_629) (x_120241 R_629) (x_120242 R_629) (x_120243 R_629))
	(diseqR_44 (x_115724 x_120240 x_120241) (x_115726 x_120242 x_120243))))
(assert (forall ((x_120244 R_629) (x_120245 R_629) (x_120246 R_629))
	(diseqR_44 (x_115724 x_120244 x_120245) (Star_44 x_120246))))
(assert (forall ((x_120247 R_629) (x_120248 R_629) (x_120249 R_629) (x_120250 R_629))
	(diseqR_44 (x_115725 x_120247 x_120248) (x_115724 x_120249 x_120250))))
(assert (forall ((x_120251 R_629) (x_120252 R_629) (x_120253 R_629) (x_120254 R_629))
	(diseqR_44 (x_115726 x_120251 x_120252) (x_115724 x_120253 x_120254))))
(assert (forall ((x_120255 R_629) (x_120256 R_629) (x_120257 R_629))
	(diseqR_44 (Star_44 x_120255) (x_115724 x_120256 x_120257))))
(assert (forall ((x_120258 R_629) (x_120259 R_629) (x_120260 R_629) (x_120261 R_629))
	(diseqR_44 (x_115725 x_120258 x_120259) (x_115726 x_120260 x_120261))))
(assert (forall ((x_120262 R_629) (x_120263 R_629) (x_120264 R_629))
	(diseqR_44 (x_115725 x_120262 x_120263) (Star_44 x_120264))))
(assert (forall ((x_120265 R_629) (x_120266 R_629) (x_120267 R_629) (x_120268 R_629))
	(diseqR_44 (x_115726 x_120265 x_120266) (x_115725 x_120267 x_120268))))
(assert (forall ((x_120269 R_629) (x_120270 R_629) (x_120271 R_629))
	(diseqR_44 (Star_44 x_120269) (x_115725 x_120270 x_120271))))
(assert (forall ((x_120272 R_629) (x_120273 R_629) (x_120274 R_629))
	(diseqR_44 (x_115726 x_120272 x_120273) (Star_44 x_120274))))
(assert (forall ((x_120275 R_629) (x_120276 R_629) (x_120277 R_629))
	(diseqR_44 (Star_44 x_120275) (x_115726 x_120276 x_120277))))
(assert (forall ((x_120278 T_34) (x_120279 T_34))
	(=> (diseqT_30 x_120278 x_120279) (diseqR_44 (Atom_44 x_120278) (Atom_44 x_120279)))))
(assert (forall ((x_120280 R_629) (x_120281 R_629) (x_120282 R_629) (x_120283 R_629))
	(=> (diseqR_44 x_120280 x_120282) (diseqR_44 (x_115724 x_120280 x_120281) (x_115724 x_120282 x_120283)))))
(assert (forall ((x_120280 R_629) (x_120281 R_629) (x_120282 R_629) (x_120283 R_629))
	(=> (diseqR_44 x_120281 x_120283) (diseqR_44 (x_115724 x_120280 x_120281) (x_115724 x_120282 x_120283)))))
(assert (forall ((x_120284 R_629) (x_120285 R_629) (x_120286 R_629) (x_120287 R_629))
	(=> (diseqR_44 x_120284 x_120286) (diseqR_44 (x_115725 x_120284 x_120285) (x_115725 x_120286 x_120287)))))
(assert (forall ((x_120284 R_629) (x_120285 R_629) (x_120286 R_629) (x_120287 R_629))
	(=> (diseqR_44 x_120285 x_120287) (diseqR_44 (x_115725 x_120284 x_120285) (x_115725 x_120286 x_120287)))))
(assert (forall ((x_120288 R_629) (x_120289 R_629) (x_120290 R_629) (x_120291 R_629))
	(=> (diseqR_44 x_120288 x_120290) (diseqR_44 (x_115726 x_120288 x_120289) (x_115726 x_120290 x_120291)))))
(assert (forall ((x_120288 R_629) (x_120289 R_629) (x_120290 R_629) (x_120291 R_629))
	(=> (diseqR_44 x_120289 x_120291) (diseqR_44 (x_115726 x_120288 x_120289) (x_115726 x_120290 x_120291)))))
(assert (forall ((x_120292 R_629) (x_120293 R_629))
	(=> (diseqR_44 x_120292 x_120293) (diseqR_44 (Star_44 x_120292) (Star_44 x_120293)))))
(declare-fun x_115727 (R_629 R_629 R_629) Bool)
(assert (forall ((y_3126 R_629))
	(x_115727 Nil_434 Nil_434 y_3126)))
(assert (forall ((x_115729 R_629) (x_116153 T_34))
	(x_115727 Nil_434 (Atom_44 x_116153) Nil_434)))
(assert (forall ((x_115729 R_629))
	(x_115727 Nil_434 Eps_88 Nil_434)))
(assert (forall ((x_115729 R_629) (x_116154 R_629))
	(x_115727 Nil_434 (Star_44 x_116154) Nil_434)))
(assert (forall ((x_115729 R_629) (x_116155 R_629) (x_116156 R_629))
	(x_115727 Nil_434 (x_115724 x_116155 x_116156) Nil_434)))
(assert (forall ((x_115729 R_629) (x_116157 R_629) (x_116158 R_629))
	(x_115727 Nil_434 (x_115725 x_116157 x_116158) Nil_434)))
(assert (forall ((x_115729 R_629) (x_116159 R_629) (x_116160 R_629))
	(x_115727 Nil_434 (x_115726 x_116159 x_116160) Nil_434)))
(assert (forall ((x_115730 R_629) (x_115809 T_34) (x_115729 R_629))
	(x_115727 (Atom_44 x_115809) Eps_88 (Atom_44 x_115809))))
(assert (forall ((x_115730 R_629) (x_115729 R_629))
	(x_115727 Eps_88 Eps_88 Eps_88)))
(assert (forall ((x_115730 R_629) (x_115810 R_629) (x_115729 R_629))
	(x_115727 (Star_44 x_115810) Eps_88 (Star_44 x_115810))))
(assert (forall ((x_115730 R_629) (x_115811 R_629) (x_115812 R_629) (x_115729 R_629))
	(x_115727 (x_115724 x_115811 x_115812) Eps_88 (x_115724 x_115811 x_115812))))
(assert (forall ((x_115730 R_629) (x_115813 R_629) (x_115814 R_629) (x_115729 R_629))
	(x_115727 (x_115725 x_115813 x_115814) Eps_88 (x_115725 x_115813 x_115814))))
(assert (forall ((x_115730 R_629) (x_115815 R_629) (x_115816 R_629) (x_115729 R_629))
	(x_115727 (x_115726 x_115815 x_115816) Eps_88 (x_115726 x_115815 x_115816))))
(assert (forall ((x_115731 R_629) (x_115753 T_34) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (Atom_44 x_115753) (Atom_44 x_115753) Eps_88)))
(assert (forall ((x_115731 R_629) (x_115754 R_629) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (Star_44 x_115754) (Star_44 x_115754) Eps_88)))
(assert (forall ((x_115731 R_629) (x_115755 R_629) (x_115756 R_629) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (x_115724 x_115755 x_115756) (x_115724 x_115755 x_115756) Eps_88)))
(assert (forall ((x_115731 R_629) (x_115757 R_629) (x_115758 R_629) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (x_115725 x_115757 x_115758) (x_115725 x_115757 x_115758) Eps_88)))
(assert (forall ((x_115731 R_629) (x_115759 R_629) (x_115760 R_629) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (x_115726 x_115759 x_115760) (x_115726 x_115759 x_115760) Eps_88)))
(assert (forall ((x_115732 R_629) (x_115745 T_34) (x_115731 R_629) (x_115761 T_34) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (x_115726 (Atom_44 x_115761) (Atom_44 x_115745)) (Atom_44 x_115761) (Atom_44 x_115745))))
(assert (forall ((x_115732 R_629) (x_115745 T_34) (x_115731 R_629) (x_115762 R_629) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (x_115726 (Star_44 x_115762) (Atom_44 x_115745)) (Star_44 x_115762) (Atom_44 x_115745))))
(assert (forall ((x_115732 R_629) (x_115745 T_34) (x_115731 R_629) (x_115763 R_629) (x_115764 R_629) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (x_115726 (x_115724 x_115763 x_115764) (Atom_44 x_115745)) (x_115724 x_115763 x_115764) (Atom_44 x_115745))))
(assert (forall ((x_115732 R_629) (x_115745 T_34) (x_115731 R_629) (x_115765 R_629) (x_115766 R_629) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (x_115726 (x_115725 x_115765 x_115766) (Atom_44 x_115745)) (x_115725 x_115765 x_115766) (Atom_44 x_115745))))
(assert (forall ((x_115732 R_629) (x_115745 T_34) (x_115731 R_629) (x_115767 R_629) (x_115768 R_629) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (x_115726 (x_115726 x_115767 x_115768) (Atom_44 x_115745)) (x_115726 x_115767 x_115768) (Atom_44 x_115745))))
(assert (forall ((x_115732 R_629) (x_115746 R_629) (x_115731 R_629) (x_115777 T_34) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (x_115726 (Atom_44 x_115777) (Star_44 x_115746)) (Atom_44 x_115777) (Star_44 x_115746))))
(assert (forall ((x_115732 R_629) (x_115746 R_629) (x_115731 R_629) (x_115778 R_629) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (x_115726 (Star_44 x_115778) (Star_44 x_115746)) (Star_44 x_115778) (Star_44 x_115746))))
(assert (forall ((x_115732 R_629) (x_115746 R_629) (x_115731 R_629) (x_115779 R_629) (x_115780 R_629) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (x_115726 (x_115724 x_115779 x_115780) (Star_44 x_115746)) (x_115724 x_115779 x_115780) (Star_44 x_115746))))
(assert (forall ((x_115732 R_629) (x_115746 R_629) (x_115731 R_629) (x_115781 R_629) (x_115782 R_629) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (x_115726 (x_115725 x_115781 x_115782) (Star_44 x_115746)) (x_115725 x_115781 x_115782) (Star_44 x_115746))))
(assert (forall ((x_115732 R_629) (x_115746 R_629) (x_115731 R_629) (x_115783 R_629) (x_115784 R_629) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (x_115726 (x_115726 x_115783 x_115784) (Star_44 x_115746)) (x_115726 x_115783 x_115784) (Star_44 x_115746))))
(assert (forall ((x_115732 R_629) (x_115747 R_629) (x_115748 R_629) (x_115731 R_629) (x_115785 T_34) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (x_115726 (Atom_44 x_115785) (x_115724 x_115747 x_115748)) (Atom_44 x_115785) (x_115724 x_115747 x_115748))))
(assert (forall ((x_115732 R_629) (x_115747 R_629) (x_115748 R_629) (x_115731 R_629) (x_115786 R_629) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (x_115726 (Star_44 x_115786) (x_115724 x_115747 x_115748)) (Star_44 x_115786) (x_115724 x_115747 x_115748))))
(assert (forall ((x_115732 R_629) (x_115747 R_629) (x_115748 R_629) (x_115731 R_629) (x_115787 R_629) (x_115788 R_629) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (x_115726 (x_115724 x_115787 x_115788) (x_115724 x_115747 x_115748)) (x_115724 x_115787 x_115788) (x_115724 x_115747 x_115748))))
(assert (forall ((x_115732 R_629) (x_115747 R_629) (x_115748 R_629) (x_115731 R_629) (x_115789 R_629) (x_115790 R_629) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (x_115726 (x_115725 x_115789 x_115790) (x_115724 x_115747 x_115748)) (x_115725 x_115789 x_115790) (x_115724 x_115747 x_115748))))
(assert (forall ((x_115732 R_629) (x_115747 R_629) (x_115748 R_629) (x_115731 R_629) (x_115791 R_629) (x_115792 R_629) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (x_115726 (x_115726 x_115791 x_115792) (x_115724 x_115747 x_115748)) (x_115726 x_115791 x_115792) (x_115724 x_115747 x_115748))))
(assert (forall ((x_115732 R_629) (x_115749 R_629) (x_115750 R_629) (x_115731 R_629) (x_115793 T_34) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (x_115726 (Atom_44 x_115793) (x_115725 x_115749 x_115750)) (Atom_44 x_115793) (x_115725 x_115749 x_115750))))
(assert (forall ((x_115732 R_629) (x_115749 R_629) (x_115750 R_629) (x_115731 R_629) (x_115794 R_629) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (x_115726 (Star_44 x_115794) (x_115725 x_115749 x_115750)) (Star_44 x_115794) (x_115725 x_115749 x_115750))))
(assert (forall ((x_115732 R_629) (x_115749 R_629) (x_115750 R_629) (x_115731 R_629) (x_115795 R_629) (x_115796 R_629) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (x_115726 (x_115724 x_115795 x_115796) (x_115725 x_115749 x_115750)) (x_115724 x_115795 x_115796) (x_115725 x_115749 x_115750))))
(assert (forall ((x_115732 R_629) (x_115749 R_629) (x_115750 R_629) (x_115731 R_629) (x_115797 R_629) (x_115798 R_629) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (x_115726 (x_115725 x_115797 x_115798) (x_115725 x_115749 x_115750)) (x_115725 x_115797 x_115798) (x_115725 x_115749 x_115750))))
(assert (forall ((x_115732 R_629) (x_115749 R_629) (x_115750 R_629) (x_115731 R_629) (x_115799 R_629) (x_115800 R_629) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (x_115726 (x_115726 x_115799 x_115800) (x_115725 x_115749 x_115750)) (x_115726 x_115799 x_115800) (x_115725 x_115749 x_115750))))
(assert (forall ((x_115732 R_629) (x_115751 R_629) (x_115752 R_629) (x_115731 R_629) (x_115801 T_34) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (x_115726 (Atom_44 x_115801) (x_115726 x_115751 x_115752)) (Atom_44 x_115801) (x_115726 x_115751 x_115752))))
(assert (forall ((x_115732 R_629) (x_115751 R_629) (x_115752 R_629) (x_115731 R_629) (x_115802 R_629) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (x_115726 (Star_44 x_115802) (x_115726 x_115751 x_115752)) (Star_44 x_115802) (x_115726 x_115751 x_115752))))
(assert (forall ((x_115732 R_629) (x_115751 R_629) (x_115752 R_629) (x_115731 R_629) (x_115803 R_629) (x_115804 R_629) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (x_115726 (x_115724 x_115803 x_115804) (x_115726 x_115751 x_115752)) (x_115724 x_115803 x_115804) (x_115726 x_115751 x_115752))))
(assert (forall ((x_115732 R_629) (x_115751 R_629) (x_115752 R_629) (x_115731 R_629) (x_115805 R_629) (x_115806 R_629) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (x_115726 (x_115725 x_115805 x_115806) (x_115726 x_115751 x_115752)) (x_115725 x_115805 x_115806) (x_115726 x_115751 x_115752))))
(assert (forall ((x_115732 R_629) (x_115751 R_629) (x_115752 R_629) (x_115731 R_629) (x_115807 R_629) (x_115808 R_629) (x_115730 R_629) (x_115729 R_629))
	(x_115727 (x_115726 (x_115726 x_115807 x_115808) (x_115726 x_115751 x_115752)) (x_115726 x_115807 x_115808) (x_115726 x_115751 x_115752))))
(declare-fun x_115733 (R_629 R_629 R_629) Bool)
(assert (forall ((x_119909 R_629))
	(x_115733 x_119909 Nil_434 x_119909)))
(assert (forall ((x_115735 R_629) (x_118233 T_34))
	(x_115733 (Atom_44 x_118233) (Atom_44 x_118233) Nil_434)))
(assert (forall ((x_115735 R_629))
	(x_115733 Eps_88 Eps_88 Nil_434)))
(assert (forall ((x_115735 R_629) (x_118234 R_629))
	(x_115733 (Star_44 x_118234) (Star_44 x_118234) Nil_434)))
(assert (forall ((x_115735 R_629) (x_118235 R_629) (x_118236 R_629))
	(x_115733 (x_115724 x_118235 x_118236) (x_115724 x_118235 x_118236) Nil_434)))
(assert (forall ((x_115735 R_629) (x_118237 R_629) (x_118238 R_629))
	(x_115733 (x_115725 x_118237 x_118238) (x_115725 x_118237 x_118238) Nil_434)))
(assert (forall ((x_115735 R_629) (x_118239 R_629) (x_118240 R_629))
	(x_115733 (x_115726 x_118239 x_118240) (x_115726 x_118239 x_118240) Nil_434)))
(assert (forall ((x_115736 R_629) (x_118225 T_34) (x_115735 R_629) (x_118241 T_34))
	(x_115733 (x_115724 (Atom_44 x_118241) (Atom_44 x_118225)) (Atom_44 x_118241) (Atom_44 x_118225))))
(assert (forall ((x_115736 R_629) (x_118225 T_34) (x_115735 R_629))
	(x_115733 (x_115724 Eps_88 (Atom_44 x_118225)) Eps_88 (Atom_44 x_118225))))
(assert (forall ((x_115736 R_629) (x_118225 T_34) (x_115735 R_629) (x_118242 R_629))
	(x_115733 (x_115724 (Star_44 x_118242) (Atom_44 x_118225)) (Star_44 x_118242) (Atom_44 x_118225))))
(assert (forall ((x_115736 R_629) (x_118225 T_34) (x_115735 R_629) (x_118243 R_629) (x_118244 R_629))
	(x_115733 (x_115724 (x_115724 x_118243 x_118244) (Atom_44 x_118225)) (x_115724 x_118243 x_118244) (Atom_44 x_118225))))
(assert (forall ((x_115736 R_629) (x_118225 T_34) (x_115735 R_629) (x_118245 R_629) (x_118246 R_629))
	(x_115733 (x_115724 (x_115725 x_118245 x_118246) (Atom_44 x_118225)) (x_115725 x_118245 x_118246) (Atom_44 x_118225))))
(assert (forall ((x_115736 R_629) (x_118225 T_34) (x_115735 R_629) (x_118247 R_629) (x_118248 R_629))
	(x_115733 (x_115724 (x_115726 x_118247 x_118248) (Atom_44 x_118225)) (x_115726 x_118247 x_118248) (Atom_44 x_118225))))
(assert (forall ((x_115736 R_629) (x_115735 R_629) (x_118249 T_34))
	(x_115733 (x_115724 (Atom_44 x_118249) Eps_88) (Atom_44 x_118249) Eps_88)))
(assert (forall ((x_115736 R_629) (x_115735 R_629))
	(x_115733 (x_115724 Eps_88 Eps_88) Eps_88 Eps_88)))
(assert (forall ((x_115736 R_629) (x_115735 R_629) (x_118250 R_629))
	(x_115733 (x_115724 (Star_44 x_118250) Eps_88) (Star_44 x_118250) Eps_88)))
(assert (forall ((x_115736 R_629) (x_115735 R_629) (x_118251 R_629) (x_118252 R_629))
	(x_115733 (x_115724 (x_115724 x_118251 x_118252) Eps_88) (x_115724 x_118251 x_118252) Eps_88)))
(assert (forall ((x_115736 R_629) (x_115735 R_629) (x_118253 R_629) (x_118254 R_629))
	(x_115733 (x_115724 (x_115725 x_118253 x_118254) Eps_88) (x_115725 x_118253 x_118254) Eps_88)))
(assert (forall ((x_115736 R_629) (x_115735 R_629) (x_118255 R_629) (x_118256 R_629))
	(x_115733 (x_115724 (x_115726 x_118255 x_118256) Eps_88) (x_115726 x_118255 x_118256) Eps_88)))
(assert (forall ((x_115736 R_629) (x_118226 R_629) (x_115735 R_629) (x_118257 T_34))
	(x_115733 (x_115724 (Atom_44 x_118257) (Star_44 x_118226)) (Atom_44 x_118257) (Star_44 x_118226))))
(assert (forall ((x_115736 R_629) (x_118226 R_629) (x_115735 R_629))
	(x_115733 (x_115724 Eps_88 (Star_44 x_118226)) Eps_88 (Star_44 x_118226))))
(assert (forall ((x_115736 R_629) (x_118226 R_629) (x_115735 R_629) (x_118258 R_629))
	(x_115733 (x_115724 (Star_44 x_118258) (Star_44 x_118226)) (Star_44 x_118258) (Star_44 x_118226))))
(assert (forall ((x_115736 R_629) (x_118226 R_629) (x_115735 R_629) (x_118259 R_629) (x_118260 R_629))
	(x_115733 (x_115724 (x_115724 x_118259 x_118260) (Star_44 x_118226)) (x_115724 x_118259 x_118260) (Star_44 x_118226))))
(assert (forall ((x_115736 R_629) (x_118226 R_629) (x_115735 R_629) (x_118261 R_629) (x_118262 R_629))
	(x_115733 (x_115724 (x_115725 x_118261 x_118262) (Star_44 x_118226)) (x_115725 x_118261 x_118262) (Star_44 x_118226))))
(assert (forall ((x_115736 R_629) (x_118226 R_629) (x_115735 R_629) (x_118263 R_629) (x_118264 R_629))
	(x_115733 (x_115724 (x_115726 x_118263 x_118264) (Star_44 x_118226)) (x_115726 x_118263 x_118264) (Star_44 x_118226))))
(assert (forall ((x_115736 R_629) (x_118227 R_629) (x_118228 R_629) (x_115735 R_629) (x_118265 T_34))
	(x_115733 (x_115724 (Atom_44 x_118265) (x_115724 x_118227 x_118228)) (Atom_44 x_118265) (x_115724 x_118227 x_118228))))
(assert (forall ((x_115736 R_629) (x_118227 R_629) (x_118228 R_629) (x_115735 R_629))
	(x_115733 (x_115724 Eps_88 (x_115724 x_118227 x_118228)) Eps_88 (x_115724 x_118227 x_118228))))
(assert (forall ((x_115736 R_629) (x_118227 R_629) (x_118228 R_629) (x_115735 R_629) (x_118266 R_629))
	(x_115733 (x_115724 (Star_44 x_118266) (x_115724 x_118227 x_118228)) (Star_44 x_118266) (x_115724 x_118227 x_118228))))
(assert (forall ((x_115736 R_629) (x_118227 R_629) (x_118228 R_629) (x_115735 R_629) (x_118267 R_629) (x_118268 R_629))
	(x_115733 (x_115724 (x_115724 x_118267 x_118268) (x_115724 x_118227 x_118228)) (x_115724 x_118267 x_118268) (x_115724 x_118227 x_118228))))
(assert (forall ((x_115736 R_629) (x_118227 R_629) (x_118228 R_629) (x_115735 R_629) (x_118269 R_629) (x_118270 R_629))
	(x_115733 (x_115724 (x_115725 x_118269 x_118270) (x_115724 x_118227 x_118228)) (x_115725 x_118269 x_118270) (x_115724 x_118227 x_118228))))
(assert (forall ((x_115736 R_629) (x_118227 R_629) (x_118228 R_629) (x_115735 R_629) (x_118271 R_629) (x_118272 R_629))
	(x_115733 (x_115724 (x_115726 x_118271 x_118272) (x_115724 x_118227 x_118228)) (x_115726 x_118271 x_118272) (x_115724 x_118227 x_118228))))
(assert (forall ((x_115736 R_629) (x_118229 R_629) (x_118230 R_629) (x_115735 R_629) (x_118273 T_34))
	(x_115733 (x_115724 (Atom_44 x_118273) (x_115725 x_118229 x_118230)) (Atom_44 x_118273) (x_115725 x_118229 x_118230))))
(assert (forall ((x_115736 R_629) (x_118229 R_629) (x_118230 R_629) (x_115735 R_629))
	(x_115733 (x_115724 Eps_88 (x_115725 x_118229 x_118230)) Eps_88 (x_115725 x_118229 x_118230))))
(assert (forall ((x_115736 R_629) (x_118229 R_629) (x_118230 R_629) (x_115735 R_629) (x_118274 R_629))
	(x_115733 (x_115724 (Star_44 x_118274) (x_115725 x_118229 x_118230)) (Star_44 x_118274) (x_115725 x_118229 x_118230))))
(assert (forall ((x_115736 R_629) (x_118229 R_629) (x_118230 R_629) (x_115735 R_629) (x_118275 R_629) (x_118276 R_629))
	(x_115733 (x_115724 (x_115724 x_118275 x_118276) (x_115725 x_118229 x_118230)) (x_115724 x_118275 x_118276) (x_115725 x_118229 x_118230))))
(assert (forall ((x_115736 R_629) (x_118229 R_629) (x_118230 R_629) (x_115735 R_629) (x_118277 R_629) (x_118278 R_629))
	(x_115733 (x_115724 (x_115725 x_118277 x_118278) (x_115725 x_118229 x_118230)) (x_115725 x_118277 x_118278) (x_115725 x_118229 x_118230))))
(assert (forall ((x_115736 R_629) (x_118229 R_629) (x_118230 R_629) (x_115735 R_629) (x_118279 R_629) (x_118280 R_629))
	(x_115733 (x_115724 (x_115726 x_118279 x_118280) (x_115725 x_118229 x_118230)) (x_115726 x_118279 x_118280) (x_115725 x_118229 x_118230))))
(assert (forall ((x_115736 R_629) (x_118231 R_629) (x_118232 R_629) (x_115735 R_629) (x_118281 T_34))
	(x_115733 (x_115724 (Atom_44 x_118281) (x_115726 x_118231 x_118232)) (Atom_44 x_118281) (x_115726 x_118231 x_118232))))
(assert (forall ((x_115736 R_629) (x_118231 R_629) (x_118232 R_629) (x_115735 R_629))
	(x_115733 (x_115724 Eps_88 (x_115726 x_118231 x_118232)) Eps_88 (x_115726 x_118231 x_118232))))
(assert (forall ((x_115736 R_629) (x_118231 R_629) (x_118232 R_629) (x_115735 R_629) (x_118282 R_629))
	(x_115733 (x_115724 (Star_44 x_118282) (x_115726 x_118231 x_118232)) (Star_44 x_118282) (x_115726 x_118231 x_118232))))
(assert (forall ((x_115736 R_629) (x_118231 R_629) (x_118232 R_629) (x_115735 R_629) (x_118283 R_629) (x_118284 R_629))
	(x_115733 (x_115724 (x_115724 x_118283 x_118284) (x_115726 x_118231 x_118232)) (x_115724 x_118283 x_118284) (x_115726 x_118231 x_118232))))
(assert (forall ((x_115736 R_629) (x_118231 R_629) (x_118232 R_629) (x_115735 R_629) (x_118285 R_629) (x_118286 R_629))
	(x_115733 (x_115724 (x_115725 x_118285 x_118286) (x_115726 x_118231 x_118232)) (x_115725 x_118285 x_118286) (x_115726 x_118231 x_118232))))
(assert (forall ((x_115736 R_629) (x_118231 R_629) (x_118232 R_629) (x_115735 R_629) (x_118287 R_629) (x_118288 R_629))
	(x_115733 (x_115724 (x_115726 x_118287 x_118288) (x_115726 x_118231 x_118232)) (x_115726 x_118287 x_118288) (x_115726 x_118231 x_118232))))
(declare-fun iter_1 (R_629 Int R_629) Bool)
(assert (forall ((y_3128 R_629))
	(iter_1 Eps_88 Z_2684 y_3128)))
(assert (forall ((x_120131 Int) (x_119954 R_629) (x_115737 Int) (y_3128 R_629))
	(=> (and (diseqInt x_115737 Z_2684) (iter_1 x_119954 x_120131 y_3128) (minus_452 x_120131 x_115737 (S_619 Z_2684))) (iter_1 (x_115726 y_3128 x_119954) x_115737 y_3128))))
(declare-fun eps_89 (Bool_431 R_629) Bool)
(assert (forall ((y_3129 R_629))
	(eps_89 true_431 (Star_44 y_3129))))
(assert (forall ((x_119956 Bool_431) (x_119957 Bool_431) (x_119958 Bool_431) (p_573 R_629) (q_341 R_629))
	(=> (and (eps_89 x_119957 p_573) (eps_89 x_119958 q_341) (and_437 x_119956 x_119957 x_119958)) (eps_89 x_119956 (x_115726 p_573 q_341)))))
(assert (forall ((x_119959 Bool_431) (x_119960 Bool_431) (x_119961 Bool_431) (r_630 R_629) (q_342 R_629))
	(=> (and (eps_89 x_119960 r_630) (eps_89 x_119961 q_342) (and_437 x_119959 x_119960 x_119961)) (eps_89 x_119959 (x_115725 r_630 q_342)))))
(assert (forall ((x_119962 Bool_431) (x_119963 Bool_431) (x_119964 Bool_431) (p_574 R_629) (q_343 R_629))
	(=> (and (eps_89 x_119963 p_574) (eps_89 x_119964 q_343) (or_448 x_119962 x_119963 x_119964)) (eps_89 x_119962 (x_115724 p_574 q_343)))))
(assert (eps_89 true_431 Eps_88))
(assert (forall ((x_115739 R_629) (x_118289 T_34))
	(eps_89 false_431 (Atom_44 x_118289))))
(assert (forall ((x_115739 R_629))
	(eps_89 false_431 Nil_434)))
(declare-fun step_44 (R_629 R_629 T_34) Bool)
(assert (forall ((x_119968 R_629) (x_119969 R_629) (p_575 R_629) (y_3130 T_34))
	(=> (and (step_44 x_119969 p_575 y_3130) (x_115727 x_119968 x_119969 (Star_44 p_575))) (step_44 x_119968 (Star_44 p_575) y_3130))))
(assert (forall ((x_119972 R_629) (x_119973 R_629) (x_119974 R_629) (x_119975 R_629) (p_576 R_629) (q_344 R_629) (y_3130 T_34))
	(=> (and (step_44 x_119973 p_576 y_3130) (x_115727 x_119974 x_119973 q_344) (step_44 x_119975 q_344 y_3130) (x_115733 x_119972 x_119974 x_119975) (eps_89 true_431 p_576)) (step_44 x_119972 (x_115726 p_576 q_344) y_3130))))
(assert (forall ((x_119978 R_629) (x_119979 R_629) (x_119980 R_629) (p_576 R_629) (q_344 R_629) (y_3130 T_34))
	(=> (and (step_44 x_119979 p_576 y_3130) (x_115727 x_119980 x_119979 q_344) (x_115733 x_119978 x_119980 Nil_434) (eps_89 false_431 p_576)) (step_44 x_119978 (x_115726 p_576 q_344) y_3130))))
(assert (forall ((r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (step_44 Nil_434 r_631 y_3130) (step_44 Nil_434 (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115741 R_629) (x_118298 T_34) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 Nil_434 q_345 y_3130) (step_44 (Atom_44 x_118298) r_631 y_3130)) (step_44 Nil_434 (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115741 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 Nil_434 q_345 y_3130) (step_44 Eps_88 r_631 y_3130)) (step_44 Nil_434 (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115741 R_629) (x_118299 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 Nil_434 q_345 y_3130) (step_44 (Star_44 x_118299) r_631 y_3130)) (step_44 Nil_434 (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115741 R_629) (x_118300 R_629) (x_118301 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 Nil_434 q_345 y_3130) (step_44 (x_115724 x_118300 x_118301) r_631 y_3130)) (step_44 Nil_434 (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115741 R_629) (x_118302 R_629) (x_118303 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 Nil_434 q_345 y_3130) (step_44 (x_115725 x_118302 x_118303) r_631 y_3130)) (step_44 Nil_434 (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115741 R_629) (x_118304 R_629) (x_118305 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 Nil_434 q_345 y_3130) (step_44 (x_115726 x_118304 x_118305) r_631 y_3130)) (step_44 Nil_434 (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118290 T_34) (x_115741 R_629) (x_118306 T_34) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (Atom_44 x_118290) q_345 y_3130) (step_44 (Atom_44 x_118306) r_631 y_3130)) (step_44 (x_115725 (Atom_44 x_118306) (Atom_44 x_118290)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118290 T_34) (x_115741 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (Atom_44 x_118290) q_345 y_3130) (step_44 Eps_88 r_631 y_3130)) (step_44 (x_115725 Eps_88 (Atom_44 x_118290)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118290 T_34) (x_115741 R_629) (x_118307 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (Atom_44 x_118290) q_345 y_3130) (step_44 (Star_44 x_118307) r_631 y_3130)) (step_44 (x_115725 (Star_44 x_118307) (Atom_44 x_118290)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118290 T_34) (x_115741 R_629) (x_118308 R_629) (x_118309 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (Atom_44 x_118290) q_345 y_3130) (step_44 (x_115724 x_118308 x_118309) r_631 y_3130)) (step_44 (x_115725 (x_115724 x_118308 x_118309) (Atom_44 x_118290)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118290 T_34) (x_115741 R_629) (x_118310 R_629) (x_118311 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (Atom_44 x_118290) q_345 y_3130) (step_44 (x_115725 x_118310 x_118311) r_631 y_3130)) (step_44 (x_115725 (x_115725 x_118310 x_118311) (Atom_44 x_118290)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118290 T_34) (x_115741 R_629) (x_118312 R_629) (x_118313 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (Atom_44 x_118290) q_345 y_3130) (step_44 (x_115726 x_118312 x_118313) r_631 y_3130)) (step_44 (x_115725 (x_115726 x_118312 x_118313) (Atom_44 x_118290)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_115741 R_629) (x_118314 T_34) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 Eps_88 q_345 y_3130) (step_44 (Atom_44 x_118314) r_631 y_3130)) (step_44 (x_115725 (Atom_44 x_118314) Eps_88) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_115741 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 Eps_88 q_345 y_3130) (step_44 Eps_88 r_631 y_3130)) (step_44 (x_115725 Eps_88 Eps_88) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_115741 R_629) (x_118315 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 Eps_88 q_345 y_3130) (step_44 (Star_44 x_118315) r_631 y_3130)) (step_44 (x_115725 (Star_44 x_118315) Eps_88) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_115741 R_629) (x_118316 R_629) (x_118317 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 Eps_88 q_345 y_3130) (step_44 (x_115724 x_118316 x_118317) r_631 y_3130)) (step_44 (x_115725 (x_115724 x_118316 x_118317) Eps_88) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_115741 R_629) (x_118318 R_629) (x_118319 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 Eps_88 q_345 y_3130) (step_44 (x_115725 x_118318 x_118319) r_631 y_3130)) (step_44 (x_115725 (x_115725 x_118318 x_118319) Eps_88) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_115741 R_629) (x_118320 R_629) (x_118321 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 Eps_88 q_345 y_3130) (step_44 (x_115726 x_118320 x_118321) r_631 y_3130)) (step_44 (x_115725 (x_115726 x_118320 x_118321) Eps_88) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118291 R_629) (x_115741 R_629) (x_118322 T_34) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (Star_44 x_118291) q_345 y_3130) (step_44 (Atom_44 x_118322) r_631 y_3130)) (step_44 (x_115725 (Atom_44 x_118322) (Star_44 x_118291)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118291 R_629) (x_115741 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (Star_44 x_118291) q_345 y_3130) (step_44 Eps_88 r_631 y_3130)) (step_44 (x_115725 Eps_88 (Star_44 x_118291)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118291 R_629) (x_115741 R_629) (x_118323 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (Star_44 x_118291) q_345 y_3130) (step_44 (Star_44 x_118323) r_631 y_3130)) (step_44 (x_115725 (Star_44 x_118323) (Star_44 x_118291)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118291 R_629) (x_115741 R_629) (x_118324 R_629) (x_118325 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (Star_44 x_118291) q_345 y_3130) (step_44 (x_115724 x_118324 x_118325) r_631 y_3130)) (step_44 (x_115725 (x_115724 x_118324 x_118325) (Star_44 x_118291)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118291 R_629) (x_115741 R_629) (x_118326 R_629) (x_118327 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (Star_44 x_118291) q_345 y_3130) (step_44 (x_115725 x_118326 x_118327) r_631 y_3130)) (step_44 (x_115725 (x_115725 x_118326 x_118327) (Star_44 x_118291)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118291 R_629) (x_115741 R_629) (x_118328 R_629) (x_118329 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (Star_44 x_118291) q_345 y_3130) (step_44 (x_115726 x_118328 x_118329) r_631 y_3130)) (step_44 (x_115725 (x_115726 x_118328 x_118329) (Star_44 x_118291)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118292 R_629) (x_118293 R_629) (x_115741 R_629) (x_118330 T_34) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (x_115724 x_118292 x_118293) q_345 y_3130) (step_44 (Atom_44 x_118330) r_631 y_3130)) (step_44 (x_115725 (Atom_44 x_118330) (x_115724 x_118292 x_118293)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118292 R_629) (x_118293 R_629) (x_115741 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (x_115724 x_118292 x_118293) q_345 y_3130) (step_44 Eps_88 r_631 y_3130)) (step_44 (x_115725 Eps_88 (x_115724 x_118292 x_118293)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118292 R_629) (x_118293 R_629) (x_115741 R_629) (x_118331 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (x_115724 x_118292 x_118293) q_345 y_3130) (step_44 (Star_44 x_118331) r_631 y_3130)) (step_44 (x_115725 (Star_44 x_118331) (x_115724 x_118292 x_118293)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118292 R_629) (x_118293 R_629) (x_115741 R_629) (x_118332 R_629) (x_118333 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (x_115724 x_118292 x_118293) q_345 y_3130) (step_44 (x_115724 x_118332 x_118333) r_631 y_3130)) (step_44 (x_115725 (x_115724 x_118332 x_118333) (x_115724 x_118292 x_118293)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118292 R_629) (x_118293 R_629) (x_115741 R_629) (x_118334 R_629) (x_118335 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (x_115724 x_118292 x_118293) q_345 y_3130) (step_44 (x_115725 x_118334 x_118335) r_631 y_3130)) (step_44 (x_115725 (x_115725 x_118334 x_118335) (x_115724 x_118292 x_118293)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118292 R_629) (x_118293 R_629) (x_115741 R_629) (x_118336 R_629) (x_118337 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (x_115724 x_118292 x_118293) q_345 y_3130) (step_44 (x_115726 x_118336 x_118337) r_631 y_3130)) (step_44 (x_115725 (x_115726 x_118336 x_118337) (x_115724 x_118292 x_118293)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118294 R_629) (x_118295 R_629) (x_115741 R_629) (x_118338 T_34) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (x_115725 x_118294 x_118295) q_345 y_3130) (step_44 (Atom_44 x_118338) r_631 y_3130)) (step_44 (x_115725 (Atom_44 x_118338) (x_115725 x_118294 x_118295)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118294 R_629) (x_118295 R_629) (x_115741 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (x_115725 x_118294 x_118295) q_345 y_3130) (step_44 Eps_88 r_631 y_3130)) (step_44 (x_115725 Eps_88 (x_115725 x_118294 x_118295)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118294 R_629) (x_118295 R_629) (x_115741 R_629) (x_118339 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (x_115725 x_118294 x_118295) q_345 y_3130) (step_44 (Star_44 x_118339) r_631 y_3130)) (step_44 (x_115725 (Star_44 x_118339) (x_115725 x_118294 x_118295)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118294 R_629) (x_118295 R_629) (x_115741 R_629) (x_118340 R_629) (x_118341 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (x_115725 x_118294 x_118295) q_345 y_3130) (step_44 (x_115724 x_118340 x_118341) r_631 y_3130)) (step_44 (x_115725 (x_115724 x_118340 x_118341) (x_115725 x_118294 x_118295)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118294 R_629) (x_118295 R_629) (x_115741 R_629) (x_118342 R_629) (x_118343 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (x_115725 x_118294 x_118295) q_345 y_3130) (step_44 (x_115725 x_118342 x_118343) r_631 y_3130)) (step_44 (x_115725 (x_115725 x_118342 x_118343) (x_115725 x_118294 x_118295)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118294 R_629) (x_118295 R_629) (x_115741 R_629) (x_118344 R_629) (x_118345 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (x_115725 x_118294 x_118295) q_345 y_3130) (step_44 (x_115726 x_118344 x_118345) r_631 y_3130)) (step_44 (x_115725 (x_115726 x_118344 x_118345) (x_115725 x_118294 x_118295)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118296 R_629) (x_118297 R_629) (x_115741 R_629) (x_118346 T_34) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (x_115726 x_118296 x_118297) q_345 y_3130) (step_44 (Atom_44 x_118346) r_631 y_3130)) (step_44 (x_115725 (Atom_44 x_118346) (x_115726 x_118296 x_118297)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118296 R_629) (x_118297 R_629) (x_115741 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (x_115726 x_118296 x_118297) q_345 y_3130) (step_44 Eps_88 r_631 y_3130)) (step_44 (x_115725 Eps_88 (x_115726 x_118296 x_118297)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118296 R_629) (x_118297 R_629) (x_115741 R_629) (x_118347 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (x_115726 x_118296 x_118297) q_345 y_3130) (step_44 (Star_44 x_118347) r_631 y_3130)) (step_44 (x_115725 (Star_44 x_118347) (x_115726 x_118296 x_118297)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118296 R_629) (x_118297 R_629) (x_115741 R_629) (x_118348 R_629) (x_118349 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (x_115726 x_118296 x_118297) q_345 y_3130) (step_44 (x_115724 x_118348 x_118349) r_631 y_3130)) (step_44 (x_115725 (x_115724 x_118348 x_118349) (x_115726 x_118296 x_118297)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118296 R_629) (x_118297 R_629) (x_115741 R_629) (x_118350 R_629) (x_118351 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (x_115726 x_118296 x_118297) q_345 y_3130) (step_44 (x_115725 x_118350 x_118351) r_631 y_3130)) (step_44 (x_115725 (x_115725 x_118350 x_118351) (x_115726 x_118296 x_118297)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_115742 R_629) (x_118296 R_629) (x_118297 R_629) (x_115741 R_629) (x_118352 R_629) (x_118353 R_629) (r_631 R_629) (q_345 R_629) (y_3130 T_34))
	(=> (and (step_44 (x_115726 x_118296 x_118297) q_345 y_3130) (step_44 (x_115726 x_118352 x_118353) r_631 y_3130)) (step_44 (x_115725 (x_115726 x_118352 x_118353) (x_115726 x_118296 x_118297)) (x_115725 r_631 q_345) y_3130))))
(assert (forall ((x_120110 R_629) (x_120111 R_629) (x_120112 R_629) (p_577 R_629) (q_346 R_629) (y_3130 T_34))
	(=> (and (step_44 x_120111 p_577 y_3130) (step_44 x_120112 q_346 y_3130) (x_115733 x_120110 x_120111 x_120112)) (step_44 x_120110 (x_115724 p_577 q_346) y_3130))))
(assert (forall ((b_125 T_34))
	(step_44 Eps_88 (Atom_44 b_125) b_125)))
(assert (forall ((b_125 T_34) (y_3130 T_34))
	(=> (diseqT_30 b_125 y_3130) (step_44 Nil_434 (Atom_44 b_125) y_3130))))
(assert (forall ((x_115743 R_629) (y_3130 T_34))
	(step_44 Nil_434 Eps_88 y_3130)))
(assert (forall ((x_115743 R_629) (y_3130 T_34))
	(step_44 Nil_434 Nil_434 y_3130)))
(declare-fun rec_30 (Bool_431 R_629 list_379) Bool)
(assert (forall ((x_120118 Bool_431) (x_120119 R_629) (z_2683 T_34) (xs_872 list_379) (x_115744 R_629))
	(=> (and (step_44 x_120119 x_115744 z_2683) (rec_30 x_120118 x_120119 xs_872)) (rec_30 x_120118 x_115744 (cons_373 z_2683 xs_872)))))
(assert (forall ((x_120121 Bool_431) (x_115744 R_629))
	(=> (eps_89 x_120121 x_115744) (rec_30 x_120121 x_115744 nil_433))))
(assert (forall ((x_120123 R_629) (x_120124 R_629) (i_16 Int) (j_4 Int) (p_578 R_629) (s_618 list_379))
	(=> (and true (diseqInt i_16 j_4) (eps_89 false_431 p_578) (iter_1 x_120123 i_16 p_578) (iter_1 x_120124 j_4 p_578) (rec_30 true_431 (x_115725 x_120123 x_120124) s_618)) false)))
(check-sat)
