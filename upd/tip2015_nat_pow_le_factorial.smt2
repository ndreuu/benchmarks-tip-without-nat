
(set-logic HORN)
(declare-fun zero_116 () Int)
(declare-fun succ_113 (Int) Int)
(declare-datatypes ((Bool_270 0)) (((false_270) (true_270))))
(declare-fun diseqBool_128 (Bool_270 Bool_270) Bool)
(declare-fun isfalse_128 (Bool_270) Bool)
(declare-fun istrue_128 (Bool_270) Bool)
(assert (isfalse_128 false_270))
(assert (istrue_128 true_270))
(assert (diseqBool_128 false_270 true_270))
(assert (diseqBool_128 true_270 false_270))
(declare-fun and_270 (Bool_270 Bool_270 Bool_270) Bool)
(declare-fun or_276 (Bool_270 Bool_270 Bool_270) Bool)
(declare-fun hence_270 (Bool_270 Bool_270 Bool_270) Bool)
(declare-fun not_274 (Bool_270 Bool_270) Bool)
(assert (and_270 false_270 false_270 false_270))
(assert (and_270 false_270 true_270 false_270))
(assert (and_270 false_270 false_270 true_270))
(assert (and_270 true_270 true_270 true_270))
(assert (or_276 false_270 false_270 false_270))
(assert (or_276 true_270 true_270 false_270))
(assert (or_276 true_270 false_270 true_270))
(assert (or_276 true_270 true_270 true_270))
(assert (hence_270 true_270 false_270 false_270))
(assert (hence_270 false_270 true_270 false_270))
(assert (hence_270 true_270 false_270 true_270))
(assert (hence_270 true_270 true_270 true_270))
(assert (not_274 true_270 false_270))
(assert (not_274 false_270 true_270))
(declare-fun diseqInt (Int Int) Bool)
(declare-fun p_325 (Int Int) Bool)
(declare-fun iszero_113 (Int) Bool)
(declare-fun issucc_113 (Int) Bool)
(assert (forall ((x_50271 Int))
	(p_325 x_50271 (succ_113 x_50271))))
(assert (iszero_113 zero_116))
(assert (forall ((x_50273 Int))
	(issucc_113 (succ_113 x_50273))))
(assert (forall ((x_50274 Int))
	(diseqInt zero_116 (succ_113 x_50274))))
(assert (forall ((x_50275 Int))
	(diseqInt (succ_113 x_50275) zero_116)))
(assert (forall ((x_50276 Int) (x_50277 Int))
	(=> (diseqInt x_50276 x_50277) (diseqInt (succ_113 x_50276) (succ_113 x_50277)))))
(declare-fun plus_113 (Int Int Int) Bool)
(assert (forall ((x_50216 Int) (z_1618 Int) (y_1810 Int))
	(=> (plus_113 x_50216 z_1618 y_1810) (plus_113 (succ_113 x_50216) (succ_113 z_1618) y_1810))))
(assert (forall ((x_50217 Int))
	(plus_113 x_50217 zero_116 x_50217)))
(declare-fun times_26 (Int Int Int) Bool)
(assert (forall ((x_50218 Int) (x_50219 Int) (z_1619 Int) (y_1811 Int))
	(=> (and (times_26 x_50219 z_1619 y_1811) (plus_113 x_50218 y_1811 x_50219)) (times_26 x_50218 (succ_113 z_1619) y_1811))))
(assert (forall ((y_1811 Int))
	(times_26 zero_116 zero_116 y_1811)))
(declare-fun lt_288 (Bool_270 Int Int) Bool)
(assert (forall ((x_50222 Bool_270) (n_92 Int) (z_1620 Int))
	(=> (lt_288 x_50222 n_92 z_1620) (lt_288 x_50222 (succ_113 n_92) (succ_113 z_1620)))))
(assert (forall ((z_1620 Int))
	(lt_288 true_270 zero_116 (succ_113 z_1620))))
(assert (forall ((x_50200 Int))
	(lt_288 false_270 x_50200 zero_116)))
(declare-fun formulapow_10 (Int Int Int) Bool)
(assert (forall ((x_50226 Int) (x_50227 Int) (z_1621 Int) (x_50201 Int))
	(=> (and (formulapow_10 x_50227 x_50201 z_1621) (times_26 x_50226 x_50201 x_50227)) (formulapow_10 x_50226 x_50201 (succ_113 z_1621)))))
(assert (forall ((x_50201 Int))
	(formulapow_10 (succ_113 zero_116) x_50201 zero_116)))
(declare-fun factorial_0 (Int Int) Bool)
(assert (forall ((x_50230 Int) (x_50231 Int) (y_1814 Int))
	(=> (and (factorial_0 x_50231 y_1814) (times_26 x_50230 (succ_113 y_1814) x_50231)) (factorial_0 x_50230 (succ_113 y_1814)))))
(assert (factorial_0 (succ_113 zero_116) zero_116))
(assert (forall ((x_50234 Int) (x_50235 Int) (x_50236 Int) (x_50237 Int) (n_93 Int))
	(=> (and true (plus_113 x_50234 (succ_113 (succ_113 (succ_113 (succ_113 zero_116)))) n_93) (formulapow_10 x_50235 (succ_113 (succ_113 zero_116)) x_50234) (plus_113 x_50236 (succ_113 (succ_113 (succ_113 (succ_113 zero_116)))) n_93) (factorial_0 x_50237 x_50236) (lt_288 false_270 x_50235 x_50237)) false)))
(assert (forall ((x_50239 Int) (x_50240 Int) (x_50241 Int) (x_50242 Int) (x_50203 Int) (y_1815 Int) (z_1622 Int))
	(=> (and true (diseqInt x_50240 x_50242) (times_26 x_50239 y_1815 z_1622) (times_26 x_50240 x_50203 x_50239) (times_26 x_50241 x_50203 y_1815) (times_26 x_50242 x_50241 z_1622)) false)))
(assert (forall ((x_50243 Int) (x_50244 Int) (x_50245 Int) (x_50246 Int) (x_50204 Int) (y_1816 Int) (z_1623 Int))
	(=> (and true (diseqInt x_50244 x_50246) (plus_113 x_50243 y_1816 z_1623) (plus_113 x_50244 x_50204 x_50243) (plus_113 x_50245 x_50204 y_1816) (plus_113 x_50246 x_50245 z_1623)) false)))
(assert (forall ((x_50247 Int) (x_50248 Int) (x_50205 Int) (y_1817 Int))
	(=> (and true (diseqInt x_50247 x_50248) (times_26 x_50247 x_50205 y_1817) (times_26 x_50248 y_1817 x_50205)) false)))
(assert (forall ((x_50249 Int) (x_50250 Int) (x_50206 Int) (y_1818 Int))
	(=> (and true (diseqInt x_50249 x_50250) (plus_113 x_50249 x_50206 y_1818) (plus_113 x_50250 y_1818 x_50206)) false)))
(assert (forall ((x_50251 Int) (x_50252 Int) (x_50253 Int) (x_50254 Int) (x_50255 Int) (x_50207 Int) (y_1819 Int) (z_1624 Int))
	(=> (and true (diseqInt x_50252 x_50255) (plus_113 x_50251 y_1819 z_1624) (times_26 x_50252 x_50207 x_50251) (times_26 x_50253 x_50207 y_1819) (times_26 x_50254 x_50207 z_1624) (plus_113 x_50255 x_50253 x_50254)) false)))
(assert (forall ((x_50256 Int) (x_50257 Int) (x_50258 Int) (x_50259 Int) (x_50260 Int) (x_50208 Int) (y_1820 Int) (z_1625 Int))
	(=> (and true (diseqInt x_50257 x_50260) (plus_113 x_50256 x_50208 y_1820) (times_26 x_50257 x_50256 z_1625) (times_26 x_50258 x_50208 z_1625) (times_26 x_50259 y_1820 z_1625) (plus_113 x_50260 x_50258 x_50259)) false)))
(assert (forall ((x_50261 Int) (x_50209 Int))
	(=> (and true (diseqInt x_50261 x_50209) (times_26 x_50261 x_50209 (succ_113 zero_116))) false)))
(assert (forall ((x_50262 Int) (x_50210 Int))
	(=> (and true (diseqInt x_50262 x_50210) (times_26 x_50262 (succ_113 zero_116) x_50210)) false)))
(assert (forall ((x_50263 Int) (x_50211 Int))
	(=> (and true (diseqInt x_50263 x_50211) (plus_113 x_50263 x_50211 zero_116)) false)))
(assert (forall ((x_50264 Int) (x_50212 Int))
	(=> (and true (diseqInt x_50264 x_50212) (plus_113 x_50264 zero_116 x_50212)) false)))
(assert (forall ((x_50265 Int) (x_50213 Int))
	(=> (and true (diseqInt x_50265 zero_116) (times_26 x_50265 x_50213 zero_116)) false)))
(assert (forall ((x_50266 Int) (x_50214 Int))
	(=> (and true (diseqInt x_50266 zero_116) (times_26 x_50266 zero_116 x_50214)) false)))
(check-sat)
