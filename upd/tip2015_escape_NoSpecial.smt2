
(set-logic HORN)
(declare-datatypes ((Bool_177 0)) (((false_177) (true_177))))
(declare-fun diseqBool_76 (Bool_177 Bool_177) Bool)
(declare-fun isfalse_76 (Bool_177) Bool)
(declare-fun istrue_76 (Bool_177) Bool)
(assert (isfalse_76 false_177))
(assert (istrue_76 true_177))
(assert (diseqBool_76 false_177 true_177))
(assert (diseqBool_76 true_177 false_177))
(declare-fun and_177 (Bool_177 Bool_177 Bool_177) Bool)
(declare-fun or_179 (Bool_177 Bool_177 Bool_177) Bool)
(declare-fun hence_177 (Bool_177 Bool_177 Bool_177) Bool)
(declare-fun not_178 (Bool_177 Bool_177) Bool)
(assert (and_177 false_177 false_177 false_177))
(assert (and_177 false_177 true_177 false_177))
(assert (and_177 false_177 false_177 true_177))
(assert (and_177 true_177 true_177 true_177))
(assert (or_179 false_177 false_177 false_177))
(assert (or_179 true_177 true_177 false_177))
(assert (or_179 true_177 false_177 true_177))
(assert (or_179 true_177 true_177 true_177))
(assert (hence_177 true_177 false_177 false_177))
(assert (hence_177 false_177 true_177 false_177))
(assert (hence_177 true_177 false_177 true_177))
(assert (hence_177 true_177 true_177 true_177))
(assert (not_178 true_177 false_177))
(assert (not_178 false_177 true_177))
(declare-datatypes ((Token_0 0)) (((A_30) (B_21) (C_10) (D_2) (ESC_0) (P_163) (Q_54) (R_210))))
(declare-fun diseqToken_0 (Token_0 Token_0) Bool)
(declare-fun isA_2 (Token_0) Bool)
(declare-fun isB_2 (Token_0) Bool)
(declare-fun isC_2 (Token_0) Bool)
(declare-fun isD_0 (Token_0) Bool)
(declare-fun isESC_0 (Token_0) Bool)
(declare-fun isP_3 (Token_0) Bool)
(declare-fun isQ_0 (Token_0) Bool)
(declare-fun isR_0 (Token_0) Bool)
(assert (isA_2 A_30))
(assert (isB_2 B_21))
(assert (isC_2 C_10))
(assert (isD_0 D_2))
(assert (isESC_0 ESC_0))
(assert (isP_3 P_163))
(assert (isQ_0 Q_54))
(assert (isR_0 R_210))
(assert (diseqToken_0 A_30 B_21))
(assert (diseqToken_0 A_30 C_10))
(assert (diseqToken_0 A_30 D_2))
(assert (diseqToken_0 A_30 ESC_0))
(assert (diseqToken_0 A_30 P_163))
(assert (diseqToken_0 A_30 Q_54))
(assert (diseqToken_0 A_30 R_210))
(assert (diseqToken_0 B_21 A_30))
(assert (diseqToken_0 C_10 A_30))
(assert (diseqToken_0 D_2 A_30))
(assert (diseqToken_0 ESC_0 A_30))
(assert (diseqToken_0 P_163 A_30))
(assert (diseqToken_0 Q_54 A_30))
(assert (diseqToken_0 R_210 A_30))
(assert (diseqToken_0 B_21 C_10))
(assert (diseqToken_0 B_21 D_2))
(assert (diseqToken_0 B_21 ESC_0))
(assert (diseqToken_0 B_21 P_163))
(assert (diseqToken_0 B_21 Q_54))
(assert (diseqToken_0 B_21 R_210))
(assert (diseqToken_0 C_10 B_21))
(assert (diseqToken_0 D_2 B_21))
(assert (diseqToken_0 ESC_0 B_21))
(assert (diseqToken_0 P_163 B_21))
(assert (diseqToken_0 Q_54 B_21))
(assert (diseqToken_0 R_210 B_21))
(assert (diseqToken_0 C_10 D_2))
(assert (diseqToken_0 C_10 ESC_0))
(assert (diseqToken_0 C_10 P_163))
(assert (diseqToken_0 C_10 Q_54))
(assert (diseqToken_0 C_10 R_210))
(assert (diseqToken_0 D_2 C_10))
(assert (diseqToken_0 ESC_0 C_10))
(assert (diseqToken_0 P_163 C_10))
(assert (diseqToken_0 Q_54 C_10))
(assert (diseqToken_0 R_210 C_10))
(assert (diseqToken_0 D_2 ESC_0))
(assert (diseqToken_0 D_2 P_163))
(assert (diseqToken_0 D_2 Q_54))
(assert (diseqToken_0 D_2 R_210))
(assert (diseqToken_0 ESC_0 D_2))
(assert (diseqToken_0 P_163 D_2))
(assert (diseqToken_0 Q_54 D_2))
(assert (diseqToken_0 R_210 D_2))
(assert (diseqToken_0 ESC_0 P_163))
(assert (diseqToken_0 ESC_0 Q_54))
(assert (diseqToken_0 ESC_0 R_210))
(assert (diseqToken_0 P_163 ESC_0))
(assert (diseqToken_0 Q_54 ESC_0))
(assert (diseqToken_0 R_210 ESC_0))
(assert (diseqToken_0 P_163 Q_54))
(assert (diseqToken_0 P_163 R_210))
(assert (diseqToken_0 Q_54 P_163))
(assert (diseqToken_0 R_210 P_163))
(assert (diseqToken_0 Q_54 R_210))
(assert (diseqToken_0 R_210 Q_54))
(declare-datatypes ((list_125 0)) (((nil_139) (cons_125 (head_250 Token_0) (tail_250 list_125)))))
(declare-fun diseqlist_125 (list_125 list_125) Bool)
(declare-fun head_251 (Token_0 list_125) Bool)
(declare-fun tail_251 (list_125 list_125) Bool)
(declare-fun isnil_139 (list_125) Bool)
(declare-fun iscons_125 (list_125) Bool)
(assert (forall ((x_26663 Token_0) (x_26664 list_125))
	(head_251 x_26663 (cons_125 x_26663 x_26664))))
(assert (forall ((x_26663 Token_0) (x_26664 list_125))
	(tail_251 x_26664 (cons_125 x_26663 x_26664))))
(assert (isnil_139 nil_139))
(assert (forall ((x_26666 Token_0) (x_26667 list_125))
	(iscons_125 (cons_125 x_26666 x_26667))))
(assert (forall ((x_26668 Token_0) (x_26669 list_125))
	(diseqlist_125 nil_139 (cons_125 x_26668 x_26669))))
(assert (forall ((x_26670 Token_0) (x_26671 list_125))
	(diseqlist_125 (cons_125 x_26670 x_26671) nil_139)))
(assert (forall ((x_26672 Token_0) (x_26673 list_125) (x_26674 Token_0) (x_26675 list_125))
	(=> (diseqToken_0 x_26672 x_26674) (diseqlist_125 (cons_125 x_26672 x_26673) (cons_125 x_26674 x_26675)))))
(assert (forall ((x_26672 Token_0) (x_26673 list_125) (x_26674 Token_0) (x_26675 list_125))
	(=> (diseqlist_125 x_26673 x_26675) (diseqlist_125 (cons_125 x_26672 x_26673) (cons_125 x_26674 x_26675)))))
(declare-fun isSpecial_0 (Bool_177 Token_0) Bool)
(assert (isSpecial_0 true_177 R_210))
(assert (isSpecial_0 true_177 Q_54))
(assert (isSpecial_0 true_177 P_163))
(assert (isSpecial_0 true_177 ESC_0))
(assert (forall ((x_26591 Token_0))
	(isSpecial_0 false_177 A_30)))
(assert (forall ((x_26591 Token_0))
	(isSpecial_0 false_177 B_21)))
(assert (forall ((x_26591 Token_0))
	(isSpecial_0 false_177 C_10)))
(assert (forall ((x_26591 Token_0))
	(isSpecial_0 false_177 D_2)))
(declare-fun ok_0 (Bool_177 Token_0) Bool)
(assert (ok_0 true_177 ESC_0))
(assert (forall ((x_26607 Bool_177) (x_26608 Bool_177) (x_26593 Token_0))
	(=> (and (isSpecial_0 x_26608 A_30) (not_178 x_26607 x_26608)) (ok_0 x_26607 A_30))))
(assert (forall ((x_26609 Bool_177) (x_26610 Bool_177) (x_26593 Token_0))
	(=> (and (isSpecial_0 x_26610 B_21) (not_178 x_26609 x_26610)) (ok_0 x_26609 B_21))))
(assert (forall ((x_26611 Bool_177) (x_26612 Bool_177) (x_26593 Token_0))
	(=> (and (isSpecial_0 x_26612 C_10) (not_178 x_26611 x_26612)) (ok_0 x_26611 C_10))))
(assert (forall ((x_26613 Bool_177) (x_26614 Bool_177) (x_26593 Token_0))
	(=> (and (isSpecial_0 x_26614 D_2) (not_178 x_26613 x_26614)) (ok_0 x_26613 D_2))))
(assert (forall ((x_26615 Bool_177) (x_26616 Bool_177) (x_26593 Token_0))
	(=> (and (isSpecial_0 x_26616 P_163) (not_178 x_26615 x_26616)) (ok_0 x_26615 P_163))))
(assert (forall ((x_26617 Bool_177) (x_26618 Bool_177) (x_26593 Token_0))
	(=> (and (isSpecial_0 x_26618 Q_54) (not_178 x_26617 x_26618)) (ok_0 x_26617 Q_54))))
(assert (forall ((x_26619 Bool_177) (x_26620 Bool_177) (x_26593 Token_0))
	(=> (and (isSpecial_0 x_26620 R_210) (not_178 x_26619 x_26620)) (ok_0 x_26619 R_210))))
(declare-fun formula_1 (Bool_177 list_125) Bool)
(assert (forall ((x_26621 Bool_177) (x_26622 Bool_177) (x_26623 Bool_177) (y_1058 Token_0) (xs_335 list_125))
	(=> (and (ok_0 x_26622 y_1058) (formula_1 x_26623 xs_335) (and_177 x_26621 x_26622 x_26623)) (formula_1 x_26621 (cons_125 y_1058 xs_335)))))
(assert (formula_1 true_177 nil_139))
(declare-fun code_0 (Token_0 Token_0) Bool)
(assert (code_0 C_10 R_210))
(assert (code_0 B_21 Q_54))
(assert (code_0 A_30 P_163))
(assert (code_0 ESC_0 ESC_0))
(assert (forall ((x_26596 Token_0))
	(code_0 A_30 A_30)))
(assert (forall ((x_26596 Token_0))
	(code_0 B_21 B_21)))
(assert (forall ((x_26596 Token_0))
	(code_0 C_10 C_10)))
(assert (forall ((x_26596 Token_0))
	(code_0 D_2 D_2)))
(declare-fun escape_0 (list_125 list_125) Bool)
(assert (forall ((x_26635 Token_0) (x_26636 list_125) (y_1059 Token_0) (xs_336 list_125))
	(=> (and (code_0 x_26635 y_1059) (escape_0 x_26636 xs_336) (isSpecial_0 true_177 y_1059)) (escape_0 (cons_125 ESC_0 (cons_125 x_26635 x_26636)) (cons_125 y_1059 xs_336)))))
(assert (forall ((x_26639 list_125) (y_1059 Token_0) (xs_336 list_125))
	(=> (and (escape_0 x_26639 xs_336) (isSpecial_0 false_177 y_1059)) (escape_0 (cons_125 y_1059 x_26639) (cons_125 y_1059 xs_336)))))
(assert (escape_0 nil_139 nil_139))
(assert (forall ((x_26641 list_125) (xs_337 list_125))
	(=> (and true (escape_0 x_26641 xs_337) (formula_1 false_177 x_26641)) false)))
(check-sat)
