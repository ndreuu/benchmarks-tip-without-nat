
(set-logic HORN)
(declare-fun Z_2564 () Int)
(declare-fun S_595 (Int) Int)
(declare-fun diseqInt (Int Int) Bool)
(declare-fun unS_839 (Int Int) Bool)
(declare-fun isZ_542 (Int) Bool)
(declare-fun isS_542 (Int) Bool)
(assert (forall ((x_107717 Int))
	(unS_839 x_107717 (S_595 x_107717))))
(assert (isZ_542 Z_2564))
(assert (forall ((x_107719 Int))
	(isS_542 (S_595 x_107719))))
(assert (forall ((x_107720 Int))
	(diseqInt Z_2564 (S_595 x_107720))))
(assert (forall ((x_107721 Int))
	(diseqInt (S_595 x_107721) Z_2564)))
(assert (forall ((x_107722 Int) (x_107723 Int))
	(=> (diseqInt x_107722 x_107723) (diseqInt (S_595 x_107722) (S_595 x_107723)))))
(declare-fun add_449 (Int Int Int) Bool)
(declare-fun minus_440 (Int Int Int) Bool)
(declare-fun le_419 (Int Int) Bool)
(declare-fun ge_419 (Int Int) Bool)
(declare-fun lt_439 (Int Int) Bool)
(declare-fun gt_422 (Int Int) Bool)
(declare-fun mult_420 (Int Int Int) Bool)
(declare-fun div_419 (Int Int Int) Bool)
(declare-fun mod_421 (Int Int Int) Bool)
(assert (forall ((y_2949 Int))
	(add_449 y_2949 Z_2564 y_2949)))
(assert (forall ((x_107666 Int) (y_2949 Int) (r_594 Int))
	(=> (add_449 r_594 x_107666 y_2949) (add_449 (S_595 r_594) (S_595 x_107666) y_2949))))
(assert (forall ((y_2949 Int))
	(minus_440 Z_2564 Z_2564 y_2949)))
(assert (forall ((x_107666 Int) (y_2949 Int) (r_594 Int))
	(=> (minus_440 r_594 x_107666 y_2949) (minus_440 (S_595 r_594) (S_595 x_107666) y_2949))))
(assert (forall ((y_2949 Int))
	(le_419 Z_2564 y_2949)))
(assert (forall ((x_107666 Int) (y_2949 Int))
	(=> (le_419 x_107666 y_2949) (le_419 (S_595 x_107666) (S_595 y_2949)))))
(assert (forall ((y_2949 Int))
	(ge_419 y_2949 Z_2564)))
(assert (forall ((x_107666 Int) (y_2949 Int))
	(=> (ge_419 x_107666 y_2949) (ge_419 (S_595 x_107666) (S_595 y_2949)))))
(assert (forall ((y_2949 Int))
	(lt_439 Z_2564 (S_595 y_2949))))
(assert (forall ((x_107666 Int) (y_2949 Int))
	(=> (lt_439 x_107666 y_2949) (lt_439 (S_595 x_107666) (S_595 y_2949)))))
(assert (forall ((y_2949 Int))
	(gt_422 (S_595 y_2949) Z_2564)))
(assert (forall ((x_107666 Int) (y_2949 Int))
	(=> (gt_422 x_107666 y_2949) (gt_422 (S_595 x_107666) (S_595 y_2949)))))
(assert (forall ((y_2949 Int))
	(mult_420 Z_2564 Z_2564 y_2949)))
(assert (forall ((x_107666 Int) (y_2949 Int) (r_594 Int) (z_2565 Int))
	(=> (and (mult_420 r_594 x_107666 y_2949) (add_449 z_2565 r_594 y_2949)) (mult_420 z_2565 (S_595 x_107666) y_2949))))
(assert (forall ((x_107666 Int) (y_2949 Int))
	(=> (lt_439 x_107666 y_2949) (div_419 Z_2564 x_107666 y_2949))))
(assert (forall ((x_107666 Int) (y_2949 Int) (r_594 Int) (z_2565 Int))
	(=> (and (ge_419 x_107666 y_2949) (minus_440 z_2565 x_107666 y_2949) (div_419 r_594 z_2565 y_2949)) (div_419 (S_595 r_594) x_107666 y_2949))))
(assert (forall ((x_107666 Int) (y_2949 Int))
	(=> (lt_439 x_107666 y_2949) (mod_421 x_107666 x_107666 y_2949))))
(assert (forall ((x_107666 Int) (y_2949 Int) (r_594 Int) (z_2565 Int))
	(=> (and (ge_419 x_107666 y_2949) (minus_440 z_2565 x_107666 y_2949) (mod_421 r_594 z_2565 y_2949)) (mod_421 r_594 x_107666 y_2949))))
(declare-datatypes ((Bool_419 0)) (((false_419) (true_419))))
(declare-fun diseqBool_205 (Bool_419 Bool_419) Bool)
(declare-fun isfalse_205 (Bool_419) Bool)
(declare-fun istrue_205 (Bool_419) Bool)
(assert (isfalse_205 false_419))
(assert (istrue_205 true_419))
(assert (diseqBool_205 false_419 true_419))
(assert (diseqBool_205 true_419 false_419))
(declare-fun and_424 (Bool_419 Bool_419 Bool_419) Bool)
(declare-fun or_434 (Bool_419 Bool_419 Bool_419) Bool)
(declare-fun hence_419 (Bool_419 Bool_419 Bool_419) Bool)
(declare-fun not_424 (Bool_419 Bool_419) Bool)
(assert (and_424 false_419 false_419 false_419))
(assert (and_424 false_419 true_419 false_419))
(assert (and_424 false_419 false_419 true_419))
(assert (and_424 true_419 true_419 true_419))
(assert (or_434 false_419 false_419 false_419))
(assert (or_434 true_419 true_419 false_419))
(assert (or_434 true_419 false_419 true_419))
(assert (or_434 true_419 true_419 true_419))
(assert (hence_419 true_419 false_419 false_419))
(assert (hence_419 false_419 true_419 false_419))
(assert (hence_419 true_419 false_419 true_419))
(assert (hence_419 true_419 true_419 true_419))
(assert (not_424 true_419 false_419))
(assert (not_424 false_419 true_419))
(declare-datatypes ((pair_162 0)) (((pair_163 (projpair_324 Int) (projpair_325 Int)))))
(declare-fun diseqpair_81 (pair_162 pair_162) Bool)
(declare-fun projpair_326 (Int pair_162) Bool)
(declare-fun projpair_327 (Int pair_162) Bool)
(declare-fun ispair_81 (pair_162) Bool)
(assert (forall ((x_107726 Int) (x_107727 Int))
	(projpair_326 x_107726 (pair_163 x_107726 x_107727))))
(assert (forall ((x_107726 Int) (x_107727 Int))
	(projpair_327 x_107727 (pair_163 x_107726 x_107727))))
(assert (forall ((x_107729 Int) (x_107730 Int))
	(ispair_81 (pair_163 x_107729 x_107730))))
(assert (forall ((x_107731 Int) (x_107732 Int) (x_107733 Int) (x_107734 Int))
	(=> (diseqInt x_107731 x_107733) (diseqpair_81 (pair_163 x_107731 x_107732) (pair_163 x_107733 x_107734)))))
(assert (forall ((x_107731 Int) (x_107732 Int) (x_107733 Int) (x_107734 Int))
	(=> (diseqInt x_107732 x_107734) (diseqpair_81 (pair_163 x_107731 x_107732) (pair_163 x_107733 x_107734)))))
(declare-datatypes ((list_355 0)) (((nil_406) (cons_350 (head_700 Bool_419) (tail_705 list_355)))))
(declare-fun diseqlist_350 (list_355 list_355) Bool)
(declare-fun head_703 (Bool_419 list_355) Bool)
(declare-fun tail_708 (list_355 list_355) Bool)
(declare-fun isnil_406 (list_355) Bool)
(declare-fun iscons_350 (list_355) Bool)
(assert (forall ((x_107736 Bool_419) (x_107737 list_355))
	(head_703 x_107736 (cons_350 x_107736 x_107737))))
(assert (forall ((x_107736 Bool_419) (x_107737 list_355))
	(tail_708 x_107737 (cons_350 x_107736 x_107737))))
(assert (isnil_406 nil_406))
(assert (forall ((x_107739 Bool_419) (x_107740 list_355))
	(iscons_350 (cons_350 x_107739 x_107740))))
(assert (forall ((x_107741 Bool_419) (x_107742 list_355))
	(diseqlist_350 nil_406 (cons_350 x_107741 x_107742))))
(assert (forall ((x_107743 Bool_419) (x_107744 list_355))
	(diseqlist_350 (cons_350 x_107743 x_107744) nil_406)))
(assert (forall ((x_107745 Bool_419) (x_107746 list_355) (x_107747 Bool_419) (x_107748 list_355))
	(=> (diseqBool_205 x_107745 x_107747) (diseqlist_350 (cons_350 x_107745 x_107746) (cons_350 x_107747 x_107748)))))
(assert (forall ((x_107745 Bool_419) (x_107746 list_355) (x_107747 Bool_419) (x_107748 list_355))
	(=> (diseqlist_350 x_107746 x_107748) (diseqlist_350 (cons_350 x_107745 x_107746) (cons_350 x_107747 x_107748)))))
(declare-datatypes ((list_356 0)) (((nil_407) (cons_351 (head_701 Int) (tail_706 list_356)))))
(declare-fun diseqlist_351 (list_356 list_356) Bool)
(declare-fun head_704 (Int list_356) Bool)
(declare-fun tail_709 (list_356 list_356) Bool)
(declare-fun isnil_407 (list_356) Bool)
(declare-fun iscons_351 (list_356) Bool)
(assert (forall ((x_107750 Int) (x_107751 list_356))
	(head_704 x_107750 (cons_351 x_107750 x_107751))))
(assert (forall ((x_107750 Int) (x_107751 list_356))
	(tail_709 x_107751 (cons_351 x_107750 x_107751))))
(assert (isnil_407 nil_407))
(assert (forall ((x_107753 Int) (x_107754 list_356))
	(iscons_351 (cons_351 x_107753 x_107754))))
(assert (forall ((x_107755 Int) (x_107756 list_356))
	(diseqlist_351 nil_407 (cons_351 x_107755 x_107756))))
(assert (forall ((x_107757 Int) (x_107758 list_356))
	(diseqlist_351 (cons_351 x_107757 x_107758) nil_407)))
(assert (forall ((x_107759 Int) (x_107760 list_356) (x_107761 Int) (x_107762 list_356))
	(=> (diseqInt x_107759 x_107761) (diseqlist_351 (cons_351 x_107759 x_107760) (cons_351 x_107761 x_107762)))))
(assert (forall ((x_107759 Int) (x_107760 list_356) (x_107761 Int) (x_107762 list_356))
	(=> (diseqlist_351 x_107760 x_107762) (diseqlist_351 (cons_351 x_107759 x_107760) (cons_351 x_107761 x_107762)))))
(declare-datatypes ((list_357 0)) (((nil_408) (cons_352 (head_702 pair_162) (tail_707 list_357)))))
(declare-fun diseqlist_352 (list_357 list_357) Bool)
(declare-fun head_705 (pair_162 list_357) Bool)
(declare-fun tail_710 (list_357 list_357) Bool)
(declare-fun isnil_408 (list_357) Bool)
(declare-fun iscons_352 (list_357) Bool)
(assert (forall ((x_107764 pair_162) (x_107765 list_357))
	(head_705 x_107764 (cons_352 x_107764 x_107765))))
(assert (forall ((x_107764 pair_162) (x_107765 list_357))
	(tail_710 x_107765 (cons_352 x_107764 x_107765))))
(assert (isnil_408 nil_408))
(assert (forall ((x_107767 pair_162) (x_107768 list_357))
	(iscons_352 (cons_352 x_107767 x_107768))))
(assert (forall ((x_107769 pair_162) (x_107770 list_357))
	(diseqlist_352 nil_408 (cons_352 x_107769 x_107770))))
(assert (forall ((x_107771 pair_162) (x_107772 list_357))
	(diseqlist_352 (cons_352 x_107771 x_107772) nil_408)))
(assert (forall ((x_107773 pair_162) (x_107774 list_357) (x_107775 pair_162) (x_107776 list_357))
	(=> (diseqpair_81 x_107773 x_107775) (diseqlist_352 (cons_352 x_107773 x_107774) (cons_352 x_107775 x_107776)))))
(assert (forall ((x_107773 pair_162) (x_107774 list_357) (x_107775 pair_162) (x_107776 list_357))
	(=> (diseqlist_352 x_107774 x_107776) (diseqlist_352 (cons_352 x_107773 x_107774) (cons_352 x_107775 x_107776)))))
(declare-datatypes ((Maybe_18 0)) (((Nothing_18) (Just_18 (projJust_36 Int)))))
(declare-fun diseqMaybe_18 (Maybe_18 Maybe_18) Bool)
(declare-fun projJust_37 (Int Maybe_18) Bool)
(declare-fun isNothing_18 (Maybe_18) Bool)
(declare-fun isJust_18 (Maybe_18) Bool)
(assert (forall ((x_107778 Int))
	(projJust_37 x_107778 (Just_18 x_107778))))
(assert (isNothing_18 Nothing_18))
(assert (forall ((x_107780 Int))
	(isJust_18 (Just_18 x_107780))))
(assert (forall ((x_107781 Int))
	(diseqMaybe_18 Nothing_18 (Just_18 x_107781))))
(assert (forall ((x_107782 Int))
	(diseqMaybe_18 (Just_18 x_107782) Nothing_18)))
(assert (forall ((x_107783 Int) (x_107784 Int))
	(=> (diseqInt x_107783 x_107784) (diseqMaybe_18 (Just_18 x_107783) (Just_18 x_107784)))))
(declare-fun primEnumFromTo_8 (list_356 Int Int) Bool)
(assert (forall ((x_107551 Int) (y_2936 Int))
	(=> (gt_422 x_107551 y_2936) (primEnumFromTo_8 nil_407 x_107551 y_2936))))
(assert (forall ((x_107667 Int) (x_107573 list_356) (x_107551 Int) (y_2936 Int))
	(=> (and (le_419 x_107551 y_2936) (primEnumFromTo_8 x_107573 x_107667 y_2936) (add_449 x_107667 (S_595 Z_2564) x_107551)) (primEnumFromTo_8 (cons_351 x_107551 x_107573) x_107551 y_2936))))
(declare-fun index_4 (Maybe_18 list_356 Int) Bool)
(assert (forall ((z_2554 Int) (xs_840 list_356))
	(index_4 (Just_18 z_2554) (cons_351 z_2554 xs_840) Z_2564)))
(assert (forall ((x_107668 Int) (x_107575 Maybe_18) (z_2554 Int) (xs_840 list_356) (y_2937 Int))
	(=> (and (diseqInt y_2937 Z_2564) (index_4 x_107575 xs_840 x_107668) (minus_440 x_107668 y_2937 (S_595 Z_2564))) (index_4 x_107575 (cons_351 z_2554 xs_840) y_2937))))
(assert (forall ((y_2937 Int))
	(index_4 Nothing_18 nil_407 y_2937)))
(declare-fun formula_8 (list_355 list_356) Bool)
(assert (forall ((x_107579 list_355) (y_2938 Int) (z_2555 list_356))
	(=> (and (lt_439 y_2938 (S_595 (S_595 (S_595 Z_2564)))) (formula_8 x_107579 z_2555)) (formula_8 (cons_350 true_419 x_107579) (cons_351 y_2938 z_2555)))))
(assert (forall ((x_107581 list_355) (y_2938 Int) (z_2555 list_356))
	(=> (and (ge_419 y_2938 (S_595 (S_595 (S_595 Z_2564)))) (formula_8 x_107581 z_2555)) (formula_8 (cons_350 false_419 x_107581) (cons_351 y_2938 z_2555)))))
(assert (formula_8 nil_406 nil_407))
(declare-fun dodeca_21 (list_357 Int list_356) Bool)
(assert (forall ((x_107669 Int) (x_107670 Int) (x_107671 Int) (x_107672 Int) (x_107673 Int) (x_107674 Int) (x_107675 Int) (x_107584 list_357) (z_2556 Int) (x_107555 list_356) (x_107554 Int))
	(=> (and (dodeca_21 x_107584 x_107554 x_107555) (add_449 x_107669 x_107554 x_107554) (add_449 x_107670 x_107669 x_107554) (add_449 x_107671 x_107670 z_2556) (add_449 x_107672 x_107554 x_107554) (add_449 x_107673 x_107672 x_107554) (add_449 x_107674 (S_595 Z_2564) z_2556) (add_449 x_107675 x_107673 x_107674)) (dodeca_21 (cons_352 (pair_163 x_107671 x_107675) x_107584) x_107554 (cons_351 z_2556 x_107555)))))
(assert (forall ((x_107554 Int))
	(dodeca_21 nil_408 x_107554 nil_407)))
(declare-fun dodeca_22 (list_357 Int list_356) Bool)
(assert (forall ((x_107676 Int) (x_107677 Int) (x_107678 Int) (x_107679 Int) (x_107680 Int) (x_107587 list_357) (z_2557 Int) (x_107557 list_356) (x_107556 Int))
	(=> (and (dodeca_22 x_107587 x_107556 x_107557) (add_449 x_107676 x_107556 x_107556) (add_449 x_107677 x_107676 z_2557) (add_449 x_107678 x_107556 x_107556) (add_449 x_107679 x_107678 x_107556) (add_449 x_107680 x_107679 z_2557)) (dodeca_22 (cons_352 (pair_163 x_107677 x_107680) x_107587) x_107556 (cons_351 z_2557 x_107557)))))
(assert (forall ((x_107556 Int))
	(dodeca_22 nil_408 x_107556 nil_407)))
(declare-fun dodeca_23 (list_357 Int list_356) Bool)
(assert (forall ((x_107681 Int) (x_107682 Int) (x_107683 Int) (x_107684 Int) (x_107590 list_357) (z_2558 Int) (x_107559 list_356) (x_107558 Int))
	(=> (and (dodeca_23 x_107590 x_107558 x_107559) (add_449 x_107681 (S_595 Z_2564) z_2558) (add_449 x_107682 x_107558 x_107681) (add_449 x_107683 x_107558 x_107558) (add_449 x_107684 x_107683 z_2558)) (dodeca_23 (cons_352 (pair_163 x_107682 x_107684) x_107590) x_107558 (cons_351 z_2558 x_107559)))))
(assert (forall ((x_107558 Int))
	(dodeca_23 nil_408 x_107558 nil_407)))
(declare-fun dodeca_24 (list_357 Int list_356) Bool)
(assert (forall ((x_107685 Int) (x_107686 Int) (x_107687 Int) (x_107593 list_357) (z_2559 Int) (x_107561 list_356) (x_107560 Int))
	(=> (and (dodeca_24 x_107593 x_107560 x_107561) (add_449 x_107685 x_107560 z_2559) (add_449 x_107686 x_107560 x_107560) (add_449 x_107687 x_107686 z_2559)) (dodeca_24 (cons_352 (pair_163 x_107685 x_107687) x_107593) x_107560 (cons_351 z_2559 x_107561)))))
(assert (forall ((x_107560 Int))
	(dodeca_24 nil_408 x_107560 nil_407)))
(declare-fun dodeca_25 (list_357 Int list_356) Bool)
(assert (forall ((x_107688 Int) (x_107596 list_357) (z_2560 Int) (x_107563 list_356) (x_107562 Int))
	(=> (and (dodeca_25 x_107596 x_107562 x_107563) (add_449 x_107688 x_107562 z_2560)) (dodeca_25 (cons_352 (pair_163 z_2560 x_107688) x_107596) x_107562 (cons_351 z_2560 x_107563)))))
(assert (forall ((x_107562 Int))
	(dodeca_25 nil_408 x_107562 nil_407)))
(declare-fun dodeca_26 (list_357 list_356) Bool)
(assert (forall ((x_107689 Int) (x_107599 list_357) (y_2944 Int) (z_2561 list_356))
	(=> (and (dodeca_26 x_107599 z_2561) (add_449 x_107689 (S_595 Z_2564) y_2944)) (dodeca_26 (cons_352 (pair_163 y_2944 x_107689) x_107599) (cons_351 y_2944 z_2561)))))
(assert (dodeca_26 nil_408 nil_407))
(declare-fun colouring_8 (list_355 list_356 list_357) Bool)
(assert (forall ((x_107604 list_355) (c_61 Int) (u_20 Int) (v_20 Int) (z_2562 list_357) (a_106 list_356))
	(=> (and (colouring_8 x_107604 a_106 z_2562) (index_4 (Just_18 c_61) a_106 v_20) (index_4 (Just_18 c_61) a_106 u_20)) (colouring_8 (cons_350 false_419 x_107604) a_106 (cons_352 (pair_163 u_20 v_20) z_2562)))))
(assert (forall ((x_107608 list_355) (c_62 Int) (c_61 Int) (u_20 Int) (v_20 Int) (z_2562 list_357) (a_106 list_356))
	(=> (and (diseqInt c_61 c_62) (colouring_8 x_107608 a_106 z_2562) (index_4 (Just_18 c_62) a_106 v_20) (index_4 (Just_18 c_61) a_106 u_20)) (colouring_8 (cons_350 true_419 x_107608) a_106 (cons_352 (pair_163 u_20 v_20) z_2562)))))
(assert (forall ((x_107612 list_355) (c_61 Int) (u_20 Int) (v_20 Int) (z_2562 list_357) (a_106 list_356))
	(=> (and (colouring_8 x_107612 a_106 z_2562) (index_4 Nothing_18 a_106 v_20) (index_4 (Just_18 c_61) a_106 u_20)) (colouring_8 (cons_350 false_419 x_107612) a_106 (cons_352 (pair_163 u_20 v_20) z_2562)))))
(assert (forall ((x_107615 list_355) (u_20 Int) (v_20 Int) (z_2562 list_357) (a_106 list_356))
	(=> (and (colouring_8 x_107615 a_106 z_2562) (index_4 Nothing_18 a_106 u_20)) (colouring_8 (cons_350 false_419 x_107615) a_106 (cons_352 (pair_163 u_20 v_20) z_2562)))))
(assert (forall ((a_106 list_356))
	(colouring_8 nil_406 a_106 nil_408)))
(declare-fun and_423 (Bool_419 list_355) Bool)
(assert (forall ((x_107617 Bool_419) (x_107618 Bool_419) (y_2946 Bool_419) (xs_841 list_355))
	(=> (and (and_423 x_107618 xs_841) (and_424 x_107617 y_2946 x_107618)) (and_423 x_107617 (cons_350 y_2946 xs_841)))))
(assert (and_423 true_419 nil_406))
(declare-fun colouring_9 (Bool_419 list_357 list_356) Bool)
(assert (forall ((x_107620 Bool_419) (x_107621 list_355) (x_107567 list_357) (y_2947 list_356))
	(=> (and (colouring_8 x_107621 y_2947 x_107567) (and_423 x_107620 x_107621)) (colouring_9 x_107620 x_107567 y_2947))))
(declare-fun x_107568 (list_357 list_357 list_357) Bool)
(assert (forall ((x_107624 list_357) (z_2563 pair_162) (xs_842 list_357) (y_2948 list_357))
	(=> (x_107568 x_107624 xs_842 y_2948) (x_107568 (cons_352 z_2563 x_107624) (cons_352 z_2563 xs_842) y_2948))))
(assert (forall ((x_107625 list_357))
	(x_107568 x_107625 nil_408 x_107625)))
(declare-fun dodeca_27 (list_357 Int) Bool)
(assert (dodeca_27 nil_408 Z_2564))
(assert (forall ((x_107702 Int) (x_107699 Int) (x_107700 Int) (x_107701 Int) (x_107693 Int) (x_107694 Int) (x_107695 Int) (x_107696 Int) (x_107697 Int) (x_107698 Int) (x_107692 Int) (x_107691 Int) (x_107690 Int) (x_107627 list_357) (x_107628 list_356) (x_107629 list_357) (x_107630 list_356) (x_107631 list_357) (x_107632 list_356) (x_107633 list_357) (x_107634 list_356) (x_107635 list_357) (x_107636 list_356) (x_107637 list_357) (x_107638 list_356) (x_107639 list_357) (x_107640 list_357) (x_107641 list_357) (x_107642 list_357) (x_107643 list_357) (x_107570 Int))
	(=> (and (diseqInt x_107570 Z_2564) (primEnumFromTo_8 x_107628 Z_2564 x_107690) (dodeca_26 x_107629 x_107628) (primEnumFromTo_8 x_107630 Z_2564 x_107570) (dodeca_25 x_107631 x_107570 x_107630) (primEnumFromTo_8 x_107632 Z_2564 x_107570) (dodeca_24 x_107633 x_107570 x_107632) (primEnumFromTo_8 x_107634 Z_2564 x_107691) (dodeca_23 x_107635 x_107570 x_107634) (primEnumFromTo_8 x_107636 Z_2564 x_107570) (dodeca_22 x_107637 x_107570 x_107636) (primEnumFromTo_8 x_107638 Z_2564 x_107692) (dodeca_21 x_107639 x_107570 x_107638) (x_107568 x_107640 x_107637 (cons_352 (pair_163 x_107696 x_107698) x_107639)) (x_107568 x_107641 (cons_352 (pair_163 x_107570 x_107701) x_107635) x_107640) (x_107568 x_107642 x_107633 x_107641) (x_107568 x_107643 x_107631 x_107642) (x_107568 x_107627 (cons_352 (pair_163 x_107702 Z_2564) x_107629) x_107643) (minus_440 x_107702 x_107570 (S_595 Z_2564)) (add_449 x_107699 x_107570 x_107570) (minus_440 x_107700 x_107570 (S_595 Z_2564)) (add_449 x_107701 x_107699 x_107700) (add_449 x_107693 x_107570 x_107570) (add_449 x_107694 x_107693 x_107570) (minus_440 x_107695 x_107570 (S_595 Z_2564)) (add_449 x_107696 x_107694 x_107695) (add_449 x_107697 x_107570 x_107570) (add_449 x_107698 x_107697 x_107570) (minus_440 x_107692 x_107570 (S_595 Z_2564)) (minus_440 x_107691 x_107570 (S_595 Z_2564)) (minus_440 x_107690 x_107570 (S_595 Z_2564))) (dodeca_27 x_107627 x_107570))))
(assert (forall ((x_107715 Int) (x_107712 Int) (x_107713 Int) (x_107714 Int) (x_107706 Int) (x_107707 Int) (x_107708 Int) (x_107709 Int) (x_107710 Int) (x_107711 Int) (x_107705 Int) (x_107704 Int) (x_107703 Int) (x_107663 list_355) (x_107645 list_356) (x_107646 list_357) (x_107647 list_356) (x_107648 list_357) (x_107649 list_356) (x_107650 list_357) (x_107651 list_356) (x_107652 list_357) (x_107653 list_356) (x_107654 list_357) (x_107655 list_356) (x_107656 list_357) (x_107657 list_357) (x_107658 list_357) (x_107659 list_357) (x_107660 list_357) (x_107661 list_357) (a_107 list_356))
	(=> (and true true (formula_8 x_107663 a_107) (and_423 true_419 x_107663) (primEnumFromTo_8 x_107645 Z_2564 x_107703) (dodeca_26 x_107646 x_107645) (primEnumFromTo_8 x_107647 Z_2564 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 Z_2564)))))))) (dodeca_25 x_107648 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 Z_2564))))))) x_107647) (primEnumFromTo_8 x_107649 Z_2564 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 Z_2564)))))))) (dodeca_24 x_107650 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 Z_2564))))))) x_107649) (primEnumFromTo_8 x_107651 Z_2564 x_107704) (dodeca_23 x_107652 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 Z_2564))))))) x_107651) (primEnumFromTo_8 x_107653 Z_2564 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 Z_2564)))))))) (dodeca_22 x_107654 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 Z_2564))))))) x_107653) (primEnumFromTo_8 x_107655 Z_2564 x_107705) (dodeca_21 x_107656 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 Z_2564))))))) x_107655) (x_107568 x_107657 x_107654 (cons_352 (pair_163 x_107709 x_107711) x_107656)) (x_107568 x_107658 (cons_352 (pair_163 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 Z_2564))))))) x_107714) x_107652) x_107657) (x_107568 x_107659 x_107650 x_107658) (x_107568 x_107660 x_107648 x_107659) (x_107568 x_107661 (cons_352 (pair_163 x_107715 Z_2564) x_107646) x_107660) (colouring_9 true_419 x_107661 a_107) (minus_440 x_107715 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 Z_2564))))))) (S_595 Z_2564)) (add_449 x_107712 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 Z_2564))))))) (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 Z_2564)))))))) (minus_440 x_107713 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 Z_2564))))))) (S_595 Z_2564)) (add_449 x_107714 x_107712 x_107713) (add_449 x_107706 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 Z_2564))))))) (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 Z_2564)))))))) (add_449 x_107707 x_107706 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 Z_2564)))))))) (minus_440 x_107708 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 Z_2564))))))) (S_595 Z_2564)) (add_449 x_107709 x_107707 x_107708) (add_449 x_107710 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 Z_2564))))))) (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 Z_2564)))))))) (add_449 x_107711 x_107710 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 Z_2564)))))))) (minus_440 x_107705 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 Z_2564))))))) (S_595 Z_2564)) (minus_440 x_107704 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 Z_2564))))))) (S_595 Z_2564)) (minus_440 x_107703 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 (S_595 Z_2564))))))) (S_595 Z_2564))) false)))
(check-sat)
