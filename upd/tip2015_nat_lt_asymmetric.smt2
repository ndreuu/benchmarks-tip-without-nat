
(set-logic HORN)
(define-fun zero_54 () Int 0)
(define-fun succ_53 ((x Int)) Int (+ x 1))
(declare-datatypes ((Bool_168 0)) (((false_168) (true_168))))
(declare-fun diseqBool_71 (Bool_168 Bool_168) Bool)
(declare-fun isfalse_71 (Bool_168) Bool)
(declare-fun istrue_71 (Bool_168) Bool)
(assert (isfalse_71 false_168))
(assert (istrue_71 true_168))
(assert (diseqBool_71 false_168 true_168))
(assert (diseqBool_71 true_168 false_168))
(declare-fun and_168 (Bool_168 Bool_168 Bool_168) Bool)
(declare-fun or_170 (Bool_168 Bool_168 Bool_168) Bool)
(declare-fun hence_168 (Bool_168 Bool_168 Bool_168) Bool)
(declare-fun not_169 (Bool_168 Bool_168) Bool)
(assert (and_168 false_168 false_168 false_168))
(assert (and_168 false_168 true_168 false_168))
(assert (and_168 false_168 false_168 true_168))
(assert (and_168 true_168 true_168 true_168))
(assert (or_170 false_168 false_168 false_168))
(assert (or_170 true_168 true_168 false_168))
(assert (or_170 true_168 false_168 true_168))
(assert (or_170 true_168 true_168 true_168))
(assert (hence_168 true_168 false_168 false_168))
(assert (hence_168 false_168 true_168 false_168))
(assert (hence_168 true_168 false_168 true_168))
(assert (hence_168 true_168 true_168 true_168))
(assert (not_169 true_168 false_168))
(assert (not_169 false_168 true_168))
(declare-fun diseqInt (Int Int) Bool)
(declare-fun p_151 (Int Int) Bool)
(declare-fun iszero_53 (Int) Bool)
(declare-fun issucc_53 (Int) Bool)
(assert (forall ((x_25820 Int))
	(p_151 x_25820 (succ_53 x_25820))))
(assert (iszero_53 zero_54))
(assert (forall ((x_25822 Int))
	(issucc_53 (succ_53 x_25822))))
(assert (forall ((x_25823 Int))
	(diseqInt zero_54 (succ_53 x_25823))))
(assert (forall ((x_25824 Int))
	(diseqInt (succ_53 x_25824) zero_54)))
(assert (forall ((x_25825 Int) (x_25826 Int))
	(=> (diseqInt x_25825 x_25826) (diseqInt (succ_53 x_25825) (succ_53 x_25826)))))
(declare-fun lt_175 (Bool_168 Int Int) Bool)
(assert (forall ((x_25810 Bool_168) (n_56 Int) (z_958 Int))
	(=> (lt_175 x_25810 n_56 z_958) (lt_175 x_25810 (succ_53 n_56) (succ_53 z_958)))))
(assert (forall ((z_958 Int))
	(lt_175 true_168 zero_54 (succ_53 z_958))))
(assert (forall ((x_25808 Int))
	(lt_175 false_168 x_25808 zero_54)))
(assert (forall ((x_25809 Int) (y_988 Int))
	(=> (and true (lt_175 true_168 x_25809 y_988) (lt_175 true_168 y_988 x_25809)) false)))
(check-sat)
