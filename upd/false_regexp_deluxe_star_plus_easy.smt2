
(set-logic HORN)
(declare-datatypes ((Bool_416 0)) (((false_416) (true_416))))
(declare-fun diseqBool_202 (Bool_416 Bool_416) Bool)
(declare-fun isfalse_202 (Bool_416) Bool)
(declare-fun istrue_202 (Bool_416) Bool)
(assert (isfalse_202 false_416))
(assert (istrue_202 true_416))
(assert (diseqBool_202 false_416 true_416))
(assert (diseqBool_202 true_416 false_416))
(declare-fun and_420 (Bool_416 Bool_416 Bool_416) Bool)
(declare-fun or_430 (Bool_416 Bool_416 Bool_416) Bool)
(declare-fun hence_416 (Bool_416 Bool_416 Bool_416) Bool)
(declare-fun not_421 (Bool_416 Bool_416) Bool)
(assert (and_420 false_416 false_416 false_416))
(assert (and_420 false_416 true_416 false_416))
(assert (and_420 false_416 false_416 true_416))
(assert (and_420 true_416 true_416 true_416))
(assert (or_430 false_416 false_416 false_416))
(assert (or_430 true_416 true_416 false_416))
(assert (or_430 true_416 false_416 true_416))
(assert (or_430 true_416 true_416 true_416))
(assert (hence_416 true_416 false_416 false_416))
(assert (hence_416 false_416 true_416 false_416))
(assert (hence_416 true_416 false_416 true_416))
(assert (hence_416 true_416 true_416 true_416))
(assert (not_421 true_416 false_416))
(assert (not_421 false_416 true_416))
(declare-datatypes ((T_25 0)) (((A_103) (B_106) (C_58))))
(declare-fun diseqT_24 (T_25 T_25) Bool)
(declare-fun isA_31 (T_25) Bool)
(declare-fun isB_31 (T_25) Bool)
(declare-fun isC_32 (T_25) Bool)
(assert (isA_31 A_103))
(assert (isB_31 B_106))
(assert (isC_32 C_58))
(assert (diseqT_24 A_103 B_106))
(assert (diseqT_24 A_103 C_58))
(assert (diseqT_24 B_106 A_103))
(assert (diseqT_24 C_58 A_103))
(assert (diseqT_24 B_106 C_58))
(assert (diseqT_24 C_58 B_106))
(declare-datatypes ((list_351 0)) (((nil_400) (cons_346 (head_692 T_25) (tail_697 list_351)))))
(declare-fun diseqlist_346 (list_351 list_351) Bool)
(declare-fun head_693 (T_25 list_351) Bool)
(declare-fun tail_698 (list_351 list_351) Bool)
(declare-fun isnil_400 (list_351) Bool)
(declare-fun iscons_346 (list_351) Bool)
(assert (forall ((x_106196 T_25) (x_106197 list_351))
	(head_693 x_106196 (cons_346 x_106196 x_106197))))
(assert (forall ((x_106196 T_25) (x_106197 list_351))
	(tail_698 x_106197 (cons_346 x_106196 x_106197))))
(assert (isnil_400 nil_400))
(assert (forall ((x_106199 T_25) (x_106200 list_351))
	(iscons_346 (cons_346 x_106199 x_106200))))
(assert (forall ((x_106201 T_25) (x_106202 list_351))
	(diseqlist_346 nil_400 (cons_346 x_106201 x_106202))))
(assert (forall ((x_106203 T_25) (x_106204 list_351))
	(diseqlist_346 (cons_346 x_106203 x_106204) nil_400)))
(assert (forall ((x_106205 T_25) (x_106206 list_351) (x_106207 T_25) (x_106208 list_351))
	(=> (diseqT_24 x_106205 x_106207) (diseqlist_346 (cons_346 x_106205 x_106206) (cons_346 x_106207 x_106208)))))
(assert (forall ((x_106205 T_25) (x_106206 list_351) (x_106207 T_25) (x_106208 list_351))
	(=> (diseqlist_346 x_106206 x_106208) (diseqlist_346 (cons_346 x_106205 x_106206) (cons_346 x_106207 x_106208)))))
(declare-datatypes ((R_578 0)) (((Nil_401) (Eps_76) (Atom_38 (projAtom_76 T_25)) (x_101789 (proj_252 R_578) (proj_253 R_578)) (x_101790 (proj_254 R_578) (proj_255 R_578)) (x_101791 (proj_256 R_578) (proj_257 R_578)) (Star_38 (projStar_76 R_578)))))
(declare-fun diseqR_38 (R_578 R_578) Bool)
(declare-fun projAtom_77 (T_25 R_578) Bool)
(declare-fun proj_258 (R_578 R_578) Bool)
(declare-fun proj_259 (R_578 R_578) Bool)
(declare-fun proj_260 (R_578 R_578) Bool)
(declare-fun proj_261 (R_578 R_578) Bool)
(declare-fun proj_262 (R_578 R_578) Bool)
(declare-fun proj_263 (R_578 R_578) Bool)
(declare-fun projStar_77 (R_578 R_578) Bool)
(declare-fun isNil_401 (R_578) Bool)
(declare-fun isEps_38 (R_578) Bool)
(declare-fun isAtom_38 (R_578) Bool)
(declare-fun isx_78 (R_578) Bool)
(declare-fun isx_79 (R_578) Bool)
(declare-fun isx_80 (R_578) Bool)
(declare-fun isStar_38 (R_578) Bool)
(assert (forall ((x_106211 T_25))
	(projAtom_77 x_106211 (Atom_38 x_106211))))
(assert (forall ((x_106213 R_578) (x_106214 R_578))
	(proj_258 x_106213 (x_101789 x_106213 x_106214))))
(assert (forall ((x_106213 R_578) (x_106214 R_578))
	(proj_259 x_106214 (x_101789 x_106213 x_106214))))
(assert (forall ((x_106216 R_578) (x_106217 R_578))
	(proj_260 x_106216 (x_101790 x_106216 x_106217))))
(assert (forall ((x_106216 R_578) (x_106217 R_578))
	(proj_261 x_106217 (x_101790 x_106216 x_106217))))
(assert (forall ((x_106219 R_578) (x_106220 R_578))
	(proj_262 x_106219 (x_101791 x_106219 x_106220))))
(assert (forall ((x_106219 R_578) (x_106220 R_578))
	(proj_263 x_106220 (x_101791 x_106219 x_106220))))
(assert (forall ((x_106222 R_578))
	(projStar_77 x_106222 (Star_38 x_106222))))
(assert (isNil_401 Nil_401))
(assert (isEps_38 Eps_76))
(assert (forall ((x_106224 T_25))
	(isAtom_38 (Atom_38 x_106224))))
(assert (forall ((x_106225 R_578) (x_106226 R_578))
	(isx_78 (x_101789 x_106225 x_106226))))
(assert (forall ((x_106227 R_578) (x_106228 R_578))
	(isx_79 (x_101790 x_106227 x_106228))))
(assert (forall ((x_106229 R_578) (x_106230 R_578))
	(isx_80 (x_101791 x_106229 x_106230))))
(assert (forall ((x_106231 R_578))
	(isStar_38 (Star_38 x_106231))))
(assert (diseqR_38 Nil_401 Eps_76))
(assert (forall ((x_106232 T_25))
	(diseqR_38 Nil_401 (Atom_38 x_106232))))
(assert (forall ((x_106233 R_578) (x_106234 R_578))
	(diseqR_38 Nil_401 (x_101789 x_106233 x_106234))))
(assert (forall ((x_106235 R_578) (x_106236 R_578))
	(diseqR_38 Nil_401 (x_101790 x_106235 x_106236))))
(assert (forall ((x_106237 R_578) (x_106238 R_578))
	(diseqR_38 Nil_401 (x_101791 x_106237 x_106238))))
(assert (forall ((x_106239 R_578))
	(diseqR_38 Nil_401 (Star_38 x_106239))))
(assert (diseqR_38 Eps_76 Nil_401))
(assert (forall ((x_106240 T_25))
	(diseqR_38 (Atom_38 x_106240) Nil_401)))
(assert (forall ((x_106241 R_578) (x_106242 R_578))
	(diseqR_38 (x_101789 x_106241 x_106242) Nil_401)))
(assert (forall ((x_106243 R_578) (x_106244 R_578))
	(diseqR_38 (x_101790 x_106243 x_106244) Nil_401)))
(assert (forall ((x_106245 R_578) (x_106246 R_578))
	(diseqR_38 (x_101791 x_106245 x_106246) Nil_401)))
(assert (forall ((x_106247 R_578))
	(diseqR_38 (Star_38 x_106247) Nil_401)))
(assert (forall ((x_106248 T_25))
	(diseqR_38 Eps_76 (Atom_38 x_106248))))
(assert (forall ((x_106249 R_578) (x_106250 R_578))
	(diseqR_38 Eps_76 (x_101789 x_106249 x_106250))))
(assert (forall ((x_106251 R_578) (x_106252 R_578))
	(diseqR_38 Eps_76 (x_101790 x_106251 x_106252))))
(assert (forall ((x_106253 R_578) (x_106254 R_578))
	(diseqR_38 Eps_76 (x_101791 x_106253 x_106254))))
(assert (forall ((x_106255 R_578))
	(diseqR_38 Eps_76 (Star_38 x_106255))))
(assert (forall ((x_106256 T_25))
	(diseqR_38 (Atom_38 x_106256) Eps_76)))
(assert (forall ((x_106257 R_578) (x_106258 R_578))
	(diseqR_38 (x_101789 x_106257 x_106258) Eps_76)))
(assert (forall ((x_106259 R_578) (x_106260 R_578))
	(diseqR_38 (x_101790 x_106259 x_106260) Eps_76)))
(assert (forall ((x_106261 R_578) (x_106262 R_578))
	(diseqR_38 (x_101791 x_106261 x_106262) Eps_76)))
(assert (forall ((x_106263 R_578))
	(diseqR_38 (Star_38 x_106263) Eps_76)))
(assert (forall ((x_106264 T_25) (x_106265 R_578) (x_106266 R_578))
	(diseqR_38 (Atom_38 x_106264) (x_101789 x_106265 x_106266))))
(assert (forall ((x_106267 T_25) (x_106268 R_578) (x_106269 R_578))
	(diseqR_38 (Atom_38 x_106267) (x_101790 x_106268 x_106269))))
(assert (forall ((x_106270 T_25) (x_106271 R_578) (x_106272 R_578))
	(diseqR_38 (Atom_38 x_106270) (x_101791 x_106271 x_106272))))
(assert (forall ((x_106273 T_25) (x_106274 R_578))
	(diseqR_38 (Atom_38 x_106273) (Star_38 x_106274))))
(assert (forall ((x_106275 R_578) (x_106276 R_578) (x_106277 T_25))
	(diseqR_38 (x_101789 x_106275 x_106276) (Atom_38 x_106277))))
(assert (forall ((x_106278 R_578) (x_106279 R_578) (x_106280 T_25))
	(diseqR_38 (x_101790 x_106278 x_106279) (Atom_38 x_106280))))
(assert (forall ((x_106281 R_578) (x_106282 R_578) (x_106283 T_25))
	(diseqR_38 (x_101791 x_106281 x_106282) (Atom_38 x_106283))))
(assert (forall ((x_106284 R_578) (x_106285 T_25))
	(diseqR_38 (Star_38 x_106284) (Atom_38 x_106285))))
(assert (forall ((x_106286 R_578) (x_106287 R_578) (x_106288 R_578) (x_106289 R_578))
	(diseqR_38 (x_101789 x_106286 x_106287) (x_101790 x_106288 x_106289))))
(assert (forall ((x_106290 R_578) (x_106291 R_578) (x_106292 R_578) (x_106293 R_578))
	(diseqR_38 (x_101789 x_106290 x_106291) (x_101791 x_106292 x_106293))))
(assert (forall ((x_106294 R_578) (x_106295 R_578) (x_106296 R_578))
	(diseqR_38 (x_101789 x_106294 x_106295) (Star_38 x_106296))))
(assert (forall ((x_106297 R_578) (x_106298 R_578) (x_106299 R_578) (x_106300 R_578))
	(diseqR_38 (x_101790 x_106297 x_106298) (x_101789 x_106299 x_106300))))
(assert (forall ((x_106301 R_578) (x_106302 R_578) (x_106303 R_578) (x_106304 R_578))
	(diseqR_38 (x_101791 x_106301 x_106302) (x_101789 x_106303 x_106304))))
(assert (forall ((x_106305 R_578) (x_106306 R_578) (x_106307 R_578))
	(diseqR_38 (Star_38 x_106305) (x_101789 x_106306 x_106307))))
(assert (forall ((x_106308 R_578) (x_106309 R_578) (x_106310 R_578) (x_106311 R_578))
	(diseqR_38 (x_101790 x_106308 x_106309) (x_101791 x_106310 x_106311))))
(assert (forall ((x_106312 R_578) (x_106313 R_578) (x_106314 R_578))
	(diseqR_38 (x_101790 x_106312 x_106313) (Star_38 x_106314))))
(assert (forall ((x_106315 R_578) (x_106316 R_578) (x_106317 R_578) (x_106318 R_578))
	(diseqR_38 (x_101791 x_106315 x_106316) (x_101790 x_106317 x_106318))))
(assert (forall ((x_106319 R_578) (x_106320 R_578) (x_106321 R_578))
	(diseqR_38 (Star_38 x_106319) (x_101790 x_106320 x_106321))))
(assert (forall ((x_106322 R_578) (x_106323 R_578) (x_106324 R_578))
	(diseqR_38 (x_101791 x_106322 x_106323) (Star_38 x_106324))))
(assert (forall ((x_106325 R_578) (x_106326 R_578) (x_106327 R_578))
	(diseqR_38 (Star_38 x_106325) (x_101791 x_106326 x_106327))))
(assert (forall ((x_106328 T_25) (x_106329 T_25))
	(=> (diseqT_24 x_106328 x_106329) (diseqR_38 (Atom_38 x_106328) (Atom_38 x_106329)))))
(assert (forall ((x_106330 R_578) (x_106331 R_578) (x_106332 R_578) (x_106333 R_578))
	(=> (diseqR_38 x_106330 x_106332) (diseqR_38 (x_101789 x_106330 x_106331) (x_101789 x_106332 x_106333)))))
(assert (forall ((x_106330 R_578) (x_106331 R_578) (x_106332 R_578) (x_106333 R_578))
	(=> (diseqR_38 x_106331 x_106333) (diseqR_38 (x_101789 x_106330 x_106331) (x_101789 x_106332 x_106333)))))
(assert (forall ((x_106334 R_578) (x_106335 R_578) (x_106336 R_578) (x_106337 R_578))
	(=> (diseqR_38 x_106334 x_106336) (diseqR_38 (x_101790 x_106334 x_106335) (x_101790 x_106336 x_106337)))))
(assert (forall ((x_106334 R_578) (x_106335 R_578) (x_106336 R_578) (x_106337 R_578))
	(=> (diseqR_38 x_106335 x_106337) (diseqR_38 (x_101790 x_106334 x_106335) (x_101790 x_106336 x_106337)))))
(assert (forall ((x_106338 R_578) (x_106339 R_578) (x_106340 R_578) (x_106341 R_578))
	(=> (diseqR_38 x_106338 x_106340) (diseqR_38 (x_101791 x_106338 x_106339) (x_101791 x_106340 x_106341)))))
(assert (forall ((x_106338 R_578) (x_106339 R_578) (x_106340 R_578) (x_106341 R_578))
	(=> (diseqR_38 x_106339 x_106341) (diseqR_38 (x_101791 x_106338 x_106339) (x_101791 x_106340 x_106341)))))
(assert (forall ((x_106342 R_578) (x_106343 R_578))
	(=> (diseqR_38 x_106342 x_106343) (diseqR_38 (Star_38 x_106342) (Star_38 x_106343)))))
(declare-fun x_101792 (R_578 R_578 R_578) Bool)
(assert (forall ((y_2875 R_578))
	(x_101792 Nil_401 Nil_401 y_2875)))
(assert (forall ((x_101794 R_578) (x_102217 T_25))
	(x_101792 Nil_401 (Atom_38 x_102217) Nil_401)))
(assert (forall ((x_101794 R_578))
	(x_101792 Nil_401 Eps_76 Nil_401)))
(assert (forall ((x_101794 R_578) (x_102218 R_578))
	(x_101792 Nil_401 (Star_38 x_102218) Nil_401)))
(assert (forall ((x_101794 R_578) (x_102219 R_578) (x_102220 R_578))
	(x_101792 Nil_401 (x_101789 x_102219 x_102220) Nil_401)))
(assert (forall ((x_101794 R_578) (x_102221 R_578) (x_102222 R_578))
	(x_101792 Nil_401 (x_101790 x_102221 x_102222) Nil_401)))
(assert (forall ((x_101794 R_578) (x_102223 R_578) (x_102224 R_578))
	(x_101792 Nil_401 (x_101791 x_102223 x_102224) Nil_401)))
(assert (forall ((x_101795 R_578) (x_101873 T_25) (x_101794 R_578))
	(x_101792 (Atom_38 x_101873) Eps_76 (Atom_38 x_101873))))
(assert (forall ((x_101795 R_578) (x_101794 R_578))
	(x_101792 Eps_76 Eps_76 Eps_76)))
(assert (forall ((x_101795 R_578) (x_101874 R_578) (x_101794 R_578))
	(x_101792 (Star_38 x_101874) Eps_76 (Star_38 x_101874))))
(assert (forall ((x_101795 R_578) (x_101875 R_578) (x_101876 R_578) (x_101794 R_578))
	(x_101792 (x_101789 x_101875 x_101876) Eps_76 (x_101789 x_101875 x_101876))))
(assert (forall ((x_101795 R_578) (x_101877 R_578) (x_101878 R_578) (x_101794 R_578))
	(x_101792 (x_101790 x_101877 x_101878) Eps_76 (x_101790 x_101877 x_101878))))
(assert (forall ((x_101795 R_578) (x_101879 R_578) (x_101880 R_578) (x_101794 R_578))
	(x_101792 (x_101791 x_101879 x_101880) Eps_76 (x_101791 x_101879 x_101880))))
(assert (forall ((x_101796 R_578) (x_101817 T_25) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (Atom_38 x_101817) (Atom_38 x_101817) Eps_76)))
(assert (forall ((x_101796 R_578) (x_101818 R_578) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (Star_38 x_101818) (Star_38 x_101818) Eps_76)))
(assert (forall ((x_101796 R_578) (x_101819 R_578) (x_101820 R_578) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (x_101789 x_101819 x_101820) (x_101789 x_101819 x_101820) Eps_76)))
(assert (forall ((x_101796 R_578) (x_101821 R_578) (x_101822 R_578) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (x_101790 x_101821 x_101822) (x_101790 x_101821 x_101822) Eps_76)))
(assert (forall ((x_101796 R_578) (x_101823 R_578) (x_101824 R_578) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (x_101791 x_101823 x_101824) (x_101791 x_101823 x_101824) Eps_76)))
(assert (forall ((x_101797 R_578) (x_101809 T_25) (x_101796 R_578) (x_101825 T_25) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (x_101791 (Atom_38 x_101825) (Atom_38 x_101809)) (Atom_38 x_101825) (Atom_38 x_101809))))
(assert (forall ((x_101797 R_578) (x_101809 T_25) (x_101796 R_578) (x_101826 R_578) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (x_101791 (Star_38 x_101826) (Atom_38 x_101809)) (Star_38 x_101826) (Atom_38 x_101809))))
(assert (forall ((x_101797 R_578) (x_101809 T_25) (x_101796 R_578) (x_101827 R_578) (x_101828 R_578) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (x_101791 (x_101789 x_101827 x_101828) (Atom_38 x_101809)) (x_101789 x_101827 x_101828) (Atom_38 x_101809))))
(assert (forall ((x_101797 R_578) (x_101809 T_25) (x_101796 R_578) (x_101829 R_578) (x_101830 R_578) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (x_101791 (x_101790 x_101829 x_101830) (Atom_38 x_101809)) (x_101790 x_101829 x_101830) (Atom_38 x_101809))))
(assert (forall ((x_101797 R_578) (x_101809 T_25) (x_101796 R_578) (x_101831 R_578) (x_101832 R_578) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (x_101791 (x_101791 x_101831 x_101832) (Atom_38 x_101809)) (x_101791 x_101831 x_101832) (Atom_38 x_101809))))
(assert (forall ((x_101797 R_578) (x_101810 R_578) (x_101796 R_578) (x_101841 T_25) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (x_101791 (Atom_38 x_101841) (Star_38 x_101810)) (Atom_38 x_101841) (Star_38 x_101810))))
(assert (forall ((x_101797 R_578) (x_101810 R_578) (x_101796 R_578) (x_101842 R_578) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (x_101791 (Star_38 x_101842) (Star_38 x_101810)) (Star_38 x_101842) (Star_38 x_101810))))
(assert (forall ((x_101797 R_578) (x_101810 R_578) (x_101796 R_578) (x_101843 R_578) (x_101844 R_578) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (x_101791 (x_101789 x_101843 x_101844) (Star_38 x_101810)) (x_101789 x_101843 x_101844) (Star_38 x_101810))))
(assert (forall ((x_101797 R_578) (x_101810 R_578) (x_101796 R_578) (x_101845 R_578) (x_101846 R_578) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (x_101791 (x_101790 x_101845 x_101846) (Star_38 x_101810)) (x_101790 x_101845 x_101846) (Star_38 x_101810))))
(assert (forall ((x_101797 R_578) (x_101810 R_578) (x_101796 R_578) (x_101847 R_578) (x_101848 R_578) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (x_101791 (x_101791 x_101847 x_101848) (Star_38 x_101810)) (x_101791 x_101847 x_101848) (Star_38 x_101810))))
(assert (forall ((x_101797 R_578) (x_101811 R_578) (x_101812 R_578) (x_101796 R_578) (x_101849 T_25) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (x_101791 (Atom_38 x_101849) (x_101789 x_101811 x_101812)) (Atom_38 x_101849) (x_101789 x_101811 x_101812))))
(assert (forall ((x_101797 R_578) (x_101811 R_578) (x_101812 R_578) (x_101796 R_578) (x_101850 R_578) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (x_101791 (Star_38 x_101850) (x_101789 x_101811 x_101812)) (Star_38 x_101850) (x_101789 x_101811 x_101812))))
(assert (forall ((x_101797 R_578) (x_101811 R_578) (x_101812 R_578) (x_101796 R_578) (x_101851 R_578) (x_101852 R_578) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (x_101791 (x_101789 x_101851 x_101852) (x_101789 x_101811 x_101812)) (x_101789 x_101851 x_101852) (x_101789 x_101811 x_101812))))
(assert (forall ((x_101797 R_578) (x_101811 R_578) (x_101812 R_578) (x_101796 R_578) (x_101853 R_578) (x_101854 R_578) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (x_101791 (x_101790 x_101853 x_101854) (x_101789 x_101811 x_101812)) (x_101790 x_101853 x_101854) (x_101789 x_101811 x_101812))))
(assert (forall ((x_101797 R_578) (x_101811 R_578) (x_101812 R_578) (x_101796 R_578) (x_101855 R_578) (x_101856 R_578) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (x_101791 (x_101791 x_101855 x_101856) (x_101789 x_101811 x_101812)) (x_101791 x_101855 x_101856) (x_101789 x_101811 x_101812))))
(assert (forall ((x_101797 R_578) (x_101813 R_578) (x_101814 R_578) (x_101796 R_578) (x_101857 T_25) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (x_101791 (Atom_38 x_101857) (x_101790 x_101813 x_101814)) (Atom_38 x_101857) (x_101790 x_101813 x_101814))))
(assert (forall ((x_101797 R_578) (x_101813 R_578) (x_101814 R_578) (x_101796 R_578) (x_101858 R_578) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (x_101791 (Star_38 x_101858) (x_101790 x_101813 x_101814)) (Star_38 x_101858) (x_101790 x_101813 x_101814))))
(assert (forall ((x_101797 R_578) (x_101813 R_578) (x_101814 R_578) (x_101796 R_578) (x_101859 R_578) (x_101860 R_578) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (x_101791 (x_101789 x_101859 x_101860) (x_101790 x_101813 x_101814)) (x_101789 x_101859 x_101860) (x_101790 x_101813 x_101814))))
(assert (forall ((x_101797 R_578) (x_101813 R_578) (x_101814 R_578) (x_101796 R_578) (x_101861 R_578) (x_101862 R_578) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (x_101791 (x_101790 x_101861 x_101862) (x_101790 x_101813 x_101814)) (x_101790 x_101861 x_101862) (x_101790 x_101813 x_101814))))
(assert (forall ((x_101797 R_578) (x_101813 R_578) (x_101814 R_578) (x_101796 R_578) (x_101863 R_578) (x_101864 R_578) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (x_101791 (x_101791 x_101863 x_101864) (x_101790 x_101813 x_101814)) (x_101791 x_101863 x_101864) (x_101790 x_101813 x_101814))))
(assert (forall ((x_101797 R_578) (x_101815 R_578) (x_101816 R_578) (x_101796 R_578) (x_101865 T_25) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (x_101791 (Atom_38 x_101865) (x_101791 x_101815 x_101816)) (Atom_38 x_101865) (x_101791 x_101815 x_101816))))
(assert (forall ((x_101797 R_578) (x_101815 R_578) (x_101816 R_578) (x_101796 R_578) (x_101866 R_578) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (x_101791 (Star_38 x_101866) (x_101791 x_101815 x_101816)) (Star_38 x_101866) (x_101791 x_101815 x_101816))))
(assert (forall ((x_101797 R_578) (x_101815 R_578) (x_101816 R_578) (x_101796 R_578) (x_101867 R_578) (x_101868 R_578) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (x_101791 (x_101789 x_101867 x_101868) (x_101791 x_101815 x_101816)) (x_101789 x_101867 x_101868) (x_101791 x_101815 x_101816))))
(assert (forall ((x_101797 R_578) (x_101815 R_578) (x_101816 R_578) (x_101796 R_578) (x_101869 R_578) (x_101870 R_578) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (x_101791 (x_101790 x_101869 x_101870) (x_101791 x_101815 x_101816)) (x_101790 x_101869 x_101870) (x_101791 x_101815 x_101816))))
(assert (forall ((x_101797 R_578) (x_101815 R_578) (x_101816 R_578) (x_101796 R_578) (x_101871 R_578) (x_101872 R_578) (x_101795 R_578) (x_101794 R_578))
	(x_101792 (x_101791 (x_101791 x_101871 x_101872) (x_101791 x_101815 x_101816)) (x_101791 x_101871 x_101872) (x_101791 x_101815 x_101816))))
(declare-fun x_101798 (R_578 R_578 R_578) Bool)
(assert (forall ((x_105973 R_578))
	(x_101798 x_105973 Nil_401 x_105973)))
(assert (forall ((x_101800 R_578) (x_104297 T_25))
	(x_101798 (Atom_38 x_104297) (Atom_38 x_104297) Nil_401)))
(assert (forall ((x_101800 R_578))
	(x_101798 Eps_76 Eps_76 Nil_401)))
(assert (forall ((x_101800 R_578) (x_104298 R_578))
	(x_101798 (Star_38 x_104298) (Star_38 x_104298) Nil_401)))
(assert (forall ((x_101800 R_578) (x_104299 R_578) (x_104300 R_578))
	(x_101798 (x_101789 x_104299 x_104300) (x_101789 x_104299 x_104300) Nil_401)))
(assert (forall ((x_101800 R_578) (x_104301 R_578) (x_104302 R_578))
	(x_101798 (x_101790 x_104301 x_104302) (x_101790 x_104301 x_104302) Nil_401)))
(assert (forall ((x_101800 R_578) (x_104303 R_578) (x_104304 R_578))
	(x_101798 (x_101791 x_104303 x_104304) (x_101791 x_104303 x_104304) Nil_401)))
(assert (forall ((x_101801 R_578) (x_104289 T_25) (x_101800 R_578) (x_104305 T_25))
	(x_101798 (x_101789 (Atom_38 x_104305) (Atom_38 x_104289)) (Atom_38 x_104305) (Atom_38 x_104289))))
(assert (forall ((x_101801 R_578) (x_104289 T_25) (x_101800 R_578))
	(x_101798 (x_101789 Eps_76 (Atom_38 x_104289)) Eps_76 (Atom_38 x_104289))))
(assert (forall ((x_101801 R_578) (x_104289 T_25) (x_101800 R_578) (x_104306 R_578))
	(x_101798 (x_101789 (Star_38 x_104306) (Atom_38 x_104289)) (Star_38 x_104306) (Atom_38 x_104289))))
(assert (forall ((x_101801 R_578) (x_104289 T_25) (x_101800 R_578) (x_104307 R_578) (x_104308 R_578))
	(x_101798 (x_101789 (x_101789 x_104307 x_104308) (Atom_38 x_104289)) (x_101789 x_104307 x_104308) (Atom_38 x_104289))))
(assert (forall ((x_101801 R_578) (x_104289 T_25) (x_101800 R_578) (x_104309 R_578) (x_104310 R_578))
	(x_101798 (x_101789 (x_101790 x_104309 x_104310) (Atom_38 x_104289)) (x_101790 x_104309 x_104310) (Atom_38 x_104289))))
(assert (forall ((x_101801 R_578) (x_104289 T_25) (x_101800 R_578) (x_104311 R_578) (x_104312 R_578))
	(x_101798 (x_101789 (x_101791 x_104311 x_104312) (Atom_38 x_104289)) (x_101791 x_104311 x_104312) (Atom_38 x_104289))))
(assert (forall ((x_101801 R_578) (x_101800 R_578) (x_104313 T_25))
	(x_101798 (x_101789 (Atom_38 x_104313) Eps_76) (Atom_38 x_104313) Eps_76)))
(assert (forall ((x_101801 R_578) (x_101800 R_578))
	(x_101798 (x_101789 Eps_76 Eps_76) Eps_76 Eps_76)))
(assert (forall ((x_101801 R_578) (x_101800 R_578) (x_104314 R_578))
	(x_101798 (x_101789 (Star_38 x_104314) Eps_76) (Star_38 x_104314) Eps_76)))
(assert (forall ((x_101801 R_578) (x_101800 R_578) (x_104315 R_578) (x_104316 R_578))
	(x_101798 (x_101789 (x_101789 x_104315 x_104316) Eps_76) (x_101789 x_104315 x_104316) Eps_76)))
(assert (forall ((x_101801 R_578) (x_101800 R_578) (x_104317 R_578) (x_104318 R_578))
	(x_101798 (x_101789 (x_101790 x_104317 x_104318) Eps_76) (x_101790 x_104317 x_104318) Eps_76)))
(assert (forall ((x_101801 R_578) (x_101800 R_578) (x_104319 R_578) (x_104320 R_578))
	(x_101798 (x_101789 (x_101791 x_104319 x_104320) Eps_76) (x_101791 x_104319 x_104320) Eps_76)))
(assert (forall ((x_101801 R_578) (x_104290 R_578) (x_101800 R_578) (x_104321 T_25))
	(x_101798 (x_101789 (Atom_38 x_104321) (Star_38 x_104290)) (Atom_38 x_104321) (Star_38 x_104290))))
(assert (forall ((x_101801 R_578) (x_104290 R_578) (x_101800 R_578))
	(x_101798 (x_101789 Eps_76 (Star_38 x_104290)) Eps_76 (Star_38 x_104290))))
(assert (forall ((x_101801 R_578) (x_104290 R_578) (x_101800 R_578) (x_104322 R_578))
	(x_101798 (x_101789 (Star_38 x_104322) (Star_38 x_104290)) (Star_38 x_104322) (Star_38 x_104290))))
(assert (forall ((x_101801 R_578) (x_104290 R_578) (x_101800 R_578) (x_104323 R_578) (x_104324 R_578))
	(x_101798 (x_101789 (x_101789 x_104323 x_104324) (Star_38 x_104290)) (x_101789 x_104323 x_104324) (Star_38 x_104290))))
(assert (forall ((x_101801 R_578) (x_104290 R_578) (x_101800 R_578) (x_104325 R_578) (x_104326 R_578))
	(x_101798 (x_101789 (x_101790 x_104325 x_104326) (Star_38 x_104290)) (x_101790 x_104325 x_104326) (Star_38 x_104290))))
(assert (forall ((x_101801 R_578) (x_104290 R_578) (x_101800 R_578) (x_104327 R_578) (x_104328 R_578))
	(x_101798 (x_101789 (x_101791 x_104327 x_104328) (Star_38 x_104290)) (x_101791 x_104327 x_104328) (Star_38 x_104290))))
(assert (forall ((x_101801 R_578) (x_104291 R_578) (x_104292 R_578) (x_101800 R_578) (x_104329 T_25))
	(x_101798 (x_101789 (Atom_38 x_104329) (x_101789 x_104291 x_104292)) (Atom_38 x_104329) (x_101789 x_104291 x_104292))))
(assert (forall ((x_101801 R_578) (x_104291 R_578) (x_104292 R_578) (x_101800 R_578))
	(x_101798 (x_101789 Eps_76 (x_101789 x_104291 x_104292)) Eps_76 (x_101789 x_104291 x_104292))))
(assert (forall ((x_101801 R_578) (x_104291 R_578) (x_104292 R_578) (x_101800 R_578) (x_104330 R_578))
	(x_101798 (x_101789 (Star_38 x_104330) (x_101789 x_104291 x_104292)) (Star_38 x_104330) (x_101789 x_104291 x_104292))))
(assert (forall ((x_101801 R_578) (x_104291 R_578) (x_104292 R_578) (x_101800 R_578) (x_104331 R_578) (x_104332 R_578))
	(x_101798 (x_101789 (x_101789 x_104331 x_104332) (x_101789 x_104291 x_104292)) (x_101789 x_104331 x_104332) (x_101789 x_104291 x_104292))))
(assert (forall ((x_101801 R_578) (x_104291 R_578) (x_104292 R_578) (x_101800 R_578) (x_104333 R_578) (x_104334 R_578))
	(x_101798 (x_101789 (x_101790 x_104333 x_104334) (x_101789 x_104291 x_104292)) (x_101790 x_104333 x_104334) (x_101789 x_104291 x_104292))))
(assert (forall ((x_101801 R_578) (x_104291 R_578) (x_104292 R_578) (x_101800 R_578) (x_104335 R_578) (x_104336 R_578))
	(x_101798 (x_101789 (x_101791 x_104335 x_104336) (x_101789 x_104291 x_104292)) (x_101791 x_104335 x_104336) (x_101789 x_104291 x_104292))))
(assert (forall ((x_101801 R_578) (x_104293 R_578) (x_104294 R_578) (x_101800 R_578) (x_104337 T_25))
	(x_101798 (x_101789 (Atom_38 x_104337) (x_101790 x_104293 x_104294)) (Atom_38 x_104337) (x_101790 x_104293 x_104294))))
(assert (forall ((x_101801 R_578) (x_104293 R_578) (x_104294 R_578) (x_101800 R_578))
	(x_101798 (x_101789 Eps_76 (x_101790 x_104293 x_104294)) Eps_76 (x_101790 x_104293 x_104294))))
(assert (forall ((x_101801 R_578) (x_104293 R_578) (x_104294 R_578) (x_101800 R_578) (x_104338 R_578))
	(x_101798 (x_101789 (Star_38 x_104338) (x_101790 x_104293 x_104294)) (Star_38 x_104338) (x_101790 x_104293 x_104294))))
(assert (forall ((x_101801 R_578) (x_104293 R_578) (x_104294 R_578) (x_101800 R_578) (x_104339 R_578) (x_104340 R_578))
	(x_101798 (x_101789 (x_101789 x_104339 x_104340) (x_101790 x_104293 x_104294)) (x_101789 x_104339 x_104340) (x_101790 x_104293 x_104294))))
(assert (forall ((x_101801 R_578) (x_104293 R_578) (x_104294 R_578) (x_101800 R_578) (x_104341 R_578) (x_104342 R_578))
	(x_101798 (x_101789 (x_101790 x_104341 x_104342) (x_101790 x_104293 x_104294)) (x_101790 x_104341 x_104342) (x_101790 x_104293 x_104294))))
(assert (forall ((x_101801 R_578) (x_104293 R_578) (x_104294 R_578) (x_101800 R_578) (x_104343 R_578) (x_104344 R_578))
	(x_101798 (x_101789 (x_101791 x_104343 x_104344) (x_101790 x_104293 x_104294)) (x_101791 x_104343 x_104344) (x_101790 x_104293 x_104294))))
(assert (forall ((x_101801 R_578) (x_104295 R_578) (x_104296 R_578) (x_101800 R_578) (x_104345 T_25))
	(x_101798 (x_101789 (Atom_38 x_104345) (x_101791 x_104295 x_104296)) (Atom_38 x_104345) (x_101791 x_104295 x_104296))))
(assert (forall ((x_101801 R_578) (x_104295 R_578) (x_104296 R_578) (x_101800 R_578))
	(x_101798 (x_101789 Eps_76 (x_101791 x_104295 x_104296)) Eps_76 (x_101791 x_104295 x_104296))))
(assert (forall ((x_101801 R_578) (x_104295 R_578) (x_104296 R_578) (x_101800 R_578) (x_104346 R_578))
	(x_101798 (x_101789 (Star_38 x_104346) (x_101791 x_104295 x_104296)) (Star_38 x_104346) (x_101791 x_104295 x_104296))))
(assert (forall ((x_101801 R_578) (x_104295 R_578) (x_104296 R_578) (x_101800 R_578) (x_104347 R_578) (x_104348 R_578))
	(x_101798 (x_101789 (x_101789 x_104347 x_104348) (x_101791 x_104295 x_104296)) (x_101789 x_104347 x_104348) (x_101791 x_104295 x_104296))))
(assert (forall ((x_101801 R_578) (x_104295 R_578) (x_104296 R_578) (x_101800 R_578) (x_104349 R_578) (x_104350 R_578))
	(x_101798 (x_101789 (x_101790 x_104349 x_104350) (x_101791 x_104295 x_104296)) (x_101790 x_104349 x_104350) (x_101791 x_104295 x_104296))))
(assert (forall ((x_101801 R_578) (x_104295 R_578) (x_104296 R_578) (x_101800 R_578) (x_104351 R_578) (x_104352 R_578))
	(x_101798 (x_101789 (x_101791 x_104351 x_104352) (x_101791 x_104295 x_104296)) (x_101791 x_104351 x_104352) (x_101791 x_104295 x_104296))))
(declare-fun eps_77 (Bool_416 R_578) Bool)
(assert (forall ((y_2877 R_578))
	(eps_77 true_416 (Star_38 y_2877))))
(assert (forall ((x_106017 Bool_416) (x_106018 Bool_416) (x_106019 Bool_416) (p_530 R_578) (q_283 R_578))
	(=> (and (eps_77 x_106018 p_530) (eps_77 x_106019 q_283) (and_420 x_106017 x_106018 x_106019)) (eps_77 x_106017 (x_101791 p_530 q_283)))))
(assert (forall ((x_106020 Bool_416) (x_106021 Bool_416) (x_106022 Bool_416) (r_579 R_578) (q_284 R_578))
	(=> (and (eps_77 x_106021 r_579) (eps_77 x_106022 q_284) (and_420 x_106020 x_106021 x_106022)) (eps_77 x_106020 (x_101790 r_579 q_284)))))
(assert (forall ((x_106023 Bool_416) (x_106024 Bool_416) (x_106025 Bool_416) (p_531 R_578) (q_285 R_578))
	(=> (and (eps_77 x_106024 p_531) (eps_77 x_106025 q_285) (or_430 x_106023 x_106024 x_106025)) (eps_77 x_106023 (x_101789 p_531 q_285)))))
(assert (eps_77 true_416 Eps_76))
(assert (forall ((x_101803 R_578) (x_104353 T_25))
	(eps_77 false_416 (Atom_38 x_104353))))
(assert (forall ((x_101803 R_578))
	(eps_77 false_416 Nil_401)))
(declare-fun step_38 (R_578 R_578 T_25) Bool)
(assert (forall ((x_106029 R_578) (x_106030 R_578) (p_532 R_578) (y_2878 T_25))
	(=> (and (step_38 x_106030 p_532 y_2878) (x_101792 x_106029 x_106030 (Star_38 p_532))) (step_38 x_106029 (Star_38 p_532) y_2878))))
(assert (forall ((x_106033 R_578) (x_106034 R_578) (x_106035 R_578) (x_106036 R_578) (p_533 R_578) (q_286 R_578) (y_2878 T_25))
	(=> (and (step_38 x_106034 p_533 y_2878) (x_101792 x_106035 x_106034 q_286) (step_38 x_106036 q_286 y_2878) (x_101798 x_106033 x_106035 x_106036) (eps_77 true_416 p_533)) (step_38 x_106033 (x_101791 p_533 q_286) y_2878))))
(assert (forall ((x_106039 R_578) (x_106040 R_578) (x_106041 R_578) (p_533 R_578) (q_286 R_578) (y_2878 T_25))
	(=> (and (step_38 x_106040 p_533 y_2878) (x_101792 x_106041 x_106040 q_286) (x_101798 x_106039 x_106041 Nil_401) (eps_77 false_416 p_533)) (step_38 x_106039 (x_101791 p_533 q_286) y_2878))))
(assert (forall ((r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (step_38 Nil_401 r_580 y_2878) (step_38 Nil_401 (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101805 R_578) (x_104362 T_25) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 Nil_401 q_287 y_2878) (step_38 (Atom_38 x_104362) r_580 y_2878)) (step_38 Nil_401 (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101805 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 Nil_401 q_287 y_2878) (step_38 Eps_76 r_580 y_2878)) (step_38 Nil_401 (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101805 R_578) (x_104363 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 Nil_401 q_287 y_2878) (step_38 (Star_38 x_104363) r_580 y_2878)) (step_38 Nil_401 (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101805 R_578) (x_104364 R_578) (x_104365 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 Nil_401 q_287 y_2878) (step_38 (x_101789 x_104364 x_104365) r_580 y_2878)) (step_38 Nil_401 (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101805 R_578) (x_104366 R_578) (x_104367 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 Nil_401 q_287 y_2878) (step_38 (x_101790 x_104366 x_104367) r_580 y_2878)) (step_38 Nil_401 (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101805 R_578) (x_104368 R_578) (x_104369 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 Nil_401 q_287 y_2878) (step_38 (x_101791 x_104368 x_104369) r_580 y_2878)) (step_38 Nil_401 (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104354 T_25) (x_101805 R_578) (x_104370 T_25) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (Atom_38 x_104354) q_287 y_2878) (step_38 (Atom_38 x_104370) r_580 y_2878)) (step_38 (x_101790 (Atom_38 x_104370) (Atom_38 x_104354)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104354 T_25) (x_101805 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (Atom_38 x_104354) q_287 y_2878) (step_38 Eps_76 r_580 y_2878)) (step_38 (x_101790 Eps_76 (Atom_38 x_104354)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104354 T_25) (x_101805 R_578) (x_104371 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (Atom_38 x_104354) q_287 y_2878) (step_38 (Star_38 x_104371) r_580 y_2878)) (step_38 (x_101790 (Star_38 x_104371) (Atom_38 x_104354)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104354 T_25) (x_101805 R_578) (x_104372 R_578) (x_104373 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (Atom_38 x_104354) q_287 y_2878) (step_38 (x_101789 x_104372 x_104373) r_580 y_2878)) (step_38 (x_101790 (x_101789 x_104372 x_104373) (Atom_38 x_104354)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104354 T_25) (x_101805 R_578) (x_104374 R_578) (x_104375 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (Atom_38 x_104354) q_287 y_2878) (step_38 (x_101790 x_104374 x_104375) r_580 y_2878)) (step_38 (x_101790 (x_101790 x_104374 x_104375) (Atom_38 x_104354)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104354 T_25) (x_101805 R_578) (x_104376 R_578) (x_104377 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (Atom_38 x_104354) q_287 y_2878) (step_38 (x_101791 x_104376 x_104377) r_580 y_2878)) (step_38 (x_101790 (x_101791 x_104376 x_104377) (Atom_38 x_104354)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_101805 R_578) (x_104378 T_25) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 Eps_76 q_287 y_2878) (step_38 (Atom_38 x_104378) r_580 y_2878)) (step_38 (x_101790 (Atom_38 x_104378) Eps_76) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_101805 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 Eps_76 q_287 y_2878) (step_38 Eps_76 r_580 y_2878)) (step_38 (x_101790 Eps_76 Eps_76) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_101805 R_578) (x_104379 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 Eps_76 q_287 y_2878) (step_38 (Star_38 x_104379) r_580 y_2878)) (step_38 (x_101790 (Star_38 x_104379) Eps_76) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_101805 R_578) (x_104380 R_578) (x_104381 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 Eps_76 q_287 y_2878) (step_38 (x_101789 x_104380 x_104381) r_580 y_2878)) (step_38 (x_101790 (x_101789 x_104380 x_104381) Eps_76) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_101805 R_578) (x_104382 R_578) (x_104383 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 Eps_76 q_287 y_2878) (step_38 (x_101790 x_104382 x_104383) r_580 y_2878)) (step_38 (x_101790 (x_101790 x_104382 x_104383) Eps_76) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_101805 R_578) (x_104384 R_578) (x_104385 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 Eps_76 q_287 y_2878) (step_38 (x_101791 x_104384 x_104385) r_580 y_2878)) (step_38 (x_101790 (x_101791 x_104384 x_104385) Eps_76) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104355 R_578) (x_101805 R_578) (x_104386 T_25) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (Star_38 x_104355) q_287 y_2878) (step_38 (Atom_38 x_104386) r_580 y_2878)) (step_38 (x_101790 (Atom_38 x_104386) (Star_38 x_104355)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104355 R_578) (x_101805 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (Star_38 x_104355) q_287 y_2878) (step_38 Eps_76 r_580 y_2878)) (step_38 (x_101790 Eps_76 (Star_38 x_104355)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104355 R_578) (x_101805 R_578) (x_104387 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (Star_38 x_104355) q_287 y_2878) (step_38 (Star_38 x_104387) r_580 y_2878)) (step_38 (x_101790 (Star_38 x_104387) (Star_38 x_104355)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104355 R_578) (x_101805 R_578) (x_104388 R_578) (x_104389 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (Star_38 x_104355) q_287 y_2878) (step_38 (x_101789 x_104388 x_104389) r_580 y_2878)) (step_38 (x_101790 (x_101789 x_104388 x_104389) (Star_38 x_104355)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104355 R_578) (x_101805 R_578) (x_104390 R_578) (x_104391 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (Star_38 x_104355) q_287 y_2878) (step_38 (x_101790 x_104390 x_104391) r_580 y_2878)) (step_38 (x_101790 (x_101790 x_104390 x_104391) (Star_38 x_104355)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104355 R_578) (x_101805 R_578) (x_104392 R_578) (x_104393 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (Star_38 x_104355) q_287 y_2878) (step_38 (x_101791 x_104392 x_104393) r_580 y_2878)) (step_38 (x_101790 (x_101791 x_104392 x_104393) (Star_38 x_104355)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104356 R_578) (x_104357 R_578) (x_101805 R_578) (x_104394 T_25) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (x_101789 x_104356 x_104357) q_287 y_2878) (step_38 (Atom_38 x_104394) r_580 y_2878)) (step_38 (x_101790 (Atom_38 x_104394) (x_101789 x_104356 x_104357)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104356 R_578) (x_104357 R_578) (x_101805 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (x_101789 x_104356 x_104357) q_287 y_2878) (step_38 Eps_76 r_580 y_2878)) (step_38 (x_101790 Eps_76 (x_101789 x_104356 x_104357)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104356 R_578) (x_104357 R_578) (x_101805 R_578) (x_104395 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (x_101789 x_104356 x_104357) q_287 y_2878) (step_38 (Star_38 x_104395) r_580 y_2878)) (step_38 (x_101790 (Star_38 x_104395) (x_101789 x_104356 x_104357)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104356 R_578) (x_104357 R_578) (x_101805 R_578) (x_104396 R_578) (x_104397 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (x_101789 x_104356 x_104357) q_287 y_2878) (step_38 (x_101789 x_104396 x_104397) r_580 y_2878)) (step_38 (x_101790 (x_101789 x_104396 x_104397) (x_101789 x_104356 x_104357)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104356 R_578) (x_104357 R_578) (x_101805 R_578) (x_104398 R_578) (x_104399 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (x_101789 x_104356 x_104357) q_287 y_2878) (step_38 (x_101790 x_104398 x_104399) r_580 y_2878)) (step_38 (x_101790 (x_101790 x_104398 x_104399) (x_101789 x_104356 x_104357)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104356 R_578) (x_104357 R_578) (x_101805 R_578) (x_104400 R_578) (x_104401 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (x_101789 x_104356 x_104357) q_287 y_2878) (step_38 (x_101791 x_104400 x_104401) r_580 y_2878)) (step_38 (x_101790 (x_101791 x_104400 x_104401) (x_101789 x_104356 x_104357)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104358 R_578) (x_104359 R_578) (x_101805 R_578) (x_104402 T_25) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (x_101790 x_104358 x_104359) q_287 y_2878) (step_38 (Atom_38 x_104402) r_580 y_2878)) (step_38 (x_101790 (Atom_38 x_104402) (x_101790 x_104358 x_104359)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104358 R_578) (x_104359 R_578) (x_101805 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (x_101790 x_104358 x_104359) q_287 y_2878) (step_38 Eps_76 r_580 y_2878)) (step_38 (x_101790 Eps_76 (x_101790 x_104358 x_104359)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104358 R_578) (x_104359 R_578) (x_101805 R_578) (x_104403 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (x_101790 x_104358 x_104359) q_287 y_2878) (step_38 (Star_38 x_104403) r_580 y_2878)) (step_38 (x_101790 (Star_38 x_104403) (x_101790 x_104358 x_104359)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104358 R_578) (x_104359 R_578) (x_101805 R_578) (x_104404 R_578) (x_104405 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (x_101790 x_104358 x_104359) q_287 y_2878) (step_38 (x_101789 x_104404 x_104405) r_580 y_2878)) (step_38 (x_101790 (x_101789 x_104404 x_104405) (x_101790 x_104358 x_104359)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104358 R_578) (x_104359 R_578) (x_101805 R_578) (x_104406 R_578) (x_104407 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (x_101790 x_104358 x_104359) q_287 y_2878) (step_38 (x_101790 x_104406 x_104407) r_580 y_2878)) (step_38 (x_101790 (x_101790 x_104406 x_104407) (x_101790 x_104358 x_104359)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104358 R_578) (x_104359 R_578) (x_101805 R_578) (x_104408 R_578) (x_104409 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (x_101790 x_104358 x_104359) q_287 y_2878) (step_38 (x_101791 x_104408 x_104409) r_580 y_2878)) (step_38 (x_101790 (x_101791 x_104408 x_104409) (x_101790 x_104358 x_104359)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104360 R_578) (x_104361 R_578) (x_101805 R_578) (x_104410 T_25) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (x_101791 x_104360 x_104361) q_287 y_2878) (step_38 (Atom_38 x_104410) r_580 y_2878)) (step_38 (x_101790 (Atom_38 x_104410) (x_101791 x_104360 x_104361)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104360 R_578) (x_104361 R_578) (x_101805 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (x_101791 x_104360 x_104361) q_287 y_2878) (step_38 Eps_76 r_580 y_2878)) (step_38 (x_101790 Eps_76 (x_101791 x_104360 x_104361)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104360 R_578) (x_104361 R_578) (x_101805 R_578) (x_104411 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (x_101791 x_104360 x_104361) q_287 y_2878) (step_38 (Star_38 x_104411) r_580 y_2878)) (step_38 (x_101790 (Star_38 x_104411) (x_101791 x_104360 x_104361)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104360 R_578) (x_104361 R_578) (x_101805 R_578) (x_104412 R_578) (x_104413 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (x_101791 x_104360 x_104361) q_287 y_2878) (step_38 (x_101789 x_104412 x_104413) r_580 y_2878)) (step_38 (x_101790 (x_101789 x_104412 x_104413) (x_101791 x_104360 x_104361)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104360 R_578) (x_104361 R_578) (x_101805 R_578) (x_104414 R_578) (x_104415 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (x_101791 x_104360 x_104361) q_287 y_2878) (step_38 (x_101790 x_104414 x_104415) r_580 y_2878)) (step_38 (x_101790 (x_101790 x_104414 x_104415) (x_101791 x_104360 x_104361)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_101806 R_578) (x_104360 R_578) (x_104361 R_578) (x_101805 R_578) (x_104416 R_578) (x_104417 R_578) (r_580 R_578) (q_287 R_578) (y_2878 T_25))
	(=> (and (step_38 (x_101791 x_104360 x_104361) q_287 y_2878) (step_38 (x_101791 x_104416 x_104417) r_580 y_2878)) (step_38 (x_101790 (x_101791 x_104416 x_104417) (x_101791 x_104360 x_104361)) (x_101790 r_580 q_287) y_2878))))
(assert (forall ((x_106171 R_578) (x_106172 R_578) (x_106173 R_578) (p_534 R_578) (q_288 R_578) (y_2878 T_25))
	(=> (and (step_38 x_106172 p_534 y_2878) (step_38 x_106173 q_288 y_2878) (x_101798 x_106171 x_106172 x_106173)) (step_38 x_106171 (x_101789 p_534 q_288) y_2878))))
(assert (forall ((b_107 T_25))
	(step_38 Eps_76 (Atom_38 b_107) b_107)))
(assert (forall ((b_107 T_25) (y_2878 T_25))
	(=> (diseqT_24 b_107 y_2878) (step_38 Nil_401 (Atom_38 b_107) y_2878))))
(assert (forall ((x_101807 R_578) (y_2878 T_25))
	(step_38 Nil_401 Eps_76 y_2878)))
(assert (forall ((x_101807 R_578) (y_2878 T_25))
	(step_38 Nil_401 Nil_401 y_2878)))
(declare-fun rec_24 (Bool_416 R_578 list_351) Bool)
(assert (forall ((x_106179 Bool_416) (x_106180 R_578) (z_2518 T_25) (xs_836 list_351) (x_101808 R_578))
	(=> (and (step_38 x_106180 x_101808 z_2518) (rec_24 x_106179 x_106180 xs_836)) (rec_24 x_106179 x_101808 (cons_346 z_2518 xs_836)))))
(assert (forall ((x_106182 Bool_416) (x_101808 R_578))
	(=> (eps_77 x_106182 x_101808) (rec_24 x_106182 x_101808 nil_400))))
(assert (forall ((x_106184 Bool_416) (x_106185 Bool_416) (p_535 R_578) (q_289 R_578) (a_104 T_25) (b_108 T_25))
	(=> (and true (diseqBool_202 x_106184 x_106185) (rec_24 x_106184 (Star_38 (x_101789 p_535 q_289)) (cons_346 a_104 (cons_346 b_108 nil_400))) (rec_24 x_106185 (x_101789 (Star_38 p_535) (Star_38 q_289)) (cons_346 a_104 (cons_346 b_108 nil_400)))) false)))
(check-sat)
