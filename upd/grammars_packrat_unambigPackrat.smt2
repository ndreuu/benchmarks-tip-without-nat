
(set-logic HORN)
(declare-datatypes ((Tok_5 0)) (((X_128006) (Y_3284) (Z_2815))))
(declare-fun diseqTok_5 (Tok_5 Tok_5) Bool)
(declare-fun isX_115 (Tok_5) Bool)
(declare-fun isY_19 (Tok_5) Bool)
(declare-fun isZ_584 (Tok_5) Bool)
(assert (isX_115 X_128006))
(assert (isY_19 Y_3284))
(assert (isZ_584 Z_2815))
(assert (diseqTok_5 X_128006 Y_3284))
(assert (diseqTok_5 X_128006 Z_2815))
(assert (diseqTok_5 Y_3284 X_128006))
(assert (diseqTok_5 Z_2815 X_128006))
(assert (diseqTok_5 Y_3284 Z_2815))
(assert (diseqTok_5 Z_2815 Y_3284))
(declare-datatypes ((list_421 0)) (((nil_483) (cons_415 (head_830 Tok_5) (tail_836 list_421)))))
(declare-fun diseqlist_415 (list_421 list_421) Bool)
(declare-fun head_831 (Tok_5 list_421) Bool)
(declare-fun tail_837 (list_421 list_421) Bool)
(declare-fun isnil_483 (list_421) Bool)
(declare-fun iscons_415 (list_421) Bool)
(assert (forall ((x_128036 Tok_5) (x_128037 list_421))
	(head_831 x_128036 (cons_415 x_128036 x_128037))))
(assert (forall ((x_128036 Tok_5) (x_128037 list_421))
	(tail_837 x_128037 (cons_415 x_128036 x_128037))))
(assert (isnil_483 nil_483))
(assert (forall ((x_128039 Tok_5) (x_128040 list_421))
	(iscons_415 (cons_415 x_128039 x_128040))))
(assert (forall ((x_128041 Tok_5) (x_128042 list_421))
	(diseqlist_415 nil_483 (cons_415 x_128041 x_128042))))
(assert (forall ((x_128043 Tok_5) (x_128044 list_421))
	(diseqlist_415 (cons_415 x_128043 x_128044) nil_483)))
(assert (forall ((x_128045 Tok_5) (x_128046 list_421) (x_128047 Tok_5) (x_128048 list_421))
	(=> (diseqTok_5 x_128045 x_128047) (diseqlist_415 (cons_415 x_128045 x_128046) (cons_415 x_128047 x_128048)))))
(assert (forall ((x_128045 Tok_5) (x_128046 list_421) (x_128047 Tok_5) (x_128048 list_421))
	(=> (diseqlist_415 x_128046 x_128048) (diseqlist_415 (cons_415 x_128045 x_128046) (cons_415 x_128047 x_128048)))))
(declare-datatypes ((B_152 0)) (((SB_0 (projSB_0 B_152)) (ZB_0))))
(declare-fun diseqB_5 (B_152 B_152) Bool)
(declare-fun projSB_1 (B_152 B_152) Bool)
(declare-fun isSB_0 (B_152) Bool)
(declare-fun isZB_0 (B_152) Bool)
(assert (forall ((x_128049 B_152))
	(projSB_1 x_128049 (SB_0 x_128049))))
(assert (forall ((x_128052 B_152))
	(isSB_0 (SB_0 x_128052))))
(assert (isZB_0 ZB_0))
(assert (forall ((x_128053 B_152))
	(diseqB_5 (SB_0 x_128053) ZB_0)))
(assert (forall ((x_128054 B_152))
	(diseqB_5 ZB_0 (SB_0 x_128054))))
(assert (forall ((x_128055 B_152) (x_128056 B_152))
	(=> (diseqB_5 x_128055 x_128056) (diseqB_5 (SB_0 x_128055) (SB_0 x_128056)))))
(declare-datatypes ((A_135 0)) (((SA_0 (projSA_0 A_135)) (ZA_0))))
(declare-fun diseqA_14 (A_135 A_135) Bool)
(declare-fun projSA_1 (A_135 A_135) Bool)
(declare-fun isSA_0 (A_135) Bool)
(declare-fun isZA_0 (A_135) Bool)
(assert (forall ((x_128057 A_135))
	(projSA_1 x_128057 (SA_0 x_128057))))
(assert (forall ((x_128060 A_135))
	(isSA_0 (SA_0 x_128060))))
(assert (isZA_0 ZA_0))
(assert (forall ((x_128061 A_135))
	(diseqA_14 (SA_0 x_128061) ZA_0)))
(assert (forall ((x_128062 A_135))
	(diseqA_14 ZA_0 (SA_0 x_128062))))
(assert (forall ((x_128063 A_135) (x_128064 A_135))
	(=> (diseqA_14 x_128063 x_128064) (diseqA_14 (SA_0 x_128063) (SA_0 x_128064)))))
(declare-datatypes ((S_648 0)) (((A_136 (projA_0 A_135)) (B_153 (projB_0 B_152)))))
(declare-fun diseqS_0 (S_648 S_648) Bool)
(declare-fun projA_1 (A_135 S_648) Bool)
(declare-fun projB_1 (B_152 S_648) Bool)
(declare-fun isA_45 (S_648) Bool)
(declare-fun isB_45 (S_648) Bool)
(assert (forall ((x_128065 A_135))
	(projA_1 x_128065 (A_136 x_128065))))
(assert (forall ((x_128067 B_152))
	(projB_1 x_128067 (B_153 x_128067))))
(assert (forall ((x_128069 A_135))
	(isA_45 (A_136 x_128069))))
(assert (forall ((x_128070 B_152))
	(isB_45 (B_153 x_128070))))
(assert (forall ((x_128071 A_135) (x_128072 B_152))
	(diseqS_0 (A_136 x_128071) (B_153 x_128072))))
(assert (forall ((x_128073 B_152) (x_128074 A_135))
	(diseqS_0 (B_153 x_128073) (A_136 x_128074))))
(assert (forall ((x_128075 A_135) (x_128076 A_135))
	(=> (diseqA_14 x_128075 x_128076) (diseqS_0 (A_136 x_128075) (A_136 x_128076)))))
(assert (forall ((x_128077 B_152) (x_128078 B_152))
	(=> (diseqB_5 x_128077 x_128078) (diseqS_0 (B_153 x_128077) (B_153 x_128078)))))
(declare-fun x_128007 (list_421 list_421 list_421) Bool)
(assert (forall ((x_128013 list_421) (z_2816 Tok_5) (xs_919 list_421) (y_3285 list_421))
	(=> (x_128007 x_128013 xs_919 y_3285) (x_128007 (cons_415 z_2816 x_128013) (cons_415 z_2816 xs_919) y_3285))))
(assert (forall ((x_128014 list_421))
	(x_128007 x_128014 nil_483 x_128014)))
(declare-fun linA_0 (list_421 A_135) Bool)
(assert (linA_0 (cons_415 X_128006 (cons_415 Z_2815 (cons_415 Y_3284 nil_483))) ZA_0))
(assert (forall ((x_128016 list_421) (x_128017 list_421) (x_128018 list_421) (a_137 A_135))
	(=> (and (linA_0 x_128017 a_137) (x_128007 x_128018 x_128017 (cons_415 Y_3284 nil_483)) (x_128007 x_128016 (cons_415 X_128006 nil_483) x_128018)) (linA_0 x_128016 (SA_0 a_137)))))
(declare-fun linB_0 (list_421 B_152) Bool)
(assert (linB_0 (cons_415 X_128006 (cons_415 Z_2815 (cons_415 Y_3284 (cons_415 Y_3284 nil_483)))) ZB_0))
(assert (forall ((x_128021 list_421) (x_128022 list_421) (x_128023 list_421) (b_154 B_152))
	(=> (and (linB_0 x_128022 b_154) (x_128007 x_128023 x_128022 (cons_415 Y_3284 (cons_415 Y_3284 nil_483))) (x_128007 x_128021 (cons_415 X_128006 nil_483) x_128023)) (linB_0 x_128021 (SB_0 b_154)))))
(declare-fun linS_0 (list_421 S_648) Bool)
(assert (forall ((x_128025 list_421) (b_155 B_152))
	(=> (linB_0 x_128025 b_155) (linS_0 x_128025 (B_153 b_155)))))
(assert (forall ((x_128027 list_421) (a_138 A_135))
	(=> (linA_0 x_128027 a_138) (linS_0 x_128027 (A_136 a_138)))))
(assert (forall ((x_128029 list_421) (u_39 S_648) (v_40 S_648))
	(=> (and true (diseqS_0 u_39 v_40) (linS_0 x_128029 u_39) (linS_0 x_128029 v_40)) false)))
(check-sat)
