
(set-logic HORN)
(define-fun zero_127 () Int 0)
(define-fun succ_124 ((x Int)) Int (+ x 1))
(declare-datatypes ((Sign_10 0)) (((Pos_5) (Neg_6))))
(declare-fun diseqSign_5 (Sign_10 Sign_10) Bool)
(declare-fun isPos_5 (Sign_10) Bool)
(declare-fun isNeg_5 (Sign_10) Bool)
(assert (isPos_5 Pos_5))
(assert (isNeg_5 Neg_6))
(assert (diseqSign_5 Pos_5 Neg_6))
(assert (diseqSign_5 Neg_6 Pos_5))
(declare-fun diseqInt (Int Int) Bool)
(declare-fun p_352 (Int Int) Bool)
(declare-fun iszero_124 (Int) Bool)
(declare-fun issucc_124 (Int) Bool)
(assert (forall ((x_51536 Int))
	(p_352 x_51536 (succ_124 x_51536))))
(assert (iszero_124 zero_127))
(assert (forall ((x_51538 Int))
	(issucc_124 (succ_124 x_51538))))
(assert (forall ((x_51539 Int))
	(diseqInt zero_127 (succ_124 x_51539))))
(assert (forall ((x_51540 Int))
	(diseqInt (succ_124 x_51540) zero_127)))
(assert (forall ((x_51541 Int) (x_51542 Int))
	(=> (diseqInt x_51541 x_51542) (diseqInt (succ_124 x_51541) (succ_124 x_51542)))))
(declare-datatypes ((Integer_10 0)) (((P_351 (projP_20 Int)) (N_97 (projN_20 Int)))))
(declare-fun diseqInteger_10 (Integer_10 Integer_10) Bool)
(declare-fun projP_21 (Int Integer_10) Bool)
(declare-fun projN_21 (Int Integer_10) Bool)
(declare-fun isP_12 (Integer_10) Bool)
(declare-fun isN_10 (Integer_10) Bool)
(assert (forall ((x_51543 Int))
	(projP_21 x_51543 (P_351 x_51543))))
(assert (forall ((x_51545 Int))
	(projN_21 x_51545 (N_97 x_51545))))
(assert (forall ((x_51547 Int))
	(isP_12 (P_351 x_51547))))
(assert (forall ((x_51548 Int))
	(isN_10 (N_97 x_51548))))
(assert (forall ((x_51549 Int) (x_51550 Int))
	(diseqInteger_10 (P_351 x_51549) (N_97 x_51550))))
(assert (forall ((x_51551 Int) (x_51552 Int))
	(diseqInteger_10 (N_97 x_51551) (P_351 x_51552))))
(assert (forall ((x_51553 Int) (x_51554 Int))
	(=> (diseqInt x_51553 x_51554) (diseqInteger_10 (P_351 x_51553) (P_351 x_51554)))))
(assert (forall ((x_51555 Int) (x_51556 Int))
	(=> (diseqInt x_51555 x_51556) (diseqInteger_10 (N_97 x_51555) (N_97 x_51556)))))
(declare-fun toInteger_5 (Integer_10 Sign_10 Int) Bool)
(assert (forall ((z_1719 Int))
	(toInteger_5 (N_97 z_1719) Neg_6 (succ_124 z_1719))))
(assert (toInteger_5 (P_351 zero_127) Neg_6 zero_127))
(assert (forall ((y_1929 Int))
	(toInteger_5 (P_351 y_1929) Pos_5 y_1929)))
(declare-fun sign_11 (Sign_10 Integer_10) Bool)
(assert (forall ((z_1720 Int))
	(sign_11 Neg_6 (N_97 z_1720))))
(assert (forall ((y_1930 Int))
	(sign_11 Pos_5 (P_351 y_1930))))
(declare-fun plus_121 (Int Int Int) Bool)
(assert (forall ((x_51454 Int) (z_1721 Int) (y_1931 Int))
	(=> (plus_121 x_51454 z_1721 y_1931) (plus_121 (succ_124 x_51454) (succ_124 z_1721) y_1931))))
(assert (forall ((x_51455 Int))
	(plus_121 x_51455 zero_127 x_51455)))
(declare-fun times_31 (Int Int Int) Bool)
(assert (forall ((x_51456 Int) (x_51457 Int) (z_1722 Int) (y_1932 Int))
	(=> (and (times_31 x_51457 z_1722 y_1932) (plus_121 x_51456 y_1932 x_51457)) (times_31 x_51456 (succ_124 z_1722) y_1932))))
(assert (forall ((y_1932 Int))
	(times_31 zero_127 zero_127 y_1932)))
(declare-fun opposite_5 (Sign_10 Sign_10) Bool)
(assert (opposite_5 Pos_5 Neg_6))
(assert (opposite_5 Neg_6 Pos_5))
(declare-fun timesSign_5 (Sign_10 Sign_10 Sign_10) Bool)
(assert (forall ((x_51462 Sign_10) (y_1933 Sign_10))
	(=> (opposite_5 x_51462 y_1933) (timesSign_5 x_51462 Neg_6 y_1933))))
(assert (forall ((x_51464 Sign_10))
	(timesSign_5 x_51464 Pos_5 x_51464)))
(declare-fun absVal_5 (Int Integer_10) Bool)
(assert (forall ((x_51465 Int) (m_37 Int))
	(=> (plus_121 x_51465 (succ_124 zero_127) m_37) (absVal_5 x_51465 (N_97 m_37)))))
(assert (forall ((n_98 Int))
	(absVal_5 n_98 (P_351 n_98))))
(declare-fun times_32 (Integer_10 Integer_10 Integer_10) Bool)
(assert (forall ((x_51468 Integer_10) (x_51469 Sign_10) (x_51470 Sign_10) (x_51471 Sign_10) (x_51472 Int) (x_51473 Int) (x_51474 Int) (x_51428 Integer_10) (y_1934 Integer_10))
	(=> (and (sign_11 x_51469 x_51428) (sign_11 x_51470 y_1934) (timesSign_5 x_51471 x_51469 x_51470) (absVal_5 x_51472 x_51428) (absVal_5 x_51473 y_1934) (times_31 x_51474 x_51472 x_51473) (toInteger_5 x_51468 x_51471 x_51474)) (times_32 x_51468 x_51428 y_1934))))
(declare-fun x_51429 (Integer_10 Int Int) Bool)
(assert (forall ((x_51431 Int) (z_1723 Int) (fail_28 Integer_10))
	(=> (x_51429 fail_28 x_51431 z_1723) (x_51429 fail_28 (succ_124 x_51431) (succ_124 z_1723)))))
(assert (forall ((x_51433 Int))
	(x_51429 (N_97 (succ_124 x_51433)) zero_127 (succ_124 x_51433))))
(assert (forall ((x_51432 Int))
	(x_51429 (P_351 (succ_124 x_51432)) (succ_124 x_51432) zero_127)))
(assert (x_51429 (P_351 zero_127) zero_127 zero_127))
(declare-fun plus_122 (Integer_10 Integer_10 Integer_10) Bool)
(assert (forall ((x_51489 Int) (x_51490 Int) (n_99 Int) (m_38 Int))
	(=> (and (plus_121 x_51489 (succ_124 zero_127) m_38) (plus_121 x_51490 x_51489 n_99)) (plus_122 (N_97 x_51490) (N_97 m_38) (N_97 n_99)))))
(assert (forall ((x_51491 Integer_10) (x_51492 Int) (n_100 Int) (m_38 Int))
	(=> (and (plus_121 x_51492 (succ_124 zero_127) m_38) (x_51429 x_51491 n_100 x_51492)) (plus_122 x_51491 (N_97 m_38) (P_351 n_100)))))
(assert (forall ((x_51494 Integer_10) (x_51495 Int) (o_6 Int) (m_39 Int))
	(=> (and (plus_121 x_51495 (succ_124 zero_127) o_6) (x_51429 x_51494 m_39 x_51495)) (plus_122 x_51494 (P_351 m_39) (N_97 o_6)))))
(assert (forall ((x_51498 Int) (n_101 Int) (m_39 Int))
	(=> (plus_121 x_51498 m_39 n_101) (plus_122 (P_351 x_51498) (P_351 m_39) (P_351 n_101)))))
(assert (forall ((x_51499 Integer_10) (x_51500 Integer_10) (x_51501 Integer_10) (x_51502 Integer_10) (x_51503 Integer_10) (x_51435 Integer_10) (y_1937 Integer_10) (z_1724 Integer_10))
	(=> (and true (diseqInteger_10 x_51500 x_51503) (plus_122 x_51499 y_1937 z_1724) (times_32 x_51500 x_51435 x_51499) (times_32 x_51501 x_51435 y_1937) (times_32 x_51502 x_51435 z_1724) (plus_122 x_51503 x_51501 x_51502)) false)))
(assert (forall ((x_51504 Int) (x_51505 Int) (x_51506 Int) (x_51507 Int) (x_51436 Int) (y_1938 Int) (z_1725 Int))
	(=> (and true (diseqInt x_51505 x_51507) (times_31 x_51504 y_1938 z_1725) (times_31 x_51505 x_51436 x_51504) (times_31 x_51506 x_51436 y_1938) (times_31 x_51507 x_51506 z_1725)) false)))
(assert (forall ((x_51508 Int) (x_51509 Int) (x_51510 Int) (x_51511 Int) (x_51437 Int) (y_1939 Int) (z_1726 Int))
	(=> (and true (diseqInt x_51509 x_51511) (plus_121 x_51508 y_1939 z_1726) (plus_121 x_51509 x_51437 x_51508) (plus_121 x_51510 x_51437 y_1939) (plus_121 x_51511 x_51510 z_1726)) false)))
(assert (forall ((x_51512 Int) (x_51513 Int) (x_51438 Int) (y_1940 Int))
	(=> (and true (diseqInt x_51512 x_51513) (times_31 x_51512 x_51438 y_1940) (times_31 x_51513 y_1940 x_51438)) false)))
(assert (forall ((x_51514 Int) (x_51515 Int) (x_51439 Int) (y_1941 Int))
	(=> (and true (diseqInt x_51514 x_51515) (plus_121 x_51514 x_51439 y_1941) (plus_121 x_51515 y_1941 x_51439)) false)))
(assert (forall ((x_51516 Int) (x_51517 Int) (x_51518 Int) (x_51519 Int) (x_51520 Int) (x_51440 Int) (y_1942 Int) (z_1727 Int))
	(=> (and true (diseqInt x_51517 x_51520) (plus_121 x_51516 y_1942 z_1727) (times_31 x_51517 x_51440 x_51516) (times_31 x_51518 x_51440 y_1942) (times_31 x_51519 x_51440 z_1727) (plus_121 x_51520 x_51518 x_51519)) false)))
(assert (forall ((x_51521 Int) (x_51522 Int) (x_51523 Int) (x_51524 Int) (x_51525 Int) (x_51441 Int) (y_1943 Int) (z_1728 Int))
	(=> (and true (diseqInt x_51522 x_51525) (plus_121 x_51521 x_51441 y_1943) (times_31 x_51522 x_51521 z_1728) (times_31 x_51523 x_51441 z_1728) (times_31 x_51524 y_1943 z_1728) (plus_121 x_51525 x_51523 x_51524)) false)))
(assert (forall ((x_51526 Int) (x_51442 Int))
	(=> (and true (diseqInt x_51526 x_51442) (times_31 x_51526 x_51442 (succ_124 zero_127))) false)))
(assert (forall ((x_51527 Int) (x_51443 Int))
	(=> (and true (diseqInt x_51527 x_51443) (times_31 x_51527 (succ_124 zero_127) x_51443)) false)))
(assert (forall ((x_51528 Int) (x_51444 Int))
	(=> (and true (diseqInt x_51528 x_51444) (plus_121 x_51528 x_51444 zero_127)) false)))
(assert (forall ((x_51529 Int) (x_51445 Int))
	(=> (and true (diseqInt x_51529 x_51445) (plus_121 x_51529 zero_127 x_51445)) false)))
(assert (forall ((x_51530 Int) (x_51446 Int))
	(=> (and true (diseqInt x_51530 zero_127) (times_31 x_51530 x_51446 zero_127)) false)))
(assert (forall ((x_51531 Int) (x_51447 Int))
	(=> (and true (diseqInt x_51531 zero_127) (times_31 x_51531 zero_127 x_51447)) false)))
(check-sat)
