
(set-logic HORN)
(declare-datatypes ((Bool_442 0)) (((false_442) (true_442))))
(declare-fun diseqBool_221 (Bool_442 Bool_442) Bool)
(declare-fun isfalse_221 (Bool_442) Bool)
(declare-fun istrue_221 (Bool_442) Bool)
(assert (isfalse_221 false_442))
(assert (istrue_221 true_442))
(assert (diseqBool_221 false_442 true_442))
(assert (diseqBool_221 true_442 false_442))
(declare-fun and_448 (Bool_442 Bool_442 Bool_442) Bool)
(declare-fun or_463 (Bool_442 Bool_442 Bool_442) Bool)
(declare-fun hence_442 (Bool_442 Bool_442 Bool_442) Bool)
(declare-fun not_447 (Bool_442 Bool_442) Bool)
(assert (and_448 false_442 false_442 false_442))
(assert (and_448 false_442 true_442 false_442))
(assert (and_448 false_442 false_442 true_442))
(assert (and_448 true_442 true_442 true_442))
(assert (or_463 false_442 false_442 false_442))
(assert (or_463 true_442 true_442 false_442))
(assert (or_463 true_442 false_442 true_442))
(assert (or_463 true_442 true_442 true_442))
(assert (hence_442 true_442 false_442 false_442))
(assert (hence_442 false_442 true_442 false_442))
(assert (hence_442 true_442 false_442 true_442))
(assert (hence_442 true_442 true_442 true_442))
(assert (not_447 true_442 false_442))
(assert (not_447 false_442 true_442))
(declare-datatypes ((T_40 0)) (((A_123) (B_141) (C_79))))
(declare-fun diseqT_36 (T_40 T_40) Bool)
(declare-fun isA_43 (T_40) Bool)
(declare-fun isB_43 (T_40) Bool)
(declare-fun isC_44 (T_40) Bool)
(assert (isA_43 A_123))
(assert (isB_43 B_141))
(assert (isC_44 C_79))
(assert (diseqT_36 A_123 B_141))
(assert (diseqT_36 A_123 C_79))
(assert (diseqT_36 B_141 A_123))
(assert (diseqT_36 C_79 A_123))
(assert (diseqT_36 B_141 C_79))
(assert (diseqT_36 C_79 B_141))
(declare-datatypes ((list_401 0)) (((nil_461) (cons_395 (head_790 T_40) (tail_796 list_401)))))
(declare-fun diseqlist_395 (list_401 list_401) Bool)
(declare-fun head_791 (T_40 list_401) Bool)
(declare-fun tail_797 (list_401 list_401) Bool)
(declare-fun isnil_461 (list_401) Bool)
(declare-fun iscons_395 (list_401) Bool)
(assert (forall ((x_126351 T_40) (x_126352 list_401))
	(head_791 x_126351 (cons_395 x_126351 x_126352))))
(assert (forall ((x_126351 T_40) (x_126352 list_401))
	(tail_797 x_126352 (cons_395 x_126351 x_126352))))
(assert (isnil_461 nil_461))
(assert (forall ((x_126354 T_40) (x_126355 list_401))
	(iscons_395 (cons_395 x_126354 x_126355))))
(assert (forall ((x_126356 T_40) (x_126357 list_401))
	(diseqlist_395 nil_461 (cons_395 x_126356 x_126357))))
(assert (forall ((x_126358 T_40) (x_126359 list_401))
	(diseqlist_395 (cons_395 x_126358 x_126359) nil_461)))
(assert (forall ((x_126360 T_40) (x_126361 list_401) (x_126362 T_40) (x_126363 list_401))
	(=> (diseqT_36 x_126360 x_126362) (diseqlist_395 (cons_395 x_126360 x_126361) (cons_395 x_126362 x_126363)))))
(assert (forall ((x_126360 T_40) (x_126361 list_401) (x_126362 T_40) (x_126363 list_401))
	(=> (diseqlist_395 x_126361 x_126363) (diseqlist_395 (cons_395 x_126360 x_126361) (cons_395 x_126362 x_126363)))))
(declare-datatypes ((R_664 0)) (((Nil_462) (Eps_100) (Atom_50 (projAtom_100 T_40)) (x_126302 (proj_364 R_664) (proj_365 R_664)) (x_126303 (proj_366 R_664) (proj_367 R_664)) (Star_50 (projStar_100 R_664)))))
(declare-fun diseqR_50 (R_664 R_664) Bool)
(declare-fun projAtom_101 (T_40 R_664) Bool)
(declare-fun proj_368 (R_664 R_664) Bool)
(declare-fun proj_369 (R_664 R_664) Bool)
(declare-fun proj_370 (R_664 R_664) Bool)
(declare-fun proj_371 (R_664 R_664) Bool)
(declare-fun projStar_101 (R_664 R_664) Bool)
(declare-fun isNil_462 (R_664) Bool)
(declare-fun isEps_50 (R_664) Bool)
(declare-fun isAtom_50 (R_664) Bool)
(declare-fun isx_106 (R_664) Bool)
(declare-fun isx_107 (R_664) Bool)
(declare-fun isStar_50 (R_664) Bool)
(assert (forall ((x_126366 T_40))
	(projAtom_101 x_126366 (Atom_50 x_126366))))
(assert (forall ((x_126368 R_664) (x_126369 R_664))
	(proj_368 x_126368 (x_126302 x_126368 x_126369))))
(assert (forall ((x_126368 R_664) (x_126369 R_664))
	(proj_369 x_126369 (x_126302 x_126368 x_126369))))
(assert (forall ((x_126371 R_664) (x_126372 R_664))
	(proj_370 x_126371 (x_126303 x_126371 x_126372))))
(assert (forall ((x_126371 R_664) (x_126372 R_664))
	(proj_371 x_126372 (x_126303 x_126371 x_126372))))
(assert (forall ((x_126374 R_664))
	(projStar_101 x_126374 (Star_50 x_126374))))
(assert (isNil_462 Nil_462))
(assert (isEps_50 Eps_100))
(assert (forall ((x_126376 T_40))
	(isAtom_50 (Atom_50 x_126376))))
(assert (forall ((x_126377 R_664) (x_126378 R_664))
	(isx_106 (x_126302 x_126377 x_126378))))
(assert (forall ((x_126379 R_664) (x_126380 R_664))
	(isx_107 (x_126303 x_126379 x_126380))))
(assert (forall ((x_126381 R_664))
	(isStar_50 (Star_50 x_126381))))
(assert (diseqR_50 Nil_462 Eps_100))
(assert (forall ((x_126382 T_40))
	(diseqR_50 Nil_462 (Atom_50 x_126382))))
(assert (forall ((x_126383 R_664) (x_126384 R_664))
	(diseqR_50 Nil_462 (x_126302 x_126383 x_126384))))
(assert (forall ((x_126385 R_664) (x_126386 R_664))
	(diseqR_50 Nil_462 (x_126303 x_126385 x_126386))))
(assert (forall ((x_126387 R_664))
	(diseqR_50 Nil_462 (Star_50 x_126387))))
(assert (diseqR_50 Eps_100 Nil_462))
(assert (forall ((x_126388 T_40))
	(diseqR_50 (Atom_50 x_126388) Nil_462)))
(assert (forall ((x_126389 R_664) (x_126390 R_664))
	(diseqR_50 (x_126302 x_126389 x_126390) Nil_462)))
(assert (forall ((x_126391 R_664) (x_126392 R_664))
	(diseqR_50 (x_126303 x_126391 x_126392) Nil_462)))
(assert (forall ((x_126393 R_664))
	(diseqR_50 (Star_50 x_126393) Nil_462)))
(assert (forall ((x_126394 T_40))
	(diseqR_50 Eps_100 (Atom_50 x_126394))))
(assert (forall ((x_126395 R_664) (x_126396 R_664))
	(diseqR_50 Eps_100 (x_126302 x_126395 x_126396))))
(assert (forall ((x_126397 R_664) (x_126398 R_664))
	(diseqR_50 Eps_100 (x_126303 x_126397 x_126398))))
(assert (forall ((x_126399 R_664))
	(diseqR_50 Eps_100 (Star_50 x_126399))))
(assert (forall ((x_126400 T_40))
	(diseqR_50 (Atom_50 x_126400) Eps_100)))
(assert (forall ((x_126401 R_664) (x_126402 R_664))
	(diseqR_50 (x_126302 x_126401 x_126402) Eps_100)))
(assert (forall ((x_126403 R_664) (x_126404 R_664))
	(diseqR_50 (x_126303 x_126403 x_126404) Eps_100)))
(assert (forall ((x_126405 R_664))
	(diseqR_50 (Star_50 x_126405) Eps_100)))
(assert (forall ((x_126406 T_40) (x_126407 R_664) (x_126408 R_664))
	(diseqR_50 (Atom_50 x_126406) (x_126302 x_126407 x_126408))))
(assert (forall ((x_126409 T_40) (x_126410 R_664) (x_126411 R_664))
	(diseqR_50 (Atom_50 x_126409) (x_126303 x_126410 x_126411))))
(assert (forall ((x_126412 T_40) (x_126413 R_664))
	(diseqR_50 (Atom_50 x_126412) (Star_50 x_126413))))
(assert (forall ((x_126414 R_664) (x_126415 R_664) (x_126416 T_40))
	(diseqR_50 (x_126302 x_126414 x_126415) (Atom_50 x_126416))))
(assert (forall ((x_126417 R_664) (x_126418 R_664) (x_126419 T_40))
	(diseqR_50 (x_126303 x_126417 x_126418) (Atom_50 x_126419))))
(assert (forall ((x_126420 R_664) (x_126421 T_40))
	(diseqR_50 (Star_50 x_126420) (Atom_50 x_126421))))
(assert (forall ((x_126422 R_664) (x_126423 R_664) (x_126424 R_664) (x_126425 R_664))
	(diseqR_50 (x_126302 x_126422 x_126423) (x_126303 x_126424 x_126425))))
(assert (forall ((x_126426 R_664) (x_126427 R_664) (x_126428 R_664))
	(diseqR_50 (x_126302 x_126426 x_126427) (Star_50 x_126428))))
(assert (forall ((x_126429 R_664) (x_126430 R_664) (x_126431 R_664) (x_126432 R_664))
	(diseqR_50 (x_126303 x_126429 x_126430) (x_126302 x_126431 x_126432))))
(assert (forall ((x_126433 R_664) (x_126434 R_664) (x_126435 R_664))
	(diseqR_50 (Star_50 x_126433) (x_126302 x_126434 x_126435))))
(assert (forall ((x_126436 R_664) (x_126437 R_664) (x_126438 R_664))
	(diseqR_50 (x_126303 x_126436 x_126437) (Star_50 x_126438))))
(assert (forall ((x_126439 R_664) (x_126440 R_664) (x_126441 R_664))
	(diseqR_50 (Star_50 x_126439) (x_126303 x_126440 x_126441))))
(assert (forall ((x_126442 T_40) (x_126443 T_40))
	(=> (diseqT_36 x_126442 x_126443) (diseqR_50 (Atom_50 x_126442) (Atom_50 x_126443)))))
(assert (forall ((x_126444 R_664) (x_126445 R_664) (x_126446 R_664) (x_126447 R_664))
	(=> (diseqR_50 x_126444 x_126446) (diseqR_50 (x_126302 x_126444 x_126445) (x_126302 x_126446 x_126447)))))
(assert (forall ((x_126444 R_664) (x_126445 R_664) (x_126446 R_664) (x_126447 R_664))
	(=> (diseqR_50 x_126445 x_126447) (diseqR_50 (x_126302 x_126444 x_126445) (x_126302 x_126446 x_126447)))))
(assert (forall ((x_126448 R_664) (x_126449 R_664) (x_126450 R_664) (x_126451 R_664))
	(=> (diseqR_50 x_126448 x_126450) (diseqR_50 (x_126303 x_126448 x_126449) (x_126303 x_126450 x_126451)))))
(assert (forall ((x_126448 R_664) (x_126449 R_664) (x_126450 R_664) (x_126451 R_664))
	(=> (diseqR_50 x_126449 x_126451) (diseqR_50 (x_126303 x_126448 x_126449) (x_126303 x_126450 x_126451)))))
(assert (forall ((x_126452 R_664) (x_126453 R_664))
	(=> (diseqR_50 x_126452 x_126453) (diseqR_50 (Star_50 x_126452) (Star_50 x_126453)))))
(declare-fun eps_101 (Bool_442 R_664) Bool)
(assert (forall ((y_3205 R_664))
	(eps_101 true_442 (Star_50 y_3205))))
(assert (forall ((x_126311 Bool_442) (x_126312 Bool_442) (x_126313 Bool_442) (r_665 R_664) (q_380 R_664))
	(=> (and (eps_101 x_126312 r_665) (eps_101 x_126313 q_380) (and_448 x_126311 x_126312 x_126313)) (eps_101 x_126311 (x_126303 r_665 q_380)))))
(assert (forall ((x_126314 Bool_442) (x_126315 Bool_442) (x_126316 Bool_442) (p_611 R_664) (q_381 R_664))
	(=> (and (eps_101 x_126315 p_611) (eps_101 x_126316 q_381) (or_463 x_126314 x_126315 x_126316)) (eps_101 x_126314 (x_126302 p_611 q_381)))))
(assert (eps_101 true_442 Eps_100))
(assert (forall ((x_126305 R_664) (x_126309 T_40))
	(eps_101 false_442 (Atom_50 x_126309))))
(assert (forall ((x_126305 R_664))
	(eps_101 false_442 Nil_462)))
(declare-fun step_50 (R_664 R_664 T_40) Bool)
(assert (forall ((x_126321 R_664) (p_612 R_664) (y_3206 T_40))
	(=> (step_50 x_126321 p_612 y_3206) (step_50 (x_126303 x_126321 (Star_50 p_612)) (Star_50 p_612) y_3206))))
(assert (forall ((x_126324 R_664) (x_126325 R_664) (r_666 R_664) (q_382 R_664) (y_3206 T_40))
	(=> (and (step_50 x_126324 r_666 y_3206) (step_50 x_126325 q_382 y_3206) (eps_101 true_442 r_666)) (step_50 (x_126302 (x_126303 x_126324 q_382) x_126325) (x_126303 r_666 q_382) y_3206))))
(assert (forall ((x_126328 R_664) (r_666 R_664) (q_382 R_664) (y_3206 T_40))
	(=> (and (step_50 x_126328 r_666 y_3206) (eps_101 false_442 r_666)) (step_50 (x_126302 (x_126303 x_126328 q_382) Nil_462) (x_126303 r_666 q_382) y_3206))))
(assert (forall ((x_126330 R_664) (x_126331 R_664) (p_613 R_664) (q_383 R_664) (y_3206 T_40))
	(=> (and (step_50 x_126330 p_613 y_3206) (step_50 x_126331 q_383 y_3206)) (step_50 (x_126302 x_126330 x_126331) (x_126302 p_613 q_383) y_3206))))
(assert (forall ((b_142 T_40))
	(step_50 Eps_100 (Atom_50 b_142) b_142)))
(assert (forall ((b_142 T_40) (y_3206 T_40))
	(=> (diseqT_36 b_142 y_3206) (step_50 Nil_462 (Atom_50 b_142) y_3206))))
(assert (forall ((x_126307 R_664) (y_3206 T_40))
	(step_50 Nil_462 Eps_100 y_3206)))
(assert (forall ((x_126307 R_664) (y_3206 T_40))
	(step_50 Nil_462 Nil_462 y_3206)))
(declare-fun rec_36 (Bool_442 R_664 list_401) Bool)
(assert (forall ((x_126336 Bool_442) (x_126337 R_664) (z_2744 T_40) (xs_897 list_401) (x_126308 R_664))
	(=> (and (step_50 x_126337 x_126308 z_2744) (rec_36 x_126336 x_126337 xs_897)) (rec_36 x_126336 x_126308 (cons_395 z_2744 xs_897)))))
(assert (forall ((x_126339 Bool_442) (x_126308 R_664))
	(=> (eps_101 x_126339 x_126308) (rec_36 x_126339 x_126308 nil_461))))
(assert (forall ((p_614 R_664))
	(=> (and true (rec_36 true_442 p_614 (cons_395 A_123 (cons_395 A_123 (cons_395 B_141 (cons_395 B_141 nil_461)))))) false)))
(check-sat)
