
(set-logic HORN)
(declare-fun Z_2510 () Int)
(declare-fun S_583 (Int) Int)
(declare-fun diseqInt (Int Int) Bool)
(declare-fun unS_827 (Int Int) Bool)
(declare-fun isZ_536 (Int) Bool)
(declare-fun isS_536 (Int) Bool)
(assert (forall ((x_96904 Int))
	(unS_827 x_96904 (S_583 x_96904))))
(assert (isZ_536 Z_2510))
(assert (forall ((x_96906 Int))
	(isS_536 (S_583 x_96906))))
(assert (forall ((x_96907 Int))
	(diseqInt Z_2510 (S_583 x_96907))))
(assert (forall ((x_96908 Int))
	(diseqInt (S_583 x_96908) Z_2510)))
(assert (forall ((x_96909 Int) (x_96910 Int))
	(=> (diseqInt x_96909 x_96910) (diseqInt (S_583 x_96909) (S_583 x_96910)))))
(declare-fun add_441 (Int Int Int) Bool)
(declare-fun minus_434 (Int Int Int) Bool)
(declare-fun le_413 (Int Int) Bool)
(declare-fun ge_413 (Int Int) Bool)
(declare-fun lt_433 (Int Int) Bool)
(declare-fun gt_416 (Int Int) Bool)
(declare-fun mult_414 (Int Int Int) Bool)
(declare-fun div_413 (Int Int Int) Bool)
(declare-fun mod_415 (Int Int Int) Bool)
(assert (forall ((y_2864 Int))
	(add_441 y_2864 Z_2510 y_2864)))
(assert (forall ((x_96894 Int) (y_2864 Int) (r_569 Int))
	(=> (add_441 r_569 x_96894 y_2864) (add_441 (S_583 r_569) (S_583 x_96894) y_2864))))
(assert (forall ((y_2864 Int))
	(minus_434 Z_2510 Z_2510 y_2864)))
(assert (forall ((x_96894 Int) (y_2864 Int) (r_569 Int))
	(=> (minus_434 r_569 x_96894 y_2864) (minus_434 (S_583 r_569) (S_583 x_96894) y_2864))))
(assert (forall ((y_2864 Int))
	(le_413 Z_2510 y_2864)))
(assert (forall ((x_96894 Int) (y_2864 Int))
	(=> (le_413 x_96894 y_2864) (le_413 (S_583 x_96894) (S_583 y_2864)))))
(assert (forall ((y_2864 Int))
	(ge_413 y_2864 Z_2510)))
(assert (forall ((x_96894 Int) (y_2864 Int))
	(=> (ge_413 x_96894 y_2864) (ge_413 (S_583 x_96894) (S_583 y_2864)))))
(assert (forall ((y_2864 Int))
	(lt_433 Z_2510 (S_583 y_2864))))
(assert (forall ((x_96894 Int) (y_2864 Int))
	(=> (lt_433 x_96894 y_2864) (lt_433 (S_583 x_96894) (S_583 y_2864)))))
(assert (forall ((y_2864 Int))
	(gt_416 (S_583 y_2864) Z_2510)))
(assert (forall ((x_96894 Int) (y_2864 Int))
	(=> (gt_416 x_96894 y_2864) (gt_416 (S_583 x_96894) (S_583 y_2864)))))
(assert (forall ((y_2864 Int))
	(mult_414 Z_2510 Z_2510 y_2864)))
(assert (forall ((x_96894 Int) (y_2864 Int) (r_569 Int) (z_2511 Int))
	(=> (and (mult_414 r_569 x_96894 y_2864) (add_441 z_2511 r_569 y_2864)) (mult_414 z_2511 (S_583 x_96894) y_2864))))
(assert (forall ((x_96894 Int) (y_2864 Int))
	(=> (lt_433 x_96894 y_2864) (div_413 Z_2510 x_96894 y_2864))))
(assert (forall ((x_96894 Int) (y_2864 Int) (r_569 Int) (z_2511 Int))
	(=> (and (ge_413 x_96894 y_2864) (minus_434 z_2511 x_96894 y_2864) (div_413 r_569 z_2511 y_2864)) (div_413 (S_583 r_569) x_96894 y_2864))))
(assert (forall ((x_96894 Int) (y_2864 Int))
	(=> (lt_433 x_96894 y_2864) (mod_415 x_96894 x_96894 y_2864))))
(assert (forall ((x_96894 Int) (y_2864 Int) (r_569 Int) (z_2511 Int))
	(=> (and (ge_413 x_96894 y_2864) (minus_434 z_2511 x_96894 y_2864) (mod_415 r_569 z_2511 y_2864)) (mod_415 r_569 x_96894 y_2864))))
(declare-datatypes ((Bool_413 0)) (((false_413) (true_413))))
(declare-fun diseqBool_199 (Bool_413 Bool_413) Bool)
(declare-fun isfalse_199 (Bool_413) Bool)
(declare-fun istrue_199 (Bool_413) Bool)
(assert (isfalse_199 false_413))
(assert (istrue_199 true_413))
(assert (diseqBool_199 false_413 true_413))
(assert (diseqBool_199 true_413 false_413))
(declare-fun and_417 (Bool_413 Bool_413 Bool_413) Bool)
(declare-fun or_427 (Bool_413 Bool_413 Bool_413) Bool)
(declare-fun hence_413 (Bool_413 Bool_413 Bool_413) Bool)
(declare-fun not_418 (Bool_413 Bool_413) Bool)
(assert (and_417 false_413 false_413 false_413))
(assert (and_417 false_413 true_413 false_413))
(assert (and_417 false_413 false_413 true_413))
(assert (and_417 true_413 true_413 true_413))
(assert (or_427 false_413 false_413 false_413))
(assert (or_427 true_413 true_413 false_413))
(assert (or_427 true_413 false_413 true_413))
(assert (or_427 true_413 true_413 true_413))
(assert (hence_413 true_413 false_413 false_413))
(assert (hence_413 false_413 true_413 false_413))
(assert (hence_413 true_413 false_413 true_413))
(assert (hence_413 true_413 true_413 true_413))
(assert (not_418 true_413 false_413))
(assert (not_418 false_413 true_413))
(declare-datatypes ((T_22 0)) (((A_100) (B_100) (C_55))))
(declare-fun diseqT_21 (T_22 T_22) Bool)
(declare-fun isA_28 (T_22) Bool)
(declare-fun isB_28 (T_22) Bool)
(declare-fun isC_29 (T_22) Bool)
(assert (isA_28 A_100))
(assert (isB_28 B_100))
(assert (isC_29 C_55))
(assert (diseqT_21 A_100 B_100))
(assert (diseqT_21 A_100 C_55))
(assert (diseqT_21 B_100 A_100))
(assert (diseqT_21 C_55 A_100))
(assert (diseqT_21 B_100 C_55))
(assert (diseqT_21 C_55 B_100))
(declare-datatypes ((list_348 0)) (((nil_394) (cons_343 (head_686 T_22) (tail_691 list_348)))))
(declare-fun diseqlist_343 (list_348 list_348) Bool)
(declare-fun head_687 (T_22 list_348) Bool)
(declare-fun tail_692 (list_348 list_348) Bool)
(declare-fun isnil_394 (list_348) Bool)
(declare-fun iscons_343 (list_348) Bool)
(assert (forall ((x_96917 T_22) (x_96918 list_348))
	(head_687 x_96917 (cons_343 x_96917 x_96918))))
(assert (forall ((x_96917 T_22) (x_96918 list_348))
	(tail_692 x_96918 (cons_343 x_96917 x_96918))))
(assert (isnil_394 nil_394))
(assert (forall ((x_96920 T_22) (x_96921 list_348))
	(iscons_343 (cons_343 x_96920 x_96921))))
(assert (forall ((x_96922 T_22) (x_96923 list_348))
	(diseqlist_343 nil_394 (cons_343 x_96922 x_96923))))
(assert (forall ((x_96924 T_22) (x_96925 list_348))
	(diseqlist_343 (cons_343 x_96924 x_96925) nil_394)))
(assert (forall ((x_96926 T_22) (x_96927 list_348) (x_96928 T_22) (x_96929 list_348))
	(=> (diseqT_21 x_96926 x_96928) (diseqlist_343 (cons_343 x_96926 x_96927) (cons_343 x_96928 x_96929)))))
(assert (forall ((x_96926 T_22) (x_96927 list_348) (x_96928 T_22) (x_96929 list_348))
	(=> (diseqlist_343 x_96927 x_96929) (diseqlist_343 (cons_343 x_96926 x_96927) (cons_343 x_96928 x_96929)))))
(declare-datatypes ((R_566 0)) (((Nil_395) (Eps_70) (Atom_35 (projAtom_70 T_22)) (x_92435 (proj_220 R_566) (proj_221 R_566)) (x_92436 (proj_222 R_566) (proj_223 R_566)) (x_92437 (proj_224 R_566) (proj_225 R_566)) (Star_35 (projStar_70 R_566)))))
(declare-fun diseqR_35 (R_566 R_566) Bool)
(declare-fun projAtom_71 (T_22 R_566) Bool)
(declare-fun proj_226 (R_566 R_566) Bool)
(declare-fun proj_227 (R_566 R_566) Bool)
(declare-fun proj_228 (R_566 R_566) Bool)
(declare-fun proj_229 (R_566 R_566) Bool)
(declare-fun proj_230 (R_566 R_566) Bool)
(declare-fun proj_231 (R_566 R_566) Bool)
(declare-fun projStar_71 (R_566 R_566) Bool)
(declare-fun isNil_395 (R_566) Bool)
(declare-fun isEps_35 (R_566) Bool)
(declare-fun isAtom_35 (R_566) Bool)
(declare-fun isx_70 (R_566) Bool)
(declare-fun isx_71 (R_566) Bool)
(declare-fun isx_72 (R_566) Bool)
(declare-fun isStar_35 (R_566) Bool)
(assert (forall ((x_96932 T_22))
	(projAtom_71 x_96932 (Atom_35 x_96932))))
(assert (forall ((x_96934 R_566) (x_96935 R_566))
	(proj_226 x_96934 (x_92435 x_96934 x_96935))))
(assert (forall ((x_96934 R_566) (x_96935 R_566))
	(proj_227 x_96935 (x_92435 x_96934 x_96935))))
(assert (forall ((x_96937 R_566) (x_96938 R_566))
	(proj_228 x_96937 (x_92436 x_96937 x_96938))))
(assert (forall ((x_96937 R_566) (x_96938 R_566))
	(proj_229 x_96938 (x_92436 x_96937 x_96938))))
(assert (forall ((x_96940 R_566) (x_96941 R_566))
	(proj_230 x_96940 (x_92437 x_96940 x_96941))))
(assert (forall ((x_96940 R_566) (x_96941 R_566))
	(proj_231 x_96941 (x_92437 x_96940 x_96941))))
(assert (forall ((x_96943 R_566))
	(projStar_71 x_96943 (Star_35 x_96943))))
(assert (isNil_395 Nil_395))
(assert (isEps_35 Eps_70))
(assert (forall ((x_96945 T_22))
	(isAtom_35 (Atom_35 x_96945))))
(assert (forall ((x_96946 R_566) (x_96947 R_566))
	(isx_70 (x_92435 x_96946 x_96947))))
(assert (forall ((x_96948 R_566) (x_96949 R_566))
	(isx_71 (x_92436 x_96948 x_96949))))
(assert (forall ((x_96950 R_566) (x_96951 R_566))
	(isx_72 (x_92437 x_96950 x_96951))))
(assert (forall ((x_96952 R_566))
	(isStar_35 (Star_35 x_96952))))
(assert (diseqR_35 Nil_395 Eps_70))
(assert (forall ((x_96953 T_22))
	(diseqR_35 Nil_395 (Atom_35 x_96953))))
(assert (forall ((x_96954 R_566) (x_96955 R_566))
	(diseqR_35 Nil_395 (x_92435 x_96954 x_96955))))
(assert (forall ((x_96956 R_566) (x_96957 R_566))
	(diseqR_35 Nil_395 (x_92436 x_96956 x_96957))))
(assert (forall ((x_96958 R_566) (x_96959 R_566))
	(diseqR_35 Nil_395 (x_92437 x_96958 x_96959))))
(assert (forall ((x_96960 R_566))
	(diseqR_35 Nil_395 (Star_35 x_96960))))
(assert (diseqR_35 Eps_70 Nil_395))
(assert (forall ((x_96961 T_22))
	(diseqR_35 (Atom_35 x_96961) Nil_395)))
(assert (forall ((x_96962 R_566) (x_96963 R_566))
	(diseqR_35 (x_92435 x_96962 x_96963) Nil_395)))
(assert (forall ((x_96964 R_566) (x_96965 R_566))
	(diseqR_35 (x_92436 x_96964 x_96965) Nil_395)))
(assert (forall ((x_96966 R_566) (x_96967 R_566))
	(diseqR_35 (x_92437 x_96966 x_96967) Nil_395)))
(assert (forall ((x_96968 R_566))
	(diseqR_35 (Star_35 x_96968) Nil_395)))
(assert (forall ((x_96969 T_22))
	(diseqR_35 Eps_70 (Atom_35 x_96969))))
(assert (forall ((x_96970 R_566) (x_96971 R_566))
	(diseqR_35 Eps_70 (x_92435 x_96970 x_96971))))
(assert (forall ((x_96972 R_566) (x_96973 R_566))
	(diseqR_35 Eps_70 (x_92436 x_96972 x_96973))))
(assert (forall ((x_96974 R_566) (x_96975 R_566))
	(diseqR_35 Eps_70 (x_92437 x_96974 x_96975))))
(assert (forall ((x_96976 R_566))
	(diseqR_35 Eps_70 (Star_35 x_96976))))
(assert (forall ((x_96977 T_22))
	(diseqR_35 (Atom_35 x_96977) Eps_70)))
(assert (forall ((x_96978 R_566) (x_96979 R_566))
	(diseqR_35 (x_92435 x_96978 x_96979) Eps_70)))
(assert (forall ((x_96980 R_566) (x_96981 R_566))
	(diseqR_35 (x_92436 x_96980 x_96981) Eps_70)))
(assert (forall ((x_96982 R_566) (x_96983 R_566))
	(diseqR_35 (x_92437 x_96982 x_96983) Eps_70)))
(assert (forall ((x_96984 R_566))
	(diseqR_35 (Star_35 x_96984) Eps_70)))
(assert (forall ((x_96985 T_22) (x_96986 R_566) (x_96987 R_566))
	(diseqR_35 (Atom_35 x_96985) (x_92435 x_96986 x_96987))))
(assert (forall ((x_96988 T_22) (x_96989 R_566) (x_96990 R_566))
	(diseqR_35 (Atom_35 x_96988) (x_92436 x_96989 x_96990))))
(assert (forall ((x_96991 T_22) (x_96992 R_566) (x_96993 R_566))
	(diseqR_35 (Atom_35 x_96991) (x_92437 x_96992 x_96993))))
(assert (forall ((x_96994 T_22) (x_96995 R_566))
	(diseqR_35 (Atom_35 x_96994) (Star_35 x_96995))))
(assert (forall ((x_96996 R_566) (x_96997 R_566) (x_96998 T_22))
	(diseqR_35 (x_92435 x_96996 x_96997) (Atom_35 x_96998))))
(assert (forall ((x_96999 R_566) (x_97000 R_566) (x_97001 T_22))
	(diseqR_35 (x_92436 x_96999 x_97000) (Atom_35 x_97001))))
(assert (forall ((x_97002 R_566) (x_97003 R_566) (x_97004 T_22))
	(diseqR_35 (x_92437 x_97002 x_97003) (Atom_35 x_97004))))
(assert (forall ((x_97005 R_566) (x_97006 T_22))
	(diseqR_35 (Star_35 x_97005) (Atom_35 x_97006))))
(assert (forall ((x_97007 R_566) (x_97008 R_566) (x_97009 R_566) (x_97010 R_566))
	(diseqR_35 (x_92435 x_97007 x_97008) (x_92436 x_97009 x_97010))))
(assert (forall ((x_97011 R_566) (x_97012 R_566) (x_97013 R_566) (x_97014 R_566))
	(diseqR_35 (x_92435 x_97011 x_97012) (x_92437 x_97013 x_97014))))
(assert (forall ((x_97015 R_566) (x_97016 R_566) (x_97017 R_566))
	(diseqR_35 (x_92435 x_97015 x_97016) (Star_35 x_97017))))
(assert (forall ((x_97018 R_566) (x_97019 R_566) (x_97020 R_566) (x_97021 R_566))
	(diseqR_35 (x_92436 x_97018 x_97019) (x_92435 x_97020 x_97021))))
(assert (forall ((x_97022 R_566) (x_97023 R_566) (x_97024 R_566) (x_97025 R_566))
	(diseqR_35 (x_92437 x_97022 x_97023) (x_92435 x_97024 x_97025))))
(assert (forall ((x_97026 R_566) (x_97027 R_566) (x_97028 R_566))
	(diseqR_35 (Star_35 x_97026) (x_92435 x_97027 x_97028))))
(assert (forall ((x_97029 R_566) (x_97030 R_566) (x_97031 R_566) (x_97032 R_566))
	(diseqR_35 (x_92436 x_97029 x_97030) (x_92437 x_97031 x_97032))))
(assert (forall ((x_97033 R_566) (x_97034 R_566) (x_97035 R_566))
	(diseqR_35 (x_92436 x_97033 x_97034) (Star_35 x_97035))))
(assert (forall ((x_97036 R_566) (x_97037 R_566) (x_97038 R_566) (x_97039 R_566))
	(diseqR_35 (x_92437 x_97036 x_97037) (x_92436 x_97038 x_97039))))
(assert (forall ((x_97040 R_566) (x_97041 R_566) (x_97042 R_566))
	(diseqR_35 (Star_35 x_97040) (x_92436 x_97041 x_97042))))
(assert (forall ((x_97043 R_566) (x_97044 R_566) (x_97045 R_566))
	(diseqR_35 (x_92437 x_97043 x_97044) (Star_35 x_97045))))
(assert (forall ((x_97046 R_566) (x_97047 R_566) (x_97048 R_566))
	(diseqR_35 (Star_35 x_97046) (x_92437 x_97047 x_97048))))
(assert (forall ((x_97049 T_22) (x_97050 T_22))
	(=> (diseqT_21 x_97049 x_97050) (diseqR_35 (Atom_35 x_97049) (Atom_35 x_97050)))))
(assert (forall ((x_97051 R_566) (x_97052 R_566) (x_97053 R_566) (x_97054 R_566))
	(=> (diseqR_35 x_97051 x_97053) (diseqR_35 (x_92435 x_97051 x_97052) (x_92435 x_97053 x_97054)))))
(assert (forall ((x_97051 R_566) (x_97052 R_566) (x_97053 R_566) (x_97054 R_566))
	(=> (diseqR_35 x_97052 x_97054) (diseqR_35 (x_92435 x_97051 x_97052) (x_92435 x_97053 x_97054)))))
(assert (forall ((x_97055 R_566) (x_97056 R_566) (x_97057 R_566) (x_97058 R_566))
	(=> (diseqR_35 x_97055 x_97057) (diseqR_35 (x_92436 x_97055 x_97056) (x_92436 x_97057 x_97058)))))
(assert (forall ((x_97055 R_566) (x_97056 R_566) (x_97057 R_566) (x_97058 R_566))
	(=> (diseqR_35 x_97056 x_97058) (diseqR_35 (x_92436 x_97055 x_97056) (x_92436 x_97057 x_97058)))))
(assert (forall ((x_97059 R_566) (x_97060 R_566) (x_97061 R_566) (x_97062 R_566))
	(=> (diseqR_35 x_97059 x_97061) (diseqR_35 (x_92437 x_97059 x_97060) (x_92437 x_97061 x_97062)))))
(assert (forall ((x_97059 R_566) (x_97060 R_566) (x_97061 R_566) (x_97062 R_566))
	(=> (diseqR_35 x_97060 x_97062) (diseqR_35 (x_92437 x_97059 x_97060) (x_92437 x_97061 x_97062)))))
(assert (forall ((x_97063 R_566) (x_97064 R_566))
	(=> (diseqR_35 x_97063 x_97064) (diseqR_35 (Star_35 x_97063) (Star_35 x_97064)))))
(declare-fun x_92438 (R_566 R_566 R_566) Bool)
(assert (forall ((y_2858 R_566))
	(x_92438 Nil_395 Nil_395 y_2858)))
(assert (forall ((x_92440 R_566) (x_92864 T_22))
	(x_92438 Nil_395 (Atom_35 x_92864) Nil_395)))
(assert (forall ((x_92440 R_566))
	(x_92438 Nil_395 Eps_70 Nil_395)))
(assert (forall ((x_92440 R_566) (x_92865 R_566))
	(x_92438 Nil_395 (Star_35 x_92865) Nil_395)))
(assert (forall ((x_92440 R_566) (x_92866 R_566) (x_92867 R_566))
	(x_92438 Nil_395 (x_92435 x_92866 x_92867) Nil_395)))
(assert (forall ((x_92440 R_566) (x_92868 R_566) (x_92869 R_566))
	(x_92438 Nil_395 (x_92436 x_92868 x_92869) Nil_395)))
(assert (forall ((x_92440 R_566) (x_92870 R_566) (x_92871 R_566))
	(x_92438 Nil_395 (x_92437 x_92870 x_92871) Nil_395)))
(assert (forall ((x_92441 R_566) (x_92520 T_22) (x_92440 R_566))
	(x_92438 (Atom_35 x_92520) Eps_70 (Atom_35 x_92520))))
(assert (forall ((x_92441 R_566) (x_92440 R_566))
	(x_92438 Eps_70 Eps_70 Eps_70)))
(assert (forall ((x_92441 R_566) (x_92521 R_566) (x_92440 R_566))
	(x_92438 (Star_35 x_92521) Eps_70 (Star_35 x_92521))))
(assert (forall ((x_92441 R_566) (x_92522 R_566) (x_92523 R_566) (x_92440 R_566))
	(x_92438 (x_92435 x_92522 x_92523) Eps_70 (x_92435 x_92522 x_92523))))
(assert (forall ((x_92441 R_566) (x_92524 R_566) (x_92525 R_566) (x_92440 R_566))
	(x_92438 (x_92436 x_92524 x_92525) Eps_70 (x_92436 x_92524 x_92525))))
(assert (forall ((x_92441 R_566) (x_92526 R_566) (x_92527 R_566) (x_92440 R_566))
	(x_92438 (x_92437 x_92526 x_92527) Eps_70 (x_92437 x_92526 x_92527))))
(assert (forall ((x_92442 R_566) (x_92464 T_22) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (Atom_35 x_92464) (Atom_35 x_92464) Eps_70)))
(assert (forall ((x_92442 R_566) (x_92465 R_566) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (Star_35 x_92465) (Star_35 x_92465) Eps_70)))
(assert (forall ((x_92442 R_566) (x_92466 R_566) (x_92467 R_566) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (x_92435 x_92466 x_92467) (x_92435 x_92466 x_92467) Eps_70)))
(assert (forall ((x_92442 R_566) (x_92468 R_566) (x_92469 R_566) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (x_92436 x_92468 x_92469) (x_92436 x_92468 x_92469) Eps_70)))
(assert (forall ((x_92442 R_566) (x_92470 R_566) (x_92471 R_566) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (x_92437 x_92470 x_92471) (x_92437 x_92470 x_92471) Eps_70)))
(assert (forall ((x_92443 R_566) (x_92456 T_22) (x_92442 R_566) (x_92472 T_22) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (x_92437 (Atom_35 x_92472) (Atom_35 x_92456)) (Atom_35 x_92472) (Atom_35 x_92456))))
(assert (forall ((x_92443 R_566) (x_92456 T_22) (x_92442 R_566) (x_92473 R_566) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (x_92437 (Star_35 x_92473) (Atom_35 x_92456)) (Star_35 x_92473) (Atom_35 x_92456))))
(assert (forall ((x_92443 R_566) (x_92456 T_22) (x_92442 R_566) (x_92474 R_566) (x_92475 R_566) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (x_92437 (x_92435 x_92474 x_92475) (Atom_35 x_92456)) (x_92435 x_92474 x_92475) (Atom_35 x_92456))))
(assert (forall ((x_92443 R_566) (x_92456 T_22) (x_92442 R_566) (x_92476 R_566) (x_92477 R_566) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (x_92437 (x_92436 x_92476 x_92477) (Atom_35 x_92456)) (x_92436 x_92476 x_92477) (Atom_35 x_92456))))
(assert (forall ((x_92443 R_566) (x_92456 T_22) (x_92442 R_566) (x_92478 R_566) (x_92479 R_566) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (x_92437 (x_92437 x_92478 x_92479) (Atom_35 x_92456)) (x_92437 x_92478 x_92479) (Atom_35 x_92456))))
(assert (forall ((x_92443 R_566) (x_92457 R_566) (x_92442 R_566) (x_92488 T_22) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (x_92437 (Atom_35 x_92488) (Star_35 x_92457)) (Atom_35 x_92488) (Star_35 x_92457))))
(assert (forall ((x_92443 R_566) (x_92457 R_566) (x_92442 R_566) (x_92489 R_566) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (x_92437 (Star_35 x_92489) (Star_35 x_92457)) (Star_35 x_92489) (Star_35 x_92457))))
(assert (forall ((x_92443 R_566) (x_92457 R_566) (x_92442 R_566) (x_92490 R_566) (x_92491 R_566) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (x_92437 (x_92435 x_92490 x_92491) (Star_35 x_92457)) (x_92435 x_92490 x_92491) (Star_35 x_92457))))
(assert (forall ((x_92443 R_566) (x_92457 R_566) (x_92442 R_566) (x_92492 R_566) (x_92493 R_566) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (x_92437 (x_92436 x_92492 x_92493) (Star_35 x_92457)) (x_92436 x_92492 x_92493) (Star_35 x_92457))))
(assert (forall ((x_92443 R_566) (x_92457 R_566) (x_92442 R_566) (x_92494 R_566) (x_92495 R_566) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (x_92437 (x_92437 x_92494 x_92495) (Star_35 x_92457)) (x_92437 x_92494 x_92495) (Star_35 x_92457))))
(assert (forall ((x_92443 R_566) (x_92458 R_566) (x_92459 R_566) (x_92442 R_566) (x_92496 T_22) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (x_92437 (Atom_35 x_92496) (x_92435 x_92458 x_92459)) (Atom_35 x_92496) (x_92435 x_92458 x_92459))))
(assert (forall ((x_92443 R_566) (x_92458 R_566) (x_92459 R_566) (x_92442 R_566) (x_92497 R_566) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (x_92437 (Star_35 x_92497) (x_92435 x_92458 x_92459)) (Star_35 x_92497) (x_92435 x_92458 x_92459))))
(assert (forall ((x_92443 R_566) (x_92458 R_566) (x_92459 R_566) (x_92442 R_566) (x_92498 R_566) (x_92499 R_566) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (x_92437 (x_92435 x_92498 x_92499) (x_92435 x_92458 x_92459)) (x_92435 x_92498 x_92499) (x_92435 x_92458 x_92459))))
(assert (forall ((x_92443 R_566) (x_92458 R_566) (x_92459 R_566) (x_92442 R_566) (x_92500 R_566) (x_92501 R_566) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (x_92437 (x_92436 x_92500 x_92501) (x_92435 x_92458 x_92459)) (x_92436 x_92500 x_92501) (x_92435 x_92458 x_92459))))
(assert (forall ((x_92443 R_566) (x_92458 R_566) (x_92459 R_566) (x_92442 R_566) (x_92502 R_566) (x_92503 R_566) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (x_92437 (x_92437 x_92502 x_92503) (x_92435 x_92458 x_92459)) (x_92437 x_92502 x_92503) (x_92435 x_92458 x_92459))))
(assert (forall ((x_92443 R_566) (x_92460 R_566) (x_92461 R_566) (x_92442 R_566) (x_92504 T_22) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (x_92437 (Atom_35 x_92504) (x_92436 x_92460 x_92461)) (Atom_35 x_92504) (x_92436 x_92460 x_92461))))
(assert (forall ((x_92443 R_566) (x_92460 R_566) (x_92461 R_566) (x_92442 R_566) (x_92505 R_566) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (x_92437 (Star_35 x_92505) (x_92436 x_92460 x_92461)) (Star_35 x_92505) (x_92436 x_92460 x_92461))))
(assert (forall ((x_92443 R_566) (x_92460 R_566) (x_92461 R_566) (x_92442 R_566) (x_92506 R_566) (x_92507 R_566) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (x_92437 (x_92435 x_92506 x_92507) (x_92436 x_92460 x_92461)) (x_92435 x_92506 x_92507) (x_92436 x_92460 x_92461))))
(assert (forall ((x_92443 R_566) (x_92460 R_566) (x_92461 R_566) (x_92442 R_566) (x_92508 R_566) (x_92509 R_566) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (x_92437 (x_92436 x_92508 x_92509) (x_92436 x_92460 x_92461)) (x_92436 x_92508 x_92509) (x_92436 x_92460 x_92461))))
(assert (forall ((x_92443 R_566) (x_92460 R_566) (x_92461 R_566) (x_92442 R_566) (x_92510 R_566) (x_92511 R_566) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (x_92437 (x_92437 x_92510 x_92511) (x_92436 x_92460 x_92461)) (x_92437 x_92510 x_92511) (x_92436 x_92460 x_92461))))
(assert (forall ((x_92443 R_566) (x_92462 R_566) (x_92463 R_566) (x_92442 R_566) (x_92512 T_22) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (x_92437 (Atom_35 x_92512) (x_92437 x_92462 x_92463)) (Atom_35 x_92512) (x_92437 x_92462 x_92463))))
(assert (forall ((x_92443 R_566) (x_92462 R_566) (x_92463 R_566) (x_92442 R_566) (x_92513 R_566) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (x_92437 (Star_35 x_92513) (x_92437 x_92462 x_92463)) (Star_35 x_92513) (x_92437 x_92462 x_92463))))
(assert (forall ((x_92443 R_566) (x_92462 R_566) (x_92463 R_566) (x_92442 R_566) (x_92514 R_566) (x_92515 R_566) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (x_92437 (x_92435 x_92514 x_92515) (x_92437 x_92462 x_92463)) (x_92435 x_92514 x_92515) (x_92437 x_92462 x_92463))))
(assert (forall ((x_92443 R_566) (x_92462 R_566) (x_92463 R_566) (x_92442 R_566) (x_92516 R_566) (x_92517 R_566) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (x_92437 (x_92436 x_92516 x_92517) (x_92437 x_92462 x_92463)) (x_92436 x_92516 x_92517) (x_92437 x_92462 x_92463))))
(assert (forall ((x_92443 R_566) (x_92462 R_566) (x_92463 R_566) (x_92442 R_566) (x_92518 R_566) (x_92519 R_566) (x_92441 R_566) (x_92440 R_566))
	(x_92438 (x_92437 (x_92437 x_92518 x_92519) (x_92437 x_92462 x_92463)) (x_92437 x_92518 x_92519) (x_92437 x_92462 x_92463))))
(declare-fun x_92444 (R_566 R_566 R_566) Bool)
(assert (forall ((x_96620 R_566))
	(x_92444 x_96620 Nil_395 x_96620)))
(assert (forall ((x_92446 R_566) (x_94944 T_22))
	(x_92444 (Atom_35 x_94944) (Atom_35 x_94944) Nil_395)))
(assert (forall ((x_92446 R_566))
	(x_92444 Eps_70 Eps_70 Nil_395)))
(assert (forall ((x_92446 R_566) (x_94945 R_566))
	(x_92444 (Star_35 x_94945) (Star_35 x_94945) Nil_395)))
(assert (forall ((x_92446 R_566) (x_94946 R_566) (x_94947 R_566))
	(x_92444 (x_92435 x_94946 x_94947) (x_92435 x_94946 x_94947) Nil_395)))
(assert (forall ((x_92446 R_566) (x_94948 R_566) (x_94949 R_566))
	(x_92444 (x_92436 x_94948 x_94949) (x_92436 x_94948 x_94949) Nil_395)))
(assert (forall ((x_92446 R_566) (x_94950 R_566) (x_94951 R_566))
	(x_92444 (x_92437 x_94950 x_94951) (x_92437 x_94950 x_94951) Nil_395)))
(assert (forall ((x_92447 R_566) (x_94936 T_22) (x_92446 R_566) (x_94952 T_22))
	(x_92444 (x_92435 (Atom_35 x_94952) (Atom_35 x_94936)) (Atom_35 x_94952) (Atom_35 x_94936))))
(assert (forall ((x_92447 R_566) (x_94936 T_22) (x_92446 R_566))
	(x_92444 (x_92435 Eps_70 (Atom_35 x_94936)) Eps_70 (Atom_35 x_94936))))
(assert (forall ((x_92447 R_566) (x_94936 T_22) (x_92446 R_566) (x_94953 R_566))
	(x_92444 (x_92435 (Star_35 x_94953) (Atom_35 x_94936)) (Star_35 x_94953) (Atom_35 x_94936))))
(assert (forall ((x_92447 R_566) (x_94936 T_22) (x_92446 R_566) (x_94954 R_566) (x_94955 R_566))
	(x_92444 (x_92435 (x_92435 x_94954 x_94955) (Atom_35 x_94936)) (x_92435 x_94954 x_94955) (Atom_35 x_94936))))
(assert (forall ((x_92447 R_566) (x_94936 T_22) (x_92446 R_566) (x_94956 R_566) (x_94957 R_566))
	(x_92444 (x_92435 (x_92436 x_94956 x_94957) (Atom_35 x_94936)) (x_92436 x_94956 x_94957) (Atom_35 x_94936))))
(assert (forall ((x_92447 R_566) (x_94936 T_22) (x_92446 R_566) (x_94958 R_566) (x_94959 R_566))
	(x_92444 (x_92435 (x_92437 x_94958 x_94959) (Atom_35 x_94936)) (x_92437 x_94958 x_94959) (Atom_35 x_94936))))
(assert (forall ((x_92447 R_566) (x_92446 R_566) (x_94960 T_22))
	(x_92444 (x_92435 (Atom_35 x_94960) Eps_70) (Atom_35 x_94960) Eps_70)))
(assert (forall ((x_92447 R_566) (x_92446 R_566))
	(x_92444 (x_92435 Eps_70 Eps_70) Eps_70 Eps_70)))
(assert (forall ((x_92447 R_566) (x_92446 R_566) (x_94961 R_566))
	(x_92444 (x_92435 (Star_35 x_94961) Eps_70) (Star_35 x_94961) Eps_70)))
(assert (forall ((x_92447 R_566) (x_92446 R_566) (x_94962 R_566) (x_94963 R_566))
	(x_92444 (x_92435 (x_92435 x_94962 x_94963) Eps_70) (x_92435 x_94962 x_94963) Eps_70)))
(assert (forall ((x_92447 R_566) (x_92446 R_566) (x_94964 R_566) (x_94965 R_566))
	(x_92444 (x_92435 (x_92436 x_94964 x_94965) Eps_70) (x_92436 x_94964 x_94965) Eps_70)))
(assert (forall ((x_92447 R_566) (x_92446 R_566) (x_94966 R_566) (x_94967 R_566))
	(x_92444 (x_92435 (x_92437 x_94966 x_94967) Eps_70) (x_92437 x_94966 x_94967) Eps_70)))
(assert (forall ((x_92447 R_566) (x_94937 R_566) (x_92446 R_566) (x_94968 T_22))
	(x_92444 (x_92435 (Atom_35 x_94968) (Star_35 x_94937)) (Atom_35 x_94968) (Star_35 x_94937))))
(assert (forall ((x_92447 R_566) (x_94937 R_566) (x_92446 R_566))
	(x_92444 (x_92435 Eps_70 (Star_35 x_94937)) Eps_70 (Star_35 x_94937))))
(assert (forall ((x_92447 R_566) (x_94937 R_566) (x_92446 R_566) (x_94969 R_566))
	(x_92444 (x_92435 (Star_35 x_94969) (Star_35 x_94937)) (Star_35 x_94969) (Star_35 x_94937))))
(assert (forall ((x_92447 R_566) (x_94937 R_566) (x_92446 R_566) (x_94970 R_566) (x_94971 R_566))
	(x_92444 (x_92435 (x_92435 x_94970 x_94971) (Star_35 x_94937)) (x_92435 x_94970 x_94971) (Star_35 x_94937))))
(assert (forall ((x_92447 R_566) (x_94937 R_566) (x_92446 R_566) (x_94972 R_566) (x_94973 R_566))
	(x_92444 (x_92435 (x_92436 x_94972 x_94973) (Star_35 x_94937)) (x_92436 x_94972 x_94973) (Star_35 x_94937))))
(assert (forall ((x_92447 R_566) (x_94937 R_566) (x_92446 R_566) (x_94974 R_566) (x_94975 R_566))
	(x_92444 (x_92435 (x_92437 x_94974 x_94975) (Star_35 x_94937)) (x_92437 x_94974 x_94975) (Star_35 x_94937))))
(assert (forall ((x_92447 R_566) (x_94938 R_566) (x_94939 R_566) (x_92446 R_566) (x_94976 T_22))
	(x_92444 (x_92435 (Atom_35 x_94976) (x_92435 x_94938 x_94939)) (Atom_35 x_94976) (x_92435 x_94938 x_94939))))
(assert (forall ((x_92447 R_566) (x_94938 R_566) (x_94939 R_566) (x_92446 R_566))
	(x_92444 (x_92435 Eps_70 (x_92435 x_94938 x_94939)) Eps_70 (x_92435 x_94938 x_94939))))
(assert (forall ((x_92447 R_566) (x_94938 R_566) (x_94939 R_566) (x_92446 R_566) (x_94977 R_566))
	(x_92444 (x_92435 (Star_35 x_94977) (x_92435 x_94938 x_94939)) (Star_35 x_94977) (x_92435 x_94938 x_94939))))
(assert (forall ((x_92447 R_566) (x_94938 R_566) (x_94939 R_566) (x_92446 R_566) (x_94978 R_566) (x_94979 R_566))
	(x_92444 (x_92435 (x_92435 x_94978 x_94979) (x_92435 x_94938 x_94939)) (x_92435 x_94978 x_94979) (x_92435 x_94938 x_94939))))
(assert (forall ((x_92447 R_566) (x_94938 R_566) (x_94939 R_566) (x_92446 R_566) (x_94980 R_566) (x_94981 R_566))
	(x_92444 (x_92435 (x_92436 x_94980 x_94981) (x_92435 x_94938 x_94939)) (x_92436 x_94980 x_94981) (x_92435 x_94938 x_94939))))
(assert (forall ((x_92447 R_566) (x_94938 R_566) (x_94939 R_566) (x_92446 R_566) (x_94982 R_566) (x_94983 R_566))
	(x_92444 (x_92435 (x_92437 x_94982 x_94983) (x_92435 x_94938 x_94939)) (x_92437 x_94982 x_94983) (x_92435 x_94938 x_94939))))
(assert (forall ((x_92447 R_566) (x_94940 R_566) (x_94941 R_566) (x_92446 R_566) (x_94984 T_22))
	(x_92444 (x_92435 (Atom_35 x_94984) (x_92436 x_94940 x_94941)) (Atom_35 x_94984) (x_92436 x_94940 x_94941))))
(assert (forall ((x_92447 R_566) (x_94940 R_566) (x_94941 R_566) (x_92446 R_566))
	(x_92444 (x_92435 Eps_70 (x_92436 x_94940 x_94941)) Eps_70 (x_92436 x_94940 x_94941))))
(assert (forall ((x_92447 R_566) (x_94940 R_566) (x_94941 R_566) (x_92446 R_566) (x_94985 R_566))
	(x_92444 (x_92435 (Star_35 x_94985) (x_92436 x_94940 x_94941)) (Star_35 x_94985) (x_92436 x_94940 x_94941))))
(assert (forall ((x_92447 R_566) (x_94940 R_566) (x_94941 R_566) (x_92446 R_566) (x_94986 R_566) (x_94987 R_566))
	(x_92444 (x_92435 (x_92435 x_94986 x_94987) (x_92436 x_94940 x_94941)) (x_92435 x_94986 x_94987) (x_92436 x_94940 x_94941))))
(assert (forall ((x_92447 R_566) (x_94940 R_566) (x_94941 R_566) (x_92446 R_566) (x_94988 R_566) (x_94989 R_566))
	(x_92444 (x_92435 (x_92436 x_94988 x_94989) (x_92436 x_94940 x_94941)) (x_92436 x_94988 x_94989) (x_92436 x_94940 x_94941))))
(assert (forall ((x_92447 R_566) (x_94940 R_566) (x_94941 R_566) (x_92446 R_566) (x_94990 R_566) (x_94991 R_566))
	(x_92444 (x_92435 (x_92437 x_94990 x_94991) (x_92436 x_94940 x_94941)) (x_92437 x_94990 x_94991) (x_92436 x_94940 x_94941))))
(assert (forall ((x_92447 R_566) (x_94942 R_566) (x_94943 R_566) (x_92446 R_566) (x_94992 T_22))
	(x_92444 (x_92435 (Atom_35 x_94992) (x_92437 x_94942 x_94943)) (Atom_35 x_94992) (x_92437 x_94942 x_94943))))
(assert (forall ((x_92447 R_566) (x_94942 R_566) (x_94943 R_566) (x_92446 R_566))
	(x_92444 (x_92435 Eps_70 (x_92437 x_94942 x_94943)) Eps_70 (x_92437 x_94942 x_94943))))
(assert (forall ((x_92447 R_566) (x_94942 R_566) (x_94943 R_566) (x_92446 R_566) (x_94993 R_566))
	(x_92444 (x_92435 (Star_35 x_94993) (x_92437 x_94942 x_94943)) (Star_35 x_94993) (x_92437 x_94942 x_94943))))
(assert (forall ((x_92447 R_566) (x_94942 R_566) (x_94943 R_566) (x_92446 R_566) (x_94994 R_566) (x_94995 R_566))
	(x_92444 (x_92435 (x_92435 x_94994 x_94995) (x_92437 x_94942 x_94943)) (x_92435 x_94994 x_94995) (x_92437 x_94942 x_94943))))
(assert (forall ((x_92447 R_566) (x_94942 R_566) (x_94943 R_566) (x_92446 R_566) (x_94996 R_566) (x_94997 R_566))
	(x_92444 (x_92435 (x_92436 x_94996 x_94997) (x_92437 x_94942 x_94943)) (x_92436 x_94996 x_94997) (x_92437 x_94942 x_94943))))
(assert (forall ((x_92447 R_566) (x_94942 R_566) (x_94943 R_566) (x_92446 R_566) (x_94998 R_566) (x_94999 R_566))
	(x_92444 (x_92435 (x_92437 x_94998 x_94999) (x_92437 x_94942 x_94943)) (x_92437 x_94998 x_94999) (x_92437 x_94942 x_94943))))
(declare-fun rep_1 (R_566 R_566 Int Int) Bool)
(assert (forall ((x_92448 R_566))
	(rep_1 Eps_70 x_92448 Z_2510 Z_2510)))
(assert (forall ((x_96895 Int) (x_96896 Int) (x_96665 R_566) (x_92448 R_566) (z_2508 Int))
	(=> (and (diseqInt z_2508 Z_2510) (rep_1 x_96665 x_92448 x_96895 x_96896) (minus_434 x_96895 Z_2510 (S_583 Z_2510)) (minus_434 x_96896 z_2508 (S_583 Z_2510))) (rep_1 (x_92437 (x_92435 Eps_70 x_92448) x_96665) x_92448 Z_2510 z_2508))))
(assert (forall ((x_92448 R_566))
	(rep_1 Eps_70 x_92448 Z_2510 Z_2510)))
(assert (forall ((x_96897 Int) (x_96898 Int) (x_96668 R_566) (x_92448 R_566) (y_2860 Int) (z_2508 Int))
	(=> (and (diseqInt z_2508 Z_2510) (diseqInt y_2860 Z_2510) (rep_1 x_96668 x_92448 x_96897 x_96898) (minus_434 x_96897 y_2860 (S_583 Z_2510)) (minus_434 x_96898 z_2508 (S_583 Z_2510))) (rep_1 (x_92437 (x_92435 Nil_395 x_92448) x_96668) x_92448 y_2860 z_2508))))
(assert (forall ((x_92448 R_566) (y_2860 Int))
	(=> (diseqInt y_2860 Z_2510) (rep_1 Nil_395 x_92448 y_2860 Z_2510))))
(assert (forall ((x_96899 Int) (x_96900 Int) (x_96671 R_566) (x_92448 R_566) (z_2508 Int))
	(=> (and (diseqInt z_2508 Z_2510) (rep_1 x_96671 x_92448 x_96899 x_96900) (minus_434 x_96899 Z_2510 (S_583 Z_2510)) (minus_434 x_96900 z_2508 (S_583 Z_2510))) (rep_1 (x_92437 (x_92435 Eps_70 x_92448) x_96671) x_92448 Z_2510 z_2508))))
(assert (forall ((x_92448 R_566) (y_2860 Int))
	(=> (diseqInt y_2860 Z_2510) (rep_1 Nil_395 x_92448 y_2860 Z_2510))))
(assert (forall ((x_96901 Int) (x_96902 Int) (x_96674 R_566) (x_92448 R_566) (y_2860 Int) (z_2508 Int))
	(=> (and (diseqInt z_2508 Z_2510) (diseqInt y_2860 Z_2510) (rep_1 x_96674 x_92448 x_96901 x_96902) (minus_434 x_96901 y_2860 (S_583 Z_2510)) (minus_434 x_96902 z_2508 (S_583 Z_2510))) (rep_1 (x_92437 (x_92435 Nil_395 x_92448) x_96674) x_92448 y_2860 z_2508))))
(declare-fun eps_71 (Bool_413 R_566) Bool)
(assert (forall ((y_2861 R_566))
	(eps_71 true_413 (Star_35 y_2861))))
(assert (forall ((x_96676 Bool_413) (x_96677 Bool_413) (x_96678 Bool_413) (p_514 R_566) (q_265 R_566))
	(=> (and (eps_71 x_96677 p_514) (eps_71 x_96678 q_265) (and_417 x_96676 x_96677 x_96678)) (eps_71 x_96676 (x_92437 p_514 q_265)))))
(assert (forall ((x_96679 Bool_413) (x_96680 Bool_413) (x_96681 Bool_413) (r_567 R_566) (q_266 R_566))
	(=> (and (eps_71 x_96680 r_567) (eps_71 x_96681 q_266) (and_417 x_96679 x_96680 x_96681)) (eps_71 x_96679 (x_92436 r_567 q_266)))))
(assert (forall ((x_96682 Bool_413) (x_96683 Bool_413) (x_96684 Bool_413) (p_515 R_566) (q_267 R_566))
	(=> (and (eps_71 x_96683 p_515) (eps_71 x_96684 q_267) (or_427 x_96682 x_96683 x_96684)) (eps_71 x_96682 (x_92435 p_515 q_267)))))
(assert (eps_71 true_413 Eps_70))
(assert (forall ((x_92450 R_566) (x_95000 T_22))
	(eps_71 false_413 (Atom_35 x_95000))))
(assert (forall ((x_92450 R_566))
	(eps_71 false_413 Nil_395)))
(declare-fun step_35 (R_566 R_566 T_22) Bool)
(assert (forall ((x_96688 R_566) (x_96689 R_566) (p_516 R_566) (y_2862 T_22))
	(=> (and (step_35 x_96689 p_516 y_2862) (x_92438 x_96688 x_96689 (Star_35 p_516))) (step_35 x_96688 (Star_35 p_516) y_2862))))
(assert (forall ((x_96692 R_566) (x_96693 R_566) (x_96694 R_566) (x_96695 R_566) (p_517 R_566) (q_268 R_566) (y_2862 T_22))
	(=> (and (step_35 x_96693 p_517 y_2862) (x_92438 x_96694 x_96693 q_268) (step_35 x_96695 q_268 y_2862) (x_92444 x_96692 x_96694 x_96695) (eps_71 true_413 p_517)) (step_35 x_96692 (x_92437 p_517 q_268) y_2862))))
(assert (forall ((x_96698 R_566) (x_96699 R_566) (x_96700 R_566) (p_517 R_566) (q_268 R_566) (y_2862 T_22))
	(=> (and (step_35 x_96699 p_517 y_2862) (x_92438 x_96700 x_96699 q_268) (x_92444 x_96698 x_96700 Nil_395) (eps_71 false_413 p_517)) (step_35 x_96698 (x_92437 p_517 q_268) y_2862))))
(assert (forall ((r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (step_35 Nil_395 r_568 y_2862) (step_35 Nil_395 (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92452 R_566) (x_95009 T_22) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 Nil_395 q_269 y_2862) (step_35 (Atom_35 x_95009) r_568 y_2862)) (step_35 Nil_395 (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92452 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 Nil_395 q_269 y_2862) (step_35 Eps_70 r_568 y_2862)) (step_35 Nil_395 (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92452 R_566) (x_95010 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 Nil_395 q_269 y_2862) (step_35 (Star_35 x_95010) r_568 y_2862)) (step_35 Nil_395 (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92452 R_566) (x_95011 R_566) (x_95012 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 Nil_395 q_269 y_2862) (step_35 (x_92435 x_95011 x_95012) r_568 y_2862)) (step_35 Nil_395 (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92452 R_566) (x_95013 R_566) (x_95014 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 Nil_395 q_269 y_2862) (step_35 (x_92436 x_95013 x_95014) r_568 y_2862)) (step_35 Nil_395 (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92452 R_566) (x_95015 R_566) (x_95016 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 Nil_395 q_269 y_2862) (step_35 (x_92437 x_95015 x_95016) r_568 y_2862)) (step_35 Nil_395 (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95001 T_22) (x_92452 R_566) (x_95017 T_22) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (Atom_35 x_95001) q_269 y_2862) (step_35 (Atom_35 x_95017) r_568 y_2862)) (step_35 (x_92436 (Atom_35 x_95017) (Atom_35 x_95001)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95001 T_22) (x_92452 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (Atom_35 x_95001) q_269 y_2862) (step_35 Eps_70 r_568 y_2862)) (step_35 (x_92436 Eps_70 (Atom_35 x_95001)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95001 T_22) (x_92452 R_566) (x_95018 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (Atom_35 x_95001) q_269 y_2862) (step_35 (Star_35 x_95018) r_568 y_2862)) (step_35 (x_92436 (Star_35 x_95018) (Atom_35 x_95001)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95001 T_22) (x_92452 R_566) (x_95019 R_566) (x_95020 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (Atom_35 x_95001) q_269 y_2862) (step_35 (x_92435 x_95019 x_95020) r_568 y_2862)) (step_35 (x_92436 (x_92435 x_95019 x_95020) (Atom_35 x_95001)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95001 T_22) (x_92452 R_566) (x_95021 R_566) (x_95022 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (Atom_35 x_95001) q_269 y_2862) (step_35 (x_92436 x_95021 x_95022) r_568 y_2862)) (step_35 (x_92436 (x_92436 x_95021 x_95022) (Atom_35 x_95001)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95001 T_22) (x_92452 R_566) (x_95023 R_566) (x_95024 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (Atom_35 x_95001) q_269 y_2862) (step_35 (x_92437 x_95023 x_95024) r_568 y_2862)) (step_35 (x_92436 (x_92437 x_95023 x_95024) (Atom_35 x_95001)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_92452 R_566) (x_95025 T_22) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 Eps_70 q_269 y_2862) (step_35 (Atom_35 x_95025) r_568 y_2862)) (step_35 (x_92436 (Atom_35 x_95025) Eps_70) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_92452 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 Eps_70 q_269 y_2862) (step_35 Eps_70 r_568 y_2862)) (step_35 (x_92436 Eps_70 Eps_70) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_92452 R_566) (x_95026 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 Eps_70 q_269 y_2862) (step_35 (Star_35 x_95026) r_568 y_2862)) (step_35 (x_92436 (Star_35 x_95026) Eps_70) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_92452 R_566) (x_95027 R_566) (x_95028 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 Eps_70 q_269 y_2862) (step_35 (x_92435 x_95027 x_95028) r_568 y_2862)) (step_35 (x_92436 (x_92435 x_95027 x_95028) Eps_70) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_92452 R_566) (x_95029 R_566) (x_95030 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 Eps_70 q_269 y_2862) (step_35 (x_92436 x_95029 x_95030) r_568 y_2862)) (step_35 (x_92436 (x_92436 x_95029 x_95030) Eps_70) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_92452 R_566) (x_95031 R_566) (x_95032 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 Eps_70 q_269 y_2862) (step_35 (x_92437 x_95031 x_95032) r_568 y_2862)) (step_35 (x_92436 (x_92437 x_95031 x_95032) Eps_70) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95002 R_566) (x_92452 R_566) (x_95033 T_22) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (Star_35 x_95002) q_269 y_2862) (step_35 (Atom_35 x_95033) r_568 y_2862)) (step_35 (x_92436 (Atom_35 x_95033) (Star_35 x_95002)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95002 R_566) (x_92452 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (Star_35 x_95002) q_269 y_2862) (step_35 Eps_70 r_568 y_2862)) (step_35 (x_92436 Eps_70 (Star_35 x_95002)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95002 R_566) (x_92452 R_566) (x_95034 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (Star_35 x_95002) q_269 y_2862) (step_35 (Star_35 x_95034) r_568 y_2862)) (step_35 (x_92436 (Star_35 x_95034) (Star_35 x_95002)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95002 R_566) (x_92452 R_566) (x_95035 R_566) (x_95036 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (Star_35 x_95002) q_269 y_2862) (step_35 (x_92435 x_95035 x_95036) r_568 y_2862)) (step_35 (x_92436 (x_92435 x_95035 x_95036) (Star_35 x_95002)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95002 R_566) (x_92452 R_566) (x_95037 R_566) (x_95038 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (Star_35 x_95002) q_269 y_2862) (step_35 (x_92436 x_95037 x_95038) r_568 y_2862)) (step_35 (x_92436 (x_92436 x_95037 x_95038) (Star_35 x_95002)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95002 R_566) (x_92452 R_566) (x_95039 R_566) (x_95040 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (Star_35 x_95002) q_269 y_2862) (step_35 (x_92437 x_95039 x_95040) r_568 y_2862)) (step_35 (x_92436 (x_92437 x_95039 x_95040) (Star_35 x_95002)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95003 R_566) (x_95004 R_566) (x_92452 R_566) (x_95041 T_22) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (x_92435 x_95003 x_95004) q_269 y_2862) (step_35 (Atom_35 x_95041) r_568 y_2862)) (step_35 (x_92436 (Atom_35 x_95041) (x_92435 x_95003 x_95004)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95003 R_566) (x_95004 R_566) (x_92452 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (x_92435 x_95003 x_95004) q_269 y_2862) (step_35 Eps_70 r_568 y_2862)) (step_35 (x_92436 Eps_70 (x_92435 x_95003 x_95004)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95003 R_566) (x_95004 R_566) (x_92452 R_566) (x_95042 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (x_92435 x_95003 x_95004) q_269 y_2862) (step_35 (Star_35 x_95042) r_568 y_2862)) (step_35 (x_92436 (Star_35 x_95042) (x_92435 x_95003 x_95004)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95003 R_566) (x_95004 R_566) (x_92452 R_566) (x_95043 R_566) (x_95044 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (x_92435 x_95003 x_95004) q_269 y_2862) (step_35 (x_92435 x_95043 x_95044) r_568 y_2862)) (step_35 (x_92436 (x_92435 x_95043 x_95044) (x_92435 x_95003 x_95004)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95003 R_566) (x_95004 R_566) (x_92452 R_566) (x_95045 R_566) (x_95046 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (x_92435 x_95003 x_95004) q_269 y_2862) (step_35 (x_92436 x_95045 x_95046) r_568 y_2862)) (step_35 (x_92436 (x_92436 x_95045 x_95046) (x_92435 x_95003 x_95004)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95003 R_566) (x_95004 R_566) (x_92452 R_566) (x_95047 R_566) (x_95048 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (x_92435 x_95003 x_95004) q_269 y_2862) (step_35 (x_92437 x_95047 x_95048) r_568 y_2862)) (step_35 (x_92436 (x_92437 x_95047 x_95048) (x_92435 x_95003 x_95004)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95005 R_566) (x_95006 R_566) (x_92452 R_566) (x_95049 T_22) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (x_92436 x_95005 x_95006) q_269 y_2862) (step_35 (Atom_35 x_95049) r_568 y_2862)) (step_35 (x_92436 (Atom_35 x_95049) (x_92436 x_95005 x_95006)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95005 R_566) (x_95006 R_566) (x_92452 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (x_92436 x_95005 x_95006) q_269 y_2862) (step_35 Eps_70 r_568 y_2862)) (step_35 (x_92436 Eps_70 (x_92436 x_95005 x_95006)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95005 R_566) (x_95006 R_566) (x_92452 R_566) (x_95050 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (x_92436 x_95005 x_95006) q_269 y_2862) (step_35 (Star_35 x_95050) r_568 y_2862)) (step_35 (x_92436 (Star_35 x_95050) (x_92436 x_95005 x_95006)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95005 R_566) (x_95006 R_566) (x_92452 R_566) (x_95051 R_566) (x_95052 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (x_92436 x_95005 x_95006) q_269 y_2862) (step_35 (x_92435 x_95051 x_95052) r_568 y_2862)) (step_35 (x_92436 (x_92435 x_95051 x_95052) (x_92436 x_95005 x_95006)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95005 R_566) (x_95006 R_566) (x_92452 R_566) (x_95053 R_566) (x_95054 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (x_92436 x_95005 x_95006) q_269 y_2862) (step_35 (x_92436 x_95053 x_95054) r_568 y_2862)) (step_35 (x_92436 (x_92436 x_95053 x_95054) (x_92436 x_95005 x_95006)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95005 R_566) (x_95006 R_566) (x_92452 R_566) (x_95055 R_566) (x_95056 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (x_92436 x_95005 x_95006) q_269 y_2862) (step_35 (x_92437 x_95055 x_95056) r_568 y_2862)) (step_35 (x_92436 (x_92437 x_95055 x_95056) (x_92436 x_95005 x_95006)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95007 R_566) (x_95008 R_566) (x_92452 R_566) (x_95057 T_22) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (x_92437 x_95007 x_95008) q_269 y_2862) (step_35 (Atom_35 x_95057) r_568 y_2862)) (step_35 (x_92436 (Atom_35 x_95057) (x_92437 x_95007 x_95008)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95007 R_566) (x_95008 R_566) (x_92452 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (x_92437 x_95007 x_95008) q_269 y_2862) (step_35 Eps_70 r_568 y_2862)) (step_35 (x_92436 Eps_70 (x_92437 x_95007 x_95008)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95007 R_566) (x_95008 R_566) (x_92452 R_566) (x_95058 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (x_92437 x_95007 x_95008) q_269 y_2862) (step_35 (Star_35 x_95058) r_568 y_2862)) (step_35 (x_92436 (Star_35 x_95058) (x_92437 x_95007 x_95008)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95007 R_566) (x_95008 R_566) (x_92452 R_566) (x_95059 R_566) (x_95060 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (x_92437 x_95007 x_95008) q_269 y_2862) (step_35 (x_92435 x_95059 x_95060) r_568 y_2862)) (step_35 (x_92436 (x_92435 x_95059 x_95060) (x_92437 x_95007 x_95008)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95007 R_566) (x_95008 R_566) (x_92452 R_566) (x_95061 R_566) (x_95062 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (x_92437 x_95007 x_95008) q_269 y_2862) (step_35 (x_92436 x_95061 x_95062) r_568 y_2862)) (step_35 (x_92436 (x_92436 x_95061 x_95062) (x_92437 x_95007 x_95008)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_92453 R_566) (x_95007 R_566) (x_95008 R_566) (x_92452 R_566) (x_95063 R_566) (x_95064 R_566) (r_568 R_566) (q_269 R_566) (y_2862 T_22))
	(=> (and (step_35 (x_92437 x_95007 x_95008) q_269 y_2862) (step_35 (x_92437 x_95063 x_95064) r_568 y_2862)) (step_35 (x_92436 (x_92437 x_95063 x_95064) (x_92437 x_95007 x_95008)) (x_92436 r_568 q_269) y_2862))))
(assert (forall ((x_96830 R_566) (x_96831 R_566) (x_96832 R_566) (p_518 R_566) (q_270 R_566) (y_2862 T_22))
	(=> (and (step_35 x_96831 p_518 y_2862) (step_35 x_96832 q_270 y_2862) (x_92444 x_96830 x_96831 x_96832)) (step_35 x_96830 (x_92435 p_518 q_270) y_2862))))
(assert (forall ((b_101 T_22))
	(step_35 Eps_70 (Atom_35 b_101) b_101)))
(assert (forall ((b_101 T_22) (y_2862 T_22))
	(=> (diseqT_21 b_101 y_2862) (step_35 Nil_395 (Atom_35 b_101) y_2862))))
(assert (forall ((x_92454 R_566) (y_2862 T_22))
	(step_35 Nil_395 Eps_70 y_2862)))
(assert (forall ((x_92454 R_566) (y_2862 T_22))
	(step_35 Nil_395 Nil_395 y_2862)))
(declare-fun rec_21 (Bool_413 R_566 list_348) Bool)
(assert (forall ((x_96838 Bool_413) (x_96839 R_566) (z_2509 T_22) (xs_833 list_348) (x_92455 R_566))
	(=> (and (step_35 x_96839 x_92455 z_2509) (rec_21 x_96838 x_96839 xs_833)) (rec_21 x_96838 x_92455 (cons_343 z_2509 xs_833)))))
(assert (forall ((x_96841 Bool_413) (x_92455 R_566))
	(=> (eps_71 x_96841 x_92455) (rec_21 x_96841 x_92455 nil_394))))
(assert (forall ((x_96843 R_566) (x_96844 R_566) (x_96845 Bool_413) (x_96846 R_566) (x_96847 Bool_413) (p_519 R_566) (i_10 Int) (i_11 Int) (j_2 Int) (j_3 Int) (s_582 list_348))
	(=> (and true (diseqBool_199 x_96845 x_96847) (le_413 i_10 i_11) (le_413 j_2 j_3) (eps_71 false_413 p_519) (rep_1 x_96843 p_519 i_10 j_2) (rep_1 x_96844 p_519 i_11 j_3) (rec_21 x_96845 (x_92436 x_96843 x_96844) s_582) (rep_1 x_96846 p_519 i_11 j_2) (rec_21 x_96847 x_96846 s_582)) false)))
(assert (forall ((x_96849 R_566) (x_96850 R_566) (x_96851 Bool_413) (x_96852 R_566) (x_96853 Bool_413) (p_519 R_566) (i_10 Int) (i_11 Int) (j_2 Int) (j_3 Int) (s_582 list_348))
	(=> (and true (diseqBool_199 x_96851 x_96853) (gt_416 i_10 i_11) (le_413 j_2 j_3) (eps_71 false_413 p_519) (rep_1 x_96849 p_519 i_10 j_2) (rep_1 x_96850 p_519 i_11 j_3) (rec_21 x_96851 (x_92436 x_96849 x_96850) s_582) (rep_1 x_96852 p_519 i_10 j_2) (rec_21 x_96853 x_96852 s_582)) false)))
(assert (forall ((x_96855 R_566) (x_96856 R_566) (x_96857 Bool_413) (x_96858 R_566) (x_96859 Bool_413) (p_519 R_566) (i_10 Int) (i_11 Int) (j_2 Int) (j_3 Int) (s_582 list_348))
	(=> (and true (diseqBool_199 x_96857 x_96859) (le_413 i_10 i_11) (le_413 j_2 j_3) (eps_71 false_413 p_519) (rep_1 x_96855 p_519 i_10 j_2) (rep_1 x_96856 p_519 i_11 j_3) (rec_21 x_96857 (x_92436 x_96855 x_96856) s_582) (rep_1 x_96858 p_519 i_11 j_2) (rec_21 x_96859 x_96858 s_582)) false)))
(assert (forall ((x_96861 R_566) (x_96862 R_566) (x_96863 Bool_413) (x_96864 R_566) (x_96865 Bool_413) (p_519 R_566) (i_10 Int) (i_11 Int) (j_2 Int) (j_3 Int) (s_582 list_348))
	(=> (and true (diseqBool_199 x_96863 x_96865) (gt_416 i_10 i_11) (gt_416 j_2 j_3) (eps_71 false_413 p_519) (rep_1 x_96861 p_519 i_10 j_2) (rep_1 x_96862 p_519 i_11 j_3) (rec_21 x_96863 (x_92436 x_96861 x_96862) s_582) (rep_1 x_96864 p_519 i_10 j_3) (rec_21 x_96865 x_96864 s_582)) false)))
(assert (forall ((x_96867 R_566) (x_96868 R_566) (x_96869 Bool_413) (x_96870 R_566) (x_96871 Bool_413) (p_519 R_566) (i_10 Int) (i_11 Int) (j_2 Int) (j_3 Int) (s_582 list_348))
	(=> (and true (diseqBool_199 x_96869 x_96871) (le_413 i_10 i_11) (gt_416 j_2 j_3) (eps_71 false_413 p_519) (rep_1 x_96867 p_519 i_10 j_2) (rep_1 x_96868 p_519 i_11 j_3) (rec_21 x_96869 (x_92436 x_96867 x_96868) s_582) (rep_1 x_96870 p_519 i_11 j_3) (rec_21 x_96871 x_96870 s_582)) false)))
(assert (forall ((x_96873 R_566) (x_96874 R_566) (x_96875 Bool_413) (x_96876 R_566) (x_96877 Bool_413) (p_519 R_566) (i_10 Int) (i_11 Int) (j_2 Int) (j_3 Int) (s_582 list_348))
	(=> (and true (diseqBool_199 x_96875 x_96877) (gt_416 i_10 i_11) (le_413 j_2 j_3) (eps_71 false_413 p_519) (rep_1 x_96873 p_519 i_10 j_2) (rep_1 x_96874 p_519 i_11 j_3) (rec_21 x_96875 (x_92436 x_96873 x_96874) s_582) (rep_1 x_96876 p_519 i_10 j_2) (rec_21 x_96877 x_96876 s_582)) false)))
(assert (forall ((x_96879 R_566) (x_96880 R_566) (x_96881 Bool_413) (x_96882 R_566) (x_96883 Bool_413) (p_519 R_566) (i_10 Int) (i_11 Int) (j_2 Int) (j_3 Int) (s_582 list_348))
	(=> (and true (diseqBool_199 x_96881 x_96883) (le_413 i_10 i_11) (gt_416 j_2 j_3) (eps_71 false_413 p_519) (rep_1 x_96879 p_519 i_10 j_2) (rep_1 x_96880 p_519 i_11 j_3) (rec_21 x_96881 (x_92436 x_96879 x_96880) s_582) (rep_1 x_96882 p_519 i_11 j_3) (rec_21 x_96883 x_96882 s_582)) false)))
(assert (forall ((x_96885 R_566) (x_96886 R_566) (x_96887 Bool_413) (x_96888 R_566) (x_96889 Bool_413) (p_519 R_566) (i_10 Int) (i_11 Int) (j_2 Int) (j_3 Int) (s_582 list_348))
	(=> (and true (diseqBool_199 x_96887 x_96889) (gt_416 i_10 i_11) (gt_416 j_2 j_3) (eps_71 false_413 p_519) (rep_1 x_96885 p_519 i_10 j_2) (rep_1 x_96886 p_519 i_11 j_3) (rec_21 x_96887 (x_92436 x_96885 x_96886) s_582) (rep_1 x_96888 p_519 i_10 j_3) (rec_21 x_96889 x_96888 s_582)) false)))
(check-sat)
