
(set-logic HORN)
(declare-fun zero_67 () Int)
(declare-fun succ_66 (Int) Int)
(declare-fun diseqInt (Int Int) Bool)
(declare-fun p_183 (Int Int) Bool)
(declare-fun iszero_66 (Int) Bool)
(declare-fun issucc_66 (Int) Bool)
(assert (forall ((x_28033 Int))
	(p_183 x_28033 (succ_66 x_28033))))
(assert (iszero_66 zero_67))
(assert (forall ((x_28035 Int))
	(issucc_66 (succ_66 x_28035))))
(assert (forall ((x_28036 Int))
	(diseqInt zero_67 (succ_66 x_28036))))
(assert (forall ((x_28037 Int))
	(diseqInt (succ_66 x_28037) zero_67)))
(assert (forall ((x_28038 Int) (x_28039 Int))
	(=> (diseqInt x_28038 x_28039) (diseqInt (succ_66 x_28038) (succ_66 x_28039)))))
(declare-datatypes ((Integer_3 0)) (((P_182 (projP_6 Int)) (N_59 (projN_6 Int)))))
(declare-fun diseqInteger_3 (Integer_3 Integer_3) Bool)
(declare-fun projP_7 (Int Integer_3) Bool)
(declare-fun projN_7 (Int Integer_3) Bool)
(declare-fun isP_4 (Integer_3) Bool)
(declare-fun isN_3 (Integer_3) Bool)
(assert (forall ((x_28040 Int))
	(projP_7 x_28040 (P_182 x_28040))))
(assert (forall ((x_28042 Int))
	(projN_7 x_28042 (N_59 x_28042))))
(assert (forall ((x_28044 Int))
	(isP_4 (P_182 x_28044))))
(assert (forall ((x_28045 Int))
	(isN_3 (N_59 x_28045))))
(assert (forall ((x_28046 Int) (x_28047 Int))
	(diseqInteger_3 (P_182 x_28046) (N_59 x_28047))))
(assert (forall ((x_28048 Int) (x_28049 Int))
	(diseqInteger_3 (N_59 x_28048) (P_182 x_28049))))
(assert (forall ((x_28050 Int) (x_28051 Int))
	(=> (diseqInt x_28050 x_28051) (diseqInteger_3 (P_182 x_28050) (P_182 x_28051)))))
(assert (forall ((x_28052 Int) (x_28053 Int))
	(=> (diseqInt x_28052 x_28053) (diseqInteger_3 (N_59 x_28052) (N_59 x_28053)))))
(declare-fun zero_68 (Integer_3) Bool)
(assert (zero_68 (P_182 zero_67)))
(declare-fun plus_61 (Int Int Int) Bool)
(assert (forall ((x_27996 Int) (z_1095 Int) (y_1152 Int))
	(=> (plus_61 x_27996 z_1095 y_1152) (plus_61 (succ_66 x_27996) (succ_66 z_1095) y_1152))))
(assert (forall ((x_27997 Int))
	(plus_61 x_27997 zero_67 x_27997)))
(declare-fun x_27983 (Integer_3 Int Int) Bool)
(assert (forall ((x_27985 Int) (z_1096 Int) (fail_14 Integer_3))
	(=> (x_27983 fail_14 x_27985 z_1096) (x_27983 fail_14 (succ_66 x_27985) (succ_66 z_1096)))))
(assert (forall ((x_27987 Int))
	(x_27983 (N_59 (succ_66 x_27987)) zero_67 (succ_66 x_27987))))
(assert (forall ((x_27986 Int))
	(x_27983 (P_182 (succ_66 x_27986)) (succ_66 x_27986) zero_67)))
(assert (x_27983 (P_182 zero_67) zero_67 zero_67))
(declare-fun plus_62 (Integer_3 Integer_3 Integer_3) Bool)
(assert (forall ((x_28011 Int) (x_28012 Int) (n_60 Int) (m_24 Int))
	(=> (and (plus_61 x_28011 (succ_66 zero_67) m_24) (plus_61 x_28012 x_28011 n_60)) (plus_62 (N_59 x_28012) (N_59 m_24) (N_59 n_60)))))
(assert (forall ((x_28013 Integer_3) (x_28014 Int) (n_61 Int) (m_24 Int))
	(=> (and (plus_61 x_28014 (succ_66 zero_67) m_24) (x_27983 x_28013 n_61 x_28014)) (plus_62 x_28013 (N_59 m_24) (P_182 n_61)))))
(assert (forall ((x_28016 Integer_3) (x_28017 Int) (o_2 Int) (m_25 Int))
	(=> (and (plus_61 x_28017 (succ_66 zero_67) o_2) (x_27983 x_28016 m_25 x_28017)) (plus_62 x_28016 (P_182 m_25) (N_59 o_2)))))
(assert (forall ((x_28020 Int) (n_62 Int) (m_25 Int))
	(=> (plus_61 x_28020 m_25 n_62) (plus_62 (P_182 x_28020) (P_182 m_25) (P_182 n_62)))))
(assert (forall ((x_28021 Integer_3) (x_28022 Integer_3) (x_27989 Integer_3))
	(=> (and true (diseqInteger_3 x_27989 x_28022) (zero_68 x_28021) (plus_62 x_28022 x_28021 x_27989)) false)))
(assert (forall ((x_28023 Int) (x_28024 Int) (x_28025 Int) (x_28026 Int) (x_27990 Int) (y_1155 Int) (z_1097 Int))
	(=> (and true (diseqInt x_28024 x_28026) (plus_61 x_28023 y_1155 z_1097) (plus_61 x_28024 x_27990 x_28023) (plus_61 x_28025 x_27990 y_1155) (plus_61 x_28026 x_28025 z_1097)) false)))
(assert (forall ((x_28027 Int) (x_28028 Int) (x_27991 Int) (y_1156 Int))
	(=> (and true (diseqInt x_28027 x_28028) (plus_61 x_28027 x_27991 y_1156) (plus_61 x_28028 y_1156 x_27991)) false)))
(assert (forall ((x_28029 Int) (x_27992 Int))
	(=> (and true (diseqInt x_28029 x_27992) (plus_61 x_28029 x_27992 zero_67)) false)))
(assert (forall ((x_28030 Int) (x_27993 Int))
	(=> (and true (diseqInt x_28030 x_27993) (plus_61 x_28030 zero_67 x_27993)) false)))
(check-sat)
