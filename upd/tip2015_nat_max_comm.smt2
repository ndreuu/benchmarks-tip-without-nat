
(set-logic HORN)
(declare-fun zero_11 () Int)
(declare-fun succ_11 (Int) Int)
(declare-datatypes ((Bool_98 0)) (((false_98) (true_98))))
(declare-fun diseqBool_46 (Bool_98 Bool_98) Bool)
(declare-fun isfalse_46 (Bool_98) Bool)
(declare-fun istrue_46 (Bool_98) Bool)
(assert (isfalse_46 false_98))
(assert (istrue_46 true_98))
(assert (diseqBool_46 false_98 true_98))
(assert (diseqBool_46 true_98 false_98))
(declare-fun and_98 (Bool_98 Bool_98 Bool_98) Bool)
(declare-fun or_99 (Bool_98 Bool_98 Bool_98) Bool)
(declare-fun hence_98 (Bool_98 Bool_98 Bool_98) Bool)
(declare-fun not_98 (Bool_98 Bool_98) Bool)
(assert (and_98 false_98 false_98 false_98))
(assert (and_98 false_98 true_98 false_98))
(assert (and_98 false_98 false_98 true_98))
(assert (and_98 true_98 true_98 true_98))
(assert (or_99 false_98 false_98 false_98))
(assert (or_99 true_98 true_98 false_98))
(assert (or_99 true_98 false_98 true_98))
(assert (or_99 true_98 true_98 true_98))
(assert (hence_98 true_98 false_98 false_98))
(assert (hence_98 false_98 true_98 false_98))
(assert (hence_98 true_98 false_98 true_98))
(assert (hence_98 true_98 true_98 true_98))
(assert (not_98 true_98 false_98))
(assert (not_98 false_98 true_98))
(declare-fun diseqInt (Int Int) Bool)
(declare-fun p_35 (Int Int) Bool)
(declare-fun iszero_11 (Int) Bool)
(declare-fun issucc_11 (Int) Bool)
(assert (forall ((x_11821 Int))
	(p_35 x_11821 (succ_11 x_11821))))
(assert (iszero_11 zero_11))
(assert (forall ((x_11823 Int))
	(issucc_11 (succ_11 x_11823))))
(assert (forall ((x_11824 Int))
	(diseqInt zero_11 (succ_11 x_11824))))
(assert (forall ((x_11825 Int))
	(diseqInt (succ_11 x_11825) zero_11)))
(assert (forall ((x_11826 Int) (x_11827 Int))
	(=> (diseqInt x_11826 x_11827) (diseqInt (succ_11 x_11826) (succ_11 x_11827)))))
(declare-fun leq_5 (Bool_98 Int Int) Bool)
(assert (forall ((x_11805 Bool_98) (x_11803 Int) (z_521 Int))
	(=> (leq_5 x_11805 z_521 x_11803) (leq_5 x_11805 (succ_11 z_521) (succ_11 x_11803)))))
(assert (forall ((z_521 Int))
	(leq_5 false_98 (succ_11 z_521) zero_11)))
(assert (forall ((y_460 Int))
	(leq_5 true_98 zero_11 y_460)))
(assert (forall ((x_11804 Int) (y_461 Int))
	(=> (and true (diseqInt y_461 x_11804) (leq_5 true_98 y_461 x_11804) (leq_5 true_98 x_11804 y_461)) false)))
(assert (forall ((x_11804 Int) (y_461 Int))
	(=> (and true (diseqInt x_11804 x_11804) (leq_5 true_98 y_461 x_11804) (leq_5 false_98 x_11804 y_461)) false)))
(assert (forall ((x_11804 Int) (y_461 Int))
	(=> (and true (diseqInt y_461 y_461) (leq_5 false_98 y_461 x_11804) (leq_5 true_98 x_11804 y_461)) false)))
(assert (forall ((x_11804 Int) (y_461 Int))
	(=> (and true (diseqInt x_11804 y_461) (leq_5 false_98 y_461 x_11804) (leq_5 false_98 x_11804 y_461)) false)))
(check-sat)
