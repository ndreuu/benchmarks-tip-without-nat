
(set-logic HORN)
(declare-datatypes ((Bool_426 0)) (((false_426) (true_426))))
(declare-fun diseqBool_211 (Bool_426 Bool_426) Bool)
(declare-fun isfalse_211 (Bool_426) Bool)
(declare-fun istrue_211 (Bool_426) Bool)
(assert (isfalse_211 false_426))
(assert (istrue_211 true_426))
(assert (diseqBool_211 false_426 true_426))
(assert (diseqBool_211 true_426 false_426))
(declare-fun and_432 (Bool_426 Bool_426 Bool_426) Bool)
(declare-fun or_443 (Bool_426 Bool_426 Bool_426) Bool)
(declare-fun hence_426 (Bool_426 Bool_426 Bool_426) Bool)
(declare-fun not_431 (Bool_426 Bool_426) Bool)
(assert (and_432 false_426 false_426 false_426))
(assert (and_432 false_426 true_426 false_426))
(assert (and_432 false_426 false_426 true_426))
(assert (and_432 true_426 true_426 true_426))
(assert (or_443 false_426 false_426 false_426))
(assert (or_443 true_426 true_426 false_426))
(assert (or_443 true_426 false_426 true_426))
(assert (or_443 true_426 true_426 true_426))
(assert (hence_426 true_426 false_426 false_426))
(assert (hence_426 false_426 true_426 false_426))
(assert (hence_426 true_426 false_426 true_426))
(assert (hence_426 true_426 true_426 true_426))
(assert (not_431 true_426 false_426))
(assert (not_431 false_426 true_426))
(declare-datatypes ((T_31 0)) (((A_114) (B_120) (C_68))))
(declare-fun diseqT_28 (T_31 T_31) Bool)
(declare-fun isA_35 (T_31) Bool)
(declare-fun isB_35 (T_31) Bool)
(declare-fun isC_36 (T_31) Bool)
(assert (isA_35 A_114))
(assert (isB_35 B_120))
(assert (isC_36 C_68))
(assert (diseqT_28 A_114 B_120))
(assert (diseqT_28 A_114 C_68))
(assert (diseqT_28 B_120 A_114))
(assert (diseqT_28 C_68 A_114))
(assert (diseqT_28 B_120 C_68))
(assert (diseqT_28 C_68 B_120))
(declare-datatypes ((list_375 0)) (((nil_427) (cons_369 (head_738 T_31) (tail_744 list_375)))))
(declare-fun diseqlist_369 (list_375 list_375) Bool)
(declare-fun head_739 (T_31 list_375) Bool)
(declare-fun tail_745 (list_375 list_375) Bool)
(declare-fun isnil_427 (list_375) Bool)
(declare-fun iscons_369 (list_375) Bool)
(assert (forall ((x_114393 T_31) (x_114394 list_375))
	(head_739 x_114393 (cons_369 x_114393 x_114394))))
(assert (forall ((x_114393 T_31) (x_114394 list_375))
	(tail_745 x_114394 (cons_369 x_114393 x_114394))))
(assert (isnil_427 nil_427))
(assert (forall ((x_114396 T_31) (x_114397 list_375))
	(iscons_369 (cons_369 x_114396 x_114397))))
(assert (forall ((x_114398 T_31) (x_114399 list_375))
	(diseqlist_369 nil_427 (cons_369 x_114398 x_114399))))
(assert (forall ((x_114400 T_31) (x_114401 list_375))
	(diseqlist_369 (cons_369 x_114400 x_114401) nil_427)))
(assert (forall ((x_114402 T_31) (x_114403 list_375) (x_114404 T_31) (x_114405 list_375))
	(=> (diseqT_28 x_114402 x_114404) (diseqlist_369 (cons_369 x_114402 x_114403) (cons_369 x_114404 x_114405)))))
(assert (forall ((x_114402 T_31) (x_114403 list_375) (x_114404 T_31) (x_114405 list_375))
	(=> (diseqlist_369 x_114403 x_114405) (diseqlist_369 (cons_369 x_114402 x_114403) (cons_369 x_114404 x_114405)))))
(declare-datatypes ((R_614 0)) (((Nil_428) (Eps_84) (Atom_42 (projAtom_84 T_31)) (x_109986 (proj_288 R_614) (proj_289 R_614)) (x_109987 (proj_290 R_614) (proj_291 R_614)) (x_109988 (proj_292 R_614) (proj_293 R_614)) (Star_42 (projStar_84 R_614)))))
(declare-fun diseqR_42 (R_614 R_614) Bool)
(declare-fun projAtom_85 (T_31 R_614) Bool)
(declare-fun proj_294 (R_614 R_614) Bool)
(declare-fun proj_295 (R_614 R_614) Bool)
(declare-fun proj_296 (R_614 R_614) Bool)
(declare-fun proj_297 (R_614 R_614) Bool)
(declare-fun proj_298 (R_614 R_614) Bool)
(declare-fun proj_299 (R_614 R_614) Bool)
(declare-fun projStar_85 (R_614 R_614) Bool)
(declare-fun isNil_428 (R_614) Bool)
(declare-fun isEps_42 (R_614) Bool)
(declare-fun isAtom_42 (R_614) Bool)
(declare-fun isx_87 (R_614) Bool)
(declare-fun isx_88 (R_614) Bool)
(declare-fun isx_89 (R_614) Bool)
(declare-fun isStar_42 (R_614) Bool)
(assert (forall ((x_114408 T_31))
	(projAtom_85 x_114408 (Atom_42 x_114408))))
(assert (forall ((x_114410 R_614) (x_114411 R_614))
	(proj_294 x_114410 (x_109986 x_114410 x_114411))))
(assert (forall ((x_114410 R_614) (x_114411 R_614))
	(proj_295 x_114411 (x_109986 x_114410 x_114411))))
(assert (forall ((x_114413 R_614) (x_114414 R_614))
	(proj_296 x_114413 (x_109987 x_114413 x_114414))))
(assert (forall ((x_114413 R_614) (x_114414 R_614))
	(proj_297 x_114414 (x_109987 x_114413 x_114414))))
(assert (forall ((x_114416 R_614) (x_114417 R_614))
	(proj_298 x_114416 (x_109988 x_114416 x_114417))))
(assert (forall ((x_114416 R_614) (x_114417 R_614))
	(proj_299 x_114417 (x_109988 x_114416 x_114417))))
(assert (forall ((x_114419 R_614))
	(projStar_85 x_114419 (Star_42 x_114419))))
(assert (isNil_428 Nil_428))
(assert (isEps_42 Eps_84))
(assert (forall ((x_114421 T_31))
	(isAtom_42 (Atom_42 x_114421))))
(assert (forall ((x_114422 R_614) (x_114423 R_614))
	(isx_87 (x_109986 x_114422 x_114423))))
(assert (forall ((x_114424 R_614) (x_114425 R_614))
	(isx_88 (x_109987 x_114424 x_114425))))
(assert (forall ((x_114426 R_614) (x_114427 R_614))
	(isx_89 (x_109988 x_114426 x_114427))))
(assert (forall ((x_114428 R_614))
	(isStar_42 (Star_42 x_114428))))
(assert (diseqR_42 Nil_428 Eps_84))
(assert (forall ((x_114429 T_31))
	(diseqR_42 Nil_428 (Atom_42 x_114429))))
(assert (forall ((x_114430 R_614) (x_114431 R_614))
	(diseqR_42 Nil_428 (x_109986 x_114430 x_114431))))
(assert (forall ((x_114432 R_614) (x_114433 R_614))
	(diseqR_42 Nil_428 (x_109987 x_114432 x_114433))))
(assert (forall ((x_114434 R_614) (x_114435 R_614))
	(diseqR_42 Nil_428 (x_109988 x_114434 x_114435))))
(assert (forall ((x_114436 R_614))
	(diseqR_42 Nil_428 (Star_42 x_114436))))
(assert (diseqR_42 Eps_84 Nil_428))
(assert (forall ((x_114437 T_31))
	(diseqR_42 (Atom_42 x_114437) Nil_428)))
(assert (forall ((x_114438 R_614) (x_114439 R_614))
	(diseqR_42 (x_109986 x_114438 x_114439) Nil_428)))
(assert (forall ((x_114440 R_614) (x_114441 R_614))
	(diseqR_42 (x_109987 x_114440 x_114441) Nil_428)))
(assert (forall ((x_114442 R_614) (x_114443 R_614))
	(diseqR_42 (x_109988 x_114442 x_114443) Nil_428)))
(assert (forall ((x_114444 R_614))
	(diseqR_42 (Star_42 x_114444) Nil_428)))
(assert (forall ((x_114445 T_31))
	(diseqR_42 Eps_84 (Atom_42 x_114445))))
(assert (forall ((x_114446 R_614) (x_114447 R_614))
	(diseqR_42 Eps_84 (x_109986 x_114446 x_114447))))
(assert (forall ((x_114448 R_614) (x_114449 R_614))
	(diseqR_42 Eps_84 (x_109987 x_114448 x_114449))))
(assert (forall ((x_114450 R_614) (x_114451 R_614))
	(diseqR_42 Eps_84 (x_109988 x_114450 x_114451))))
(assert (forall ((x_114452 R_614))
	(diseqR_42 Eps_84 (Star_42 x_114452))))
(assert (forall ((x_114453 T_31))
	(diseqR_42 (Atom_42 x_114453) Eps_84)))
(assert (forall ((x_114454 R_614) (x_114455 R_614))
	(diseqR_42 (x_109986 x_114454 x_114455) Eps_84)))
(assert (forall ((x_114456 R_614) (x_114457 R_614))
	(diseqR_42 (x_109987 x_114456 x_114457) Eps_84)))
(assert (forall ((x_114458 R_614) (x_114459 R_614))
	(diseqR_42 (x_109988 x_114458 x_114459) Eps_84)))
(assert (forall ((x_114460 R_614))
	(diseqR_42 (Star_42 x_114460) Eps_84)))
(assert (forall ((x_114461 T_31) (x_114462 R_614) (x_114463 R_614))
	(diseqR_42 (Atom_42 x_114461) (x_109986 x_114462 x_114463))))
(assert (forall ((x_114464 T_31) (x_114465 R_614) (x_114466 R_614))
	(diseqR_42 (Atom_42 x_114464) (x_109987 x_114465 x_114466))))
(assert (forall ((x_114467 T_31) (x_114468 R_614) (x_114469 R_614))
	(diseqR_42 (Atom_42 x_114467) (x_109988 x_114468 x_114469))))
(assert (forall ((x_114470 T_31) (x_114471 R_614))
	(diseqR_42 (Atom_42 x_114470) (Star_42 x_114471))))
(assert (forall ((x_114472 R_614) (x_114473 R_614) (x_114474 T_31))
	(diseqR_42 (x_109986 x_114472 x_114473) (Atom_42 x_114474))))
(assert (forall ((x_114475 R_614) (x_114476 R_614) (x_114477 T_31))
	(diseqR_42 (x_109987 x_114475 x_114476) (Atom_42 x_114477))))
(assert (forall ((x_114478 R_614) (x_114479 R_614) (x_114480 T_31))
	(diseqR_42 (x_109988 x_114478 x_114479) (Atom_42 x_114480))))
(assert (forall ((x_114481 R_614) (x_114482 T_31))
	(diseqR_42 (Star_42 x_114481) (Atom_42 x_114482))))
(assert (forall ((x_114483 R_614) (x_114484 R_614) (x_114485 R_614) (x_114486 R_614))
	(diseqR_42 (x_109986 x_114483 x_114484) (x_109987 x_114485 x_114486))))
(assert (forall ((x_114487 R_614) (x_114488 R_614) (x_114489 R_614) (x_114490 R_614))
	(diseqR_42 (x_109986 x_114487 x_114488) (x_109988 x_114489 x_114490))))
(assert (forall ((x_114491 R_614) (x_114492 R_614) (x_114493 R_614))
	(diseqR_42 (x_109986 x_114491 x_114492) (Star_42 x_114493))))
(assert (forall ((x_114494 R_614) (x_114495 R_614) (x_114496 R_614) (x_114497 R_614))
	(diseqR_42 (x_109987 x_114494 x_114495) (x_109986 x_114496 x_114497))))
(assert (forall ((x_114498 R_614) (x_114499 R_614) (x_114500 R_614) (x_114501 R_614))
	(diseqR_42 (x_109988 x_114498 x_114499) (x_109986 x_114500 x_114501))))
(assert (forall ((x_114502 R_614) (x_114503 R_614) (x_114504 R_614))
	(diseqR_42 (Star_42 x_114502) (x_109986 x_114503 x_114504))))
(assert (forall ((x_114505 R_614) (x_114506 R_614) (x_114507 R_614) (x_114508 R_614))
	(diseqR_42 (x_109987 x_114505 x_114506) (x_109988 x_114507 x_114508))))
(assert (forall ((x_114509 R_614) (x_114510 R_614) (x_114511 R_614))
	(diseqR_42 (x_109987 x_114509 x_114510) (Star_42 x_114511))))
(assert (forall ((x_114512 R_614) (x_114513 R_614) (x_114514 R_614) (x_114515 R_614))
	(diseqR_42 (x_109988 x_114512 x_114513) (x_109987 x_114514 x_114515))))
(assert (forall ((x_114516 R_614) (x_114517 R_614) (x_114518 R_614))
	(diseqR_42 (Star_42 x_114516) (x_109987 x_114517 x_114518))))
(assert (forall ((x_114519 R_614) (x_114520 R_614) (x_114521 R_614))
	(diseqR_42 (x_109988 x_114519 x_114520) (Star_42 x_114521))))
(assert (forall ((x_114522 R_614) (x_114523 R_614) (x_114524 R_614))
	(diseqR_42 (Star_42 x_114522) (x_109988 x_114523 x_114524))))
(assert (forall ((x_114525 T_31) (x_114526 T_31))
	(=> (diseqT_28 x_114525 x_114526) (diseqR_42 (Atom_42 x_114525) (Atom_42 x_114526)))))
(assert (forall ((x_114527 R_614) (x_114528 R_614) (x_114529 R_614) (x_114530 R_614))
	(=> (diseqR_42 x_114527 x_114529) (diseqR_42 (x_109986 x_114527 x_114528) (x_109986 x_114529 x_114530)))))
(assert (forall ((x_114527 R_614) (x_114528 R_614) (x_114529 R_614) (x_114530 R_614))
	(=> (diseqR_42 x_114528 x_114530) (diseqR_42 (x_109986 x_114527 x_114528) (x_109986 x_114529 x_114530)))))
(assert (forall ((x_114531 R_614) (x_114532 R_614) (x_114533 R_614) (x_114534 R_614))
	(=> (diseqR_42 x_114531 x_114533) (diseqR_42 (x_109987 x_114531 x_114532) (x_109987 x_114533 x_114534)))))
(assert (forall ((x_114531 R_614) (x_114532 R_614) (x_114533 R_614) (x_114534 R_614))
	(=> (diseqR_42 x_114532 x_114534) (diseqR_42 (x_109987 x_114531 x_114532) (x_109987 x_114533 x_114534)))))
(assert (forall ((x_114535 R_614) (x_114536 R_614) (x_114537 R_614) (x_114538 R_614))
	(=> (diseqR_42 x_114535 x_114537) (diseqR_42 (x_109988 x_114535 x_114536) (x_109988 x_114537 x_114538)))))
(assert (forall ((x_114535 R_614) (x_114536 R_614) (x_114537 R_614) (x_114538 R_614))
	(=> (diseqR_42 x_114536 x_114538) (diseqR_42 (x_109988 x_114535 x_114536) (x_109988 x_114537 x_114538)))))
(assert (forall ((x_114539 R_614) (x_114540 R_614))
	(=> (diseqR_42 x_114539 x_114540) (diseqR_42 (Star_42 x_114539) (Star_42 x_114540)))))
(declare-fun x_109989 (R_614 R_614 R_614) Bool)
(assert (forall ((y_3065 R_614))
	(x_109989 Nil_428 Nil_428 y_3065)))
(assert (forall ((x_109991 R_614) (x_110414 T_31))
	(x_109989 Nil_428 (Atom_42 x_110414) Nil_428)))
(assert (forall ((x_109991 R_614))
	(x_109989 Nil_428 Eps_84 Nil_428)))
(assert (forall ((x_109991 R_614) (x_110415 R_614))
	(x_109989 Nil_428 (Star_42 x_110415) Nil_428)))
(assert (forall ((x_109991 R_614) (x_110416 R_614) (x_110417 R_614))
	(x_109989 Nil_428 (x_109986 x_110416 x_110417) Nil_428)))
(assert (forall ((x_109991 R_614) (x_110418 R_614) (x_110419 R_614))
	(x_109989 Nil_428 (x_109987 x_110418 x_110419) Nil_428)))
(assert (forall ((x_109991 R_614) (x_110420 R_614) (x_110421 R_614))
	(x_109989 Nil_428 (x_109988 x_110420 x_110421) Nil_428)))
(assert (forall ((x_109992 R_614) (x_110070 T_31) (x_109991 R_614))
	(x_109989 (Atom_42 x_110070) Eps_84 (Atom_42 x_110070))))
(assert (forall ((x_109992 R_614) (x_109991 R_614))
	(x_109989 Eps_84 Eps_84 Eps_84)))
(assert (forall ((x_109992 R_614) (x_110071 R_614) (x_109991 R_614))
	(x_109989 (Star_42 x_110071) Eps_84 (Star_42 x_110071))))
(assert (forall ((x_109992 R_614) (x_110072 R_614) (x_110073 R_614) (x_109991 R_614))
	(x_109989 (x_109986 x_110072 x_110073) Eps_84 (x_109986 x_110072 x_110073))))
(assert (forall ((x_109992 R_614) (x_110074 R_614) (x_110075 R_614) (x_109991 R_614))
	(x_109989 (x_109987 x_110074 x_110075) Eps_84 (x_109987 x_110074 x_110075))))
(assert (forall ((x_109992 R_614) (x_110076 R_614) (x_110077 R_614) (x_109991 R_614))
	(x_109989 (x_109988 x_110076 x_110077) Eps_84 (x_109988 x_110076 x_110077))))
(assert (forall ((x_109993 R_614) (x_110014 T_31) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (Atom_42 x_110014) (Atom_42 x_110014) Eps_84)))
(assert (forall ((x_109993 R_614) (x_110015 R_614) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (Star_42 x_110015) (Star_42 x_110015) Eps_84)))
(assert (forall ((x_109993 R_614) (x_110016 R_614) (x_110017 R_614) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (x_109986 x_110016 x_110017) (x_109986 x_110016 x_110017) Eps_84)))
(assert (forall ((x_109993 R_614) (x_110018 R_614) (x_110019 R_614) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (x_109987 x_110018 x_110019) (x_109987 x_110018 x_110019) Eps_84)))
(assert (forall ((x_109993 R_614) (x_110020 R_614) (x_110021 R_614) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (x_109988 x_110020 x_110021) (x_109988 x_110020 x_110021) Eps_84)))
(assert (forall ((x_109994 R_614) (x_110006 T_31) (x_109993 R_614) (x_110022 T_31) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (x_109988 (Atom_42 x_110022) (Atom_42 x_110006)) (Atom_42 x_110022) (Atom_42 x_110006))))
(assert (forall ((x_109994 R_614) (x_110006 T_31) (x_109993 R_614) (x_110023 R_614) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (x_109988 (Star_42 x_110023) (Atom_42 x_110006)) (Star_42 x_110023) (Atom_42 x_110006))))
(assert (forall ((x_109994 R_614) (x_110006 T_31) (x_109993 R_614) (x_110024 R_614) (x_110025 R_614) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (x_109988 (x_109986 x_110024 x_110025) (Atom_42 x_110006)) (x_109986 x_110024 x_110025) (Atom_42 x_110006))))
(assert (forall ((x_109994 R_614) (x_110006 T_31) (x_109993 R_614) (x_110026 R_614) (x_110027 R_614) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (x_109988 (x_109987 x_110026 x_110027) (Atom_42 x_110006)) (x_109987 x_110026 x_110027) (Atom_42 x_110006))))
(assert (forall ((x_109994 R_614) (x_110006 T_31) (x_109993 R_614) (x_110028 R_614) (x_110029 R_614) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (x_109988 (x_109988 x_110028 x_110029) (Atom_42 x_110006)) (x_109988 x_110028 x_110029) (Atom_42 x_110006))))
(assert (forall ((x_109994 R_614) (x_110007 R_614) (x_109993 R_614) (x_110038 T_31) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (x_109988 (Atom_42 x_110038) (Star_42 x_110007)) (Atom_42 x_110038) (Star_42 x_110007))))
(assert (forall ((x_109994 R_614) (x_110007 R_614) (x_109993 R_614) (x_110039 R_614) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (x_109988 (Star_42 x_110039) (Star_42 x_110007)) (Star_42 x_110039) (Star_42 x_110007))))
(assert (forall ((x_109994 R_614) (x_110007 R_614) (x_109993 R_614) (x_110040 R_614) (x_110041 R_614) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (x_109988 (x_109986 x_110040 x_110041) (Star_42 x_110007)) (x_109986 x_110040 x_110041) (Star_42 x_110007))))
(assert (forall ((x_109994 R_614) (x_110007 R_614) (x_109993 R_614) (x_110042 R_614) (x_110043 R_614) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (x_109988 (x_109987 x_110042 x_110043) (Star_42 x_110007)) (x_109987 x_110042 x_110043) (Star_42 x_110007))))
(assert (forall ((x_109994 R_614) (x_110007 R_614) (x_109993 R_614) (x_110044 R_614) (x_110045 R_614) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (x_109988 (x_109988 x_110044 x_110045) (Star_42 x_110007)) (x_109988 x_110044 x_110045) (Star_42 x_110007))))
(assert (forall ((x_109994 R_614) (x_110008 R_614) (x_110009 R_614) (x_109993 R_614) (x_110046 T_31) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (x_109988 (Atom_42 x_110046) (x_109986 x_110008 x_110009)) (Atom_42 x_110046) (x_109986 x_110008 x_110009))))
(assert (forall ((x_109994 R_614) (x_110008 R_614) (x_110009 R_614) (x_109993 R_614) (x_110047 R_614) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (x_109988 (Star_42 x_110047) (x_109986 x_110008 x_110009)) (Star_42 x_110047) (x_109986 x_110008 x_110009))))
(assert (forall ((x_109994 R_614) (x_110008 R_614) (x_110009 R_614) (x_109993 R_614) (x_110048 R_614) (x_110049 R_614) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (x_109988 (x_109986 x_110048 x_110049) (x_109986 x_110008 x_110009)) (x_109986 x_110048 x_110049) (x_109986 x_110008 x_110009))))
(assert (forall ((x_109994 R_614) (x_110008 R_614) (x_110009 R_614) (x_109993 R_614) (x_110050 R_614) (x_110051 R_614) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (x_109988 (x_109987 x_110050 x_110051) (x_109986 x_110008 x_110009)) (x_109987 x_110050 x_110051) (x_109986 x_110008 x_110009))))
(assert (forall ((x_109994 R_614) (x_110008 R_614) (x_110009 R_614) (x_109993 R_614) (x_110052 R_614) (x_110053 R_614) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (x_109988 (x_109988 x_110052 x_110053) (x_109986 x_110008 x_110009)) (x_109988 x_110052 x_110053) (x_109986 x_110008 x_110009))))
(assert (forall ((x_109994 R_614) (x_110010 R_614) (x_110011 R_614) (x_109993 R_614) (x_110054 T_31) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (x_109988 (Atom_42 x_110054) (x_109987 x_110010 x_110011)) (Atom_42 x_110054) (x_109987 x_110010 x_110011))))
(assert (forall ((x_109994 R_614) (x_110010 R_614) (x_110011 R_614) (x_109993 R_614) (x_110055 R_614) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (x_109988 (Star_42 x_110055) (x_109987 x_110010 x_110011)) (Star_42 x_110055) (x_109987 x_110010 x_110011))))
(assert (forall ((x_109994 R_614) (x_110010 R_614) (x_110011 R_614) (x_109993 R_614) (x_110056 R_614) (x_110057 R_614) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (x_109988 (x_109986 x_110056 x_110057) (x_109987 x_110010 x_110011)) (x_109986 x_110056 x_110057) (x_109987 x_110010 x_110011))))
(assert (forall ((x_109994 R_614) (x_110010 R_614) (x_110011 R_614) (x_109993 R_614) (x_110058 R_614) (x_110059 R_614) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (x_109988 (x_109987 x_110058 x_110059) (x_109987 x_110010 x_110011)) (x_109987 x_110058 x_110059) (x_109987 x_110010 x_110011))))
(assert (forall ((x_109994 R_614) (x_110010 R_614) (x_110011 R_614) (x_109993 R_614) (x_110060 R_614) (x_110061 R_614) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (x_109988 (x_109988 x_110060 x_110061) (x_109987 x_110010 x_110011)) (x_109988 x_110060 x_110061) (x_109987 x_110010 x_110011))))
(assert (forall ((x_109994 R_614) (x_110012 R_614) (x_110013 R_614) (x_109993 R_614) (x_110062 T_31) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (x_109988 (Atom_42 x_110062) (x_109988 x_110012 x_110013)) (Atom_42 x_110062) (x_109988 x_110012 x_110013))))
(assert (forall ((x_109994 R_614) (x_110012 R_614) (x_110013 R_614) (x_109993 R_614) (x_110063 R_614) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (x_109988 (Star_42 x_110063) (x_109988 x_110012 x_110013)) (Star_42 x_110063) (x_109988 x_110012 x_110013))))
(assert (forall ((x_109994 R_614) (x_110012 R_614) (x_110013 R_614) (x_109993 R_614) (x_110064 R_614) (x_110065 R_614) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (x_109988 (x_109986 x_110064 x_110065) (x_109988 x_110012 x_110013)) (x_109986 x_110064 x_110065) (x_109988 x_110012 x_110013))))
(assert (forall ((x_109994 R_614) (x_110012 R_614) (x_110013 R_614) (x_109993 R_614) (x_110066 R_614) (x_110067 R_614) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (x_109988 (x_109987 x_110066 x_110067) (x_109988 x_110012 x_110013)) (x_109987 x_110066 x_110067) (x_109988 x_110012 x_110013))))
(assert (forall ((x_109994 R_614) (x_110012 R_614) (x_110013 R_614) (x_109993 R_614) (x_110068 R_614) (x_110069 R_614) (x_109992 R_614) (x_109991 R_614))
	(x_109989 (x_109988 (x_109988 x_110068 x_110069) (x_109988 x_110012 x_110013)) (x_109988 x_110068 x_110069) (x_109988 x_110012 x_110013))))
(declare-fun x_109995 (R_614 R_614 R_614) Bool)
(assert (forall ((x_114170 R_614))
	(x_109995 x_114170 Nil_428 x_114170)))
(assert (forall ((x_109997 R_614) (x_112494 T_31))
	(x_109995 (Atom_42 x_112494) (Atom_42 x_112494) Nil_428)))
(assert (forall ((x_109997 R_614))
	(x_109995 Eps_84 Eps_84 Nil_428)))
(assert (forall ((x_109997 R_614) (x_112495 R_614))
	(x_109995 (Star_42 x_112495) (Star_42 x_112495) Nil_428)))
(assert (forall ((x_109997 R_614) (x_112496 R_614) (x_112497 R_614))
	(x_109995 (x_109986 x_112496 x_112497) (x_109986 x_112496 x_112497) Nil_428)))
(assert (forall ((x_109997 R_614) (x_112498 R_614) (x_112499 R_614))
	(x_109995 (x_109987 x_112498 x_112499) (x_109987 x_112498 x_112499) Nil_428)))
(assert (forall ((x_109997 R_614) (x_112500 R_614) (x_112501 R_614))
	(x_109995 (x_109988 x_112500 x_112501) (x_109988 x_112500 x_112501) Nil_428)))
(assert (forall ((x_109998 R_614) (x_112486 T_31) (x_109997 R_614) (x_112502 T_31))
	(x_109995 (x_109986 (Atom_42 x_112502) (Atom_42 x_112486)) (Atom_42 x_112502) (Atom_42 x_112486))))
(assert (forall ((x_109998 R_614) (x_112486 T_31) (x_109997 R_614))
	(x_109995 (x_109986 Eps_84 (Atom_42 x_112486)) Eps_84 (Atom_42 x_112486))))
(assert (forall ((x_109998 R_614) (x_112486 T_31) (x_109997 R_614) (x_112503 R_614))
	(x_109995 (x_109986 (Star_42 x_112503) (Atom_42 x_112486)) (Star_42 x_112503) (Atom_42 x_112486))))
(assert (forall ((x_109998 R_614) (x_112486 T_31) (x_109997 R_614) (x_112504 R_614) (x_112505 R_614))
	(x_109995 (x_109986 (x_109986 x_112504 x_112505) (Atom_42 x_112486)) (x_109986 x_112504 x_112505) (Atom_42 x_112486))))
(assert (forall ((x_109998 R_614) (x_112486 T_31) (x_109997 R_614) (x_112506 R_614) (x_112507 R_614))
	(x_109995 (x_109986 (x_109987 x_112506 x_112507) (Atom_42 x_112486)) (x_109987 x_112506 x_112507) (Atom_42 x_112486))))
(assert (forall ((x_109998 R_614) (x_112486 T_31) (x_109997 R_614) (x_112508 R_614) (x_112509 R_614))
	(x_109995 (x_109986 (x_109988 x_112508 x_112509) (Atom_42 x_112486)) (x_109988 x_112508 x_112509) (Atom_42 x_112486))))
(assert (forall ((x_109998 R_614) (x_109997 R_614) (x_112510 T_31))
	(x_109995 (x_109986 (Atom_42 x_112510) Eps_84) (Atom_42 x_112510) Eps_84)))
(assert (forall ((x_109998 R_614) (x_109997 R_614))
	(x_109995 (x_109986 Eps_84 Eps_84) Eps_84 Eps_84)))
(assert (forall ((x_109998 R_614) (x_109997 R_614) (x_112511 R_614))
	(x_109995 (x_109986 (Star_42 x_112511) Eps_84) (Star_42 x_112511) Eps_84)))
(assert (forall ((x_109998 R_614) (x_109997 R_614) (x_112512 R_614) (x_112513 R_614))
	(x_109995 (x_109986 (x_109986 x_112512 x_112513) Eps_84) (x_109986 x_112512 x_112513) Eps_84)))
(assert (forall ((x_109998 R_614) (x_109997 R_614) (x_112514 R_614) (x_112515 R_614))
	(x_109995 (x_109986 (x_109987 x_112514 x_112515) Eps_84) (x_109987 x_112514 x_112515) Eps_84)))
(assert (forall ((x_109998 R_614) (x_109997 R_614) (x_112516 R_614) (x_112517 R_614))
	(x_109995 (x_109986 (x_109988 x_112516 x_112517) Eps_84) (x_109988 x_112516 x_112517) Eps_84)))
(assert (forall ((x_109998 R_614) (x_112487 R_614) (x_109997 R_614) (x_112518 T_31))
	(x_109995 (x_109986 (Atom_42 x_112518) (Star_42 x_112487)) (Atom_42 x_112518) (Star_42 x_112487))))
(assert (forall ((x_109998 R_614) (x_112487 R_614) (x_109997 R_614))
	(x_109995 (x_109986 Eps_84 (Star_42 x_112487)) Eps_84 (Star_42 x_112487))))
(assert (forall ((x_109998 R_614) (x_112487 R_614) (x_109997 R_614) (x_112519 R_614))
	(x_109995 (x_109986 (Star_42 x_112519) (Star_42 x_112487)) (Star_42 x_112519) (Star_42 x_112487))))
(assert (forall ((x_109998 R_614) (x_112487 R_614) (x_109997 R_614) (x_112520 R_614) (x_112521 R_614))
	(x_109995 (x_109986 (x_109986 x_112520 x_112521) (Star_42 x_112487)) (x_109986 x_112520 x_112521) (Star_42 x_112487))))
(assert (forall ((x_109998 R_614) (x_112487 R_614) (x_109997 R_614) (x_112522 R_614) (x_112523 R_614))
	(x_109995 (x_109986 (x_109987 x_112522 x_112523) (Star_42 x_112487)) (x_109987 x_112522 x_112523) (Star_42 x_112487))))
(assert (forall ((x_109998 R_614) (x_112487 R_614) (x_109997 R_614) (x_112524 R_614) (x_112525 R_614))
	(x_109995 (x_109986 (x_109988 x_112524 x_112525) (Star_42 x_112487)) (x_109988 x_112524 x_112525) (Star_42 x_112487))))
(assert (forall ((x_109998 R_614) (x_112488 R_614) (x_112489 R_614) (x_109997 R_614) (x_112526 T_31))
	(x_109995 (x_109986 (Atom_42 x_112526) (x_109986 x_112488 x_112489)) (Atom_42 x_112526) (x_109986 x_112488 x_112489))))
(assert (forall ((x_109998 R_614) (x_112488 R_614) (x_112489 R_614) (x_109997 R_614))
	(x_109995 (x_109986 Eps_84 (x_109986 x_112488 x_112489)) Eps_84 (x_109986 x_112488 x_112489))))
(assert (forall ((x_109998 R_614) (x_112488 R_614) (x_112489 R_614) (x_109997 R_614) (x_112527 R_614))
	(x_109995 (x_109986 (Star_42 x_112527) (x_109986 x_112488 x_112489)) (Star_42 x_112527) (x_109986 x_112488 x_112489))))
(assert (forall ((x_109998 R_614) (x_112488 R_614) (x_112489 R_614) (x_109997 R_614) (x_112528 R_614) (x_112529 R_614))
	(x_109995 (x_109986 (x_109986 x_112528 x_112529) (x_109986 x_112488 x_112489)) (x_109986 x_112528 x_112529) (x_109986 x_112488 x_112489))))
(assert (forall ((x_109998 R_614) (x_112488 R_614) (x_112489 R_614) (x_109997 R_614) (x_112530 R_614) (x_112531 R_614))
	(x_109995 (x_109986 (x_109987 x_112530 x_112531) (x_109986 x_112488 x_112489)) (x_109987 x_112530 x_112531) (x_109986 x_112488 x_112489))))
(assert (forall ((x_109998 R_614) (x_112488 R_614) (x_112489 R_614) (x_109997 R_614) (x_112532 R_614) (x_112533 R_614))
	(x_109995 (x_109986 (x_109988 x_112532 x_112533) (x_109986 x_112488 x_112489)) (x_109988 x_112532 x_112533) (x_109986 x_112488 x_112489))))
(assert (forall ((x_109998 R_614) (x_112490 R_614) (x_112491 R_614) (x_109997 R_614) (x_112534 T_31))
	(x_109995 (x_109986 (Atom_42 x_112534) (x_109987 x_112490 x_112491)) (Atom_42 x_112534) (x_109987 x_112490 x_112491))))
(assert (forall ((x_109998 R_614) (x_112490 R_614) (x_112491 R_614) (x_109997 R_614))
	(x_109995 (x_109986 Eps_84 (x_109987 x_112490 x_112491)) Eps_84 (x_109987 x_112490 x_112491))))
(assert (forall ((x_109998 R_614) (x_112490 R_614) (x_112491 R_614) (x_109997 R_614) (x_112535 R_614))
	(x_109995 (x_109986 (Star_42 x_112535) (x_109987 x_112490 x_112491)) (Star_42 x_112535) (x_109987 x_112490 x_112491))))
(assert (forall ((x_109998 R_614) (x_112490 R_614) (x_112491 R_614) (x_109997 R_614) (x_112536 R_614) (x_112537 R_614))
	(x_109995 (x_109986 (x_109986 x_112536 x_112537) (x_109987 x_112490 x_112491)) (x_109986 x_112536 x_112537) (x_109987 x_112490 x_112491))))
(assert (forall ((x_109998 R_614) (x_112490 R_614) (x_112491 R_614) (x_109997 R_614) (x_112538 R_614) (x_112539 R_614))
	(x_109995 (x_109986 (x_109987 x_112538 x_112539) (x_109987 x_112490 x_112491)) (x_109987 x_112538 x_112539) (x_109987 x_112490 x_112491))))
(assert (forall ((x_109998 R_614) (x_112490 R_614) (x_112491 R_614) (x_109997 R_614) (x_112540 R_614) (x_112541 R_614))
	(x_109995 (x_109986 (x_109988 x_112540 x_112541) (x_109987 x_112490 x_112491)) (x_109988 x_112540 x_112541) (x_109987 x_112490 x_112491))))
(assert (forall ((x_109998 R_614) (x_112492 R_614) (x_112493 R_614) (x_109997 R_614) (x_112542 T_31))
	(x_109995 (x_109986 (Atom_42 x_112542) (x_109988 x_112492 x_112493)) (Atom_42 x_112542) (x_109988 x_112492 x_112493))))
(assert (forall ((x_109998 R_614) (x_112492 R_614) (x_112493 R_614) (x_109997 R_614))
	(x_109995 (x_109986 Eps_84 (x_109988 x_112492 x_112493)) Eps_84 (x_109988 x_112492 x_112493))))
(assert (forall ((x_109998 R_614) (x_112492 R_614) (x_112493 R_614) (x_109997 R_614) (x_112543 R_614))
	(x_109995 (x_109986 (Star_42 x_112543) (x_109988 x_112492 x_112493)) (Star_42 x_112543) (x_109988 x_112492 x_112493))))
(assert (forall ((x_109998 R_614) (x_112492 R_614) (x_112493 R_614) (x_109997 R_614) (x_112544 R_614) (x_112545 R_614))
	(x_109995 (x_109986 (x_109986 x_112544 x_112545) (x_109988 x_112492 x_112493)) (x_109986 x_112544 x_112545) (x_109988 x_112492 x_112493))))
(assert (forall ((x_109998 R_614) (x_112492 R_614) (x_112493 R_614) (x_109997 R_614) (x_112546 R_614) (x_112547 R_614))
	(x_109995 (x_109986 (x_109987 x_112546 x_112547) (x_109988 x_112492 x_112493)) (x_109987 x_112546 x_112547) (x_109988 x_112492 x_112493))))
(assert (forall ((x_109998 R_614) (x_112492 R_614) (x_112493 R_614) (x_109997 R_614) (x_112548 R_614) (x_112549 R_614))
	(x_109995 (x_109986 (x_109988 x_112548 x_112549) (x_109988 x_112492 x_112493)) (x_109988 x_112548 x_112549) (x_109988 x_112492 x_112493))))
(declare-fun eps_85 (Bool_426 R_614) Bool)
(assert (forall ((y_3067 R_614))
	(eps_85 true_426 (Star_42 y_3067))))
(assert (forall ((x_114214 Bool_426) (x_114215 Bool_426) (x_114216 Bool_426) (p_561 R_614) (q_324 R_614))
	(=> (and (eps_85 x_114215 p_561) (eps_85 x_114216 q_324) (and_432 x_114214 x_114215 x_114216)) (eps_85 x_114214 (x_109988 p_561 q_324)))))
(assert (forall ((x_114217 Bool_426) (x_114218 Bool_426) (x_114219 Bool_426) (r_615 R_614) (q_325 R_614))
	(=> (and (eps_85 x_114218 r_615) (eps_85 x_114219 q_325) (and_432 x_114217 x_114218 x_114219)) (eps_85 x_114217 (x_109987 r_615 q_325)))))
(assert (forall ((x_114220 Bool_426) (x_114221 Bool_426) (x_114222 Bool_426) (p_562 R_614) (q_326 R_614))
	(=> (and (eps_85 x_114221 p_562) (eps_85 x_114222 q_326) (or_443 x_114220 x_114221 x_114222)) (eps_85 x_114220 (x_109986 p_562 q_326)))))
(assert (eps_85 true_426 Eps_84))
(assert (forall ((x_110000 R_614) (x_112550 T_31))
	(eps_85 false_426 (Atom_42 x_112550))))
(assert (forall ((x_110000 R_614))
	(eps_85 false_426 Nil_428)))
(declare-fun step_42 (R_614 R_614 T_31) Bool)
(assert (forall ((x_114226 R_614) (x_114227 R_614) (p_563 R_614) (y_3068 T_31))
	(=> (and (step_42 x_114227 p_563 y_3068) (x_109989 x_114226 x_114227 (Star_42 p_563))) (step_42 x_114226 (Star_42 p_563) y_3068))))
(assert (forall ((x_114230 R_614) (x_114231 R_614) (x_114232 R_614) (x_114233 R_614) (p_564 R_614) (q_327 R_614) (y_3068 T_31))
	(=> (and (step_42 x_114231 p_564 y_3068) (x_109989 x_114232 x_114231 q_327) (step_42 x_114233 q_327 y_3068) (x_109995 x_114230 x_114232 x_114233) (eps_85 true_426 p_564)) (step_42 x_114230 (x_109988 p_564 q_327) y_3068))))
(assert (forall ((x_114236 R_614) (x_114237 R_614) (x_114238 R_614) (p_564 R_614) (q_327 R_614) (y_3068 T_31))
	(=> (and (step_42 x_114237 p_564 y_3068) (x_109989 x_114238 x_114237 q_327) (x_109995 x_114236 x_114238 Nil_428) (eps_85 false_426 p_564)) (step_42 x_114236 (x_109988 p_564 q_327) y_3068))))
(assert (forall ((r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (step_42 Nil_428 r_616 y_3068) (step_42 Nil_428 (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110002 R_614) (x_112559 T_31) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 Nil_428 q_328 y_3068) (step_42 (Atom_42 x_112559) r_616 y_3068)) (step_42 Nil_428 (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110002 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 Nil_428 q_328 y_3068) (step_42 Eps_84 r_616 y_3068)) (step_42 Nil_428 (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110002 R_614) (x_112560 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 Nil_428 q_328 y_3068) (step_42 (Star_42 x_112560) r_616 y_3068)) (step_42 Nil_428 (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110002 R_614) (x_112561 R_614) (x_112562 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 Nil_428 q_328 y_3068) (step_42 (x_109986 x_112561 x_112562) r_616 y_3068)) (step_42 Nil_428 (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110002 R_614) (x_112563 R_614) (x_112564 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 Nil_428 q_328 y_3068) (step_42 (x_109987 x_112563 x_112564) r_616 y_3068)) (step_42 Nil_428 (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110002 R_614) (x_112565 R_614) (x_112566 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 Nil_428 q_328 y_3068) (step_42 (x_109988 x_112565 x_112566) r_616 y_3068)) (step_42 Nil_428 (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112551 T_31) (x_110002 R_614) (x_112567 T_31) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (Atom_42 x_112551) q_328 y_3068) (step_42 (Atom_42 x_112567) r_616 y_3068)) (step_42 (x_109987 (Atom_42 x_112567) (Atom_42 x_112551)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112551 T_31) (x_110002 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (Atom_42 x_112551) q_328 y_3068) (step_42 Eps_84 r_616 y_3068)) (step_42 (x_109987 Eps_84 (Atom_42 x_112551)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112551 T_31) (x_110002 R_614) (x_112568 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (Atom_42 x_112551) q_328 y_3068) (step_42 (Star_42 x_112568) r_616 y_3068)) (step_42 (x_109987 (Star_42 x_112568) (Atom_42 x_112551)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112551 T_31) (x_110002 R_614) (x_112569 R_614) (x_112570 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (Atom_42 x_112551) q_328 y_3068) (step_42 (x_109986 x_112569 x_112570) r_616 y_3068)) (step_42 (x_109987 (x_109986 x_112569 x_112570) (Atom_42 x_112551)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112551 T_31) (x_110002 R_614) (x_112571 R_614) (x_112572 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (Atom_42 x_112551) q_328 y_3068) (step_42 (x_109987 x_112571 x_112572) r_616 y_3068)) (step_42 (x_109987 (x_109987 x_112571 x_112572) (Atom_42 x_112551)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112551 T_31) (x_110002 R_614) (x_112573 R_614) (x_112574 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (Atom_42 x_112551) q_328 y_3068) (step_42 (x_109988 x_112573 x_112574) r_616 y_3068)) (step_42 (x_109987 (x_109988 x_112573 x_112574) (Atom_42 x_112551)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_110002 R_614) (x_112575 T_31) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 Eps_84 q_328 y_3068) (step_42 (Atom_42 x_112575) r_616 y_3068)) (step_42 (x_109987 (Atom_42 x_112575) Eps_84) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_110002 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 Eps_84 q_328 y_3068) (step_42 Eps_84 r_616 y_3068)) (step_42 (x_109987 Eps_84 Eps_84) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_110002 R_614) (x_112576 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 Eps_84 q_328 y_3068) (step_42 (Star_42 x_112576) r_616 y_3068)) (step_42 (x_109987 (Star_42 x_112576) Eps_84) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_110002 R_614) (x_112577 R_614) (x_112578 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 Eps_84 q_328 y_3068) (step_42 (x_109986 x_112577 x_112578) r_616 y_3068)) (step_42 (x_109987 (x_109986 x_112577 x_112578) Eps_84) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_110002 R_614) (x_112579 R_614) (x_112580 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 Eps_84 q_328 y_3068) (step_42 (x_109987 x_112579 x_112580) r_616 y_3068)) (step_42 (x_109987 (x_109987 x_112579 x_112580) Eps_84) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_110002 R_614) (x_112581 R_614) (x_112582 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 Eps_84 q_328 y_3068) (step_42 (x_109988 x_112581 x_112582) r_616 y_3068)) (step_42 (x_109987 (x_109988 x_112581 x_112582) Eps_84) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112552 R_614) (x_110002 R_614) (x_112583 T_31) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (Star_42 x_112552) q_328 y_3068) (step_42 (Atom_42 x_112583) r_616 y_3068)) (step_42 (x_109987 (Atom_42 x_112583) (Star_42 x_112552)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112552 R_614) (x_110002 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (Star_42 x_112552) q_328 y_3068) (step_42 Eps_84 r_616 y_3068)) (step_42 (x_109987 Eps_84 (Star_42 x_112552)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112552 R_614) (x_110002 R_614) (x_112584 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (Star_42 x_112552) q_328 y_3068) (step_42 (Star_42 x_112584) r_616 y_3068)) (step_42 (x_109987 (Star_42 x_112584) (Star_42 x_112552)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112552 R_614) (x_110002 R_614) (x_112585 R_614) (x_112586 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (Star_42 x_112552) q_328 y_3068) (step_42 (x_109986 x_112585 x_112586) r_616 y_3068)) (step_42 (x_109987 (x_109986 x_112585 x_112586) (Star_42 x_112552)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112552 R_614) (x_110002 R_614) (x_112587 R_614) (x_112588 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (Star_42 x_112552) q_328 y_3068) (step_42 (x_109987 x_112587 x_112588) r_616 y_3068)) (step_42 (x_109987 (x_109987 x_112587 x_112588) (Star_42 x_112552)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112552 R_614) (x_110002 R_614) (x_112589 R_614) (x_112590 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (Star_42 x_112552) q_328 y_3068) (step_42 (x_109988 x_112589 x_112590) r_616 y_3068)) (step_42 (x_109987 (x_109988 x_112589 x_112590) (Star_42 x_112552)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112553 R_614) (x_112554 R_614) (x_110002 R_614) (x_112591 T_31) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (x_109986 x_112553 x_112554) q_328 y_3068) (step_42 (Atom_42 x_112591) r_616 y_3068)) (step_42 (x_109987 (Atom_42 x_112591) (x_109986 x_112553 x_112554)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112553 R_614) (x_112554 R_614) (x_110002 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (x_109986 x_112553 x_112554) q_328 y_3068) (step_42 Eps_84 r_616 y_3068)) (step_42 (x_109987 Eps_84 (x_109986 x_112553 x_112554)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112553 R_614) (x_112554 R_614) (x_110002 R_614) (x_112592 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (x_109986 x_112553 x_112554) q_328 y_3068) (step_42 (Star_42 x_112592) r_616 y_3068)) (step_42 (x_109987 (Star_42 x_112592) (x_109986 x_112553 x_112554)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112553 R_614) (x_112554 R_614) (x_110002 R_614) (x_112593 R_614) (x_112594 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (x_109986 x_112553 x_112554) q_328 y_3068) (step_42 (x_109986 x_112593 x_112594) r_616 y_3068)) (step_42 (x_109987 (x_109986 x_112593 x_112594) (x_109986 x_112553 x_112554)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112553 R_614) (x_112554 R_614) (x_110002 R_614) (x_112595 R_614) (x_112596 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (x_109986 x_112553 x_112554) q_328 y_3068) (step_42 (x_109987 x_112595 x_112596) r_616 y_3068)) (step_42 (x_109987 (x_109987 x_112595 x_112596) (x_109986 x_112553 x_112554)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112553 R_614) (x_112554 R_614) (x_110002 R_614) (x_112597 R_614) (x_112598 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (x_109986 x_112553 x_112554) q_328 y_3068) (step_42 (x_109988 x_112597 x_112598) r_616 y_3068)) (step_42 (x_109987 (x_109988 x_112597 x_112598) (x_109986 x_112553 x_112554)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112555 R_614) (x_112556 R_614) (x_110002 R_614) (x_112599 T_31) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (x_109987 x_112555 x_112556) q_328 y_3068) (step_42 (Atom_42 x_112599) r_616 y_3068)) (step_42 (x_109987 (Atom_42 x_112599) (x_109987 x_112555 x_112556)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112555 R_614) (x_112556 R_614) (x_110002 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (x_109987 x_112555 x_112556) q_328 y_3068) (step_42 Eps_84 r_616 y_3068)) (step_42 (x_109987 Eps_84 (x_109987 x_112555 x_112556)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112555 R_614) (x_112556 R_614) (x_110002 R_614) (x_112600 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (x_109987 x_112555 x_112556) q_328 y_3068) (step_42 (Star_42 x_112600) r_616 y_3068)) (step_42 (x_109987 (Star_42 x_112600) (x_109987 x_112555 x_112556)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112555 R_614) (x_112556 R_614) (x_110002 R_614) (x_112601 R_614) (x_112602 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (x_109987 x_112555 x_112556) q_328 y_3068) (step_42 (x_109986 x_112601 x_112602) r_616 y_3068)) (step_42 (x_109987 (x_109986 x_112601 x_112602) (x_109987 x_112555 x_112556)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112555 R_614) (x_112556 R_614) (x_110002 R_614) (x_112603 R_614) (x_112604 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (x_109987 x_112555 x_112556) q_328 y_3068) (step_42 (x_109987 x_112603 x_112604) r_616 y_3068)) (step_42 (x_109987 (x_109987 x_112603 x_112604) (x_109987 x_112555 x_112556)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112555 R_614) (x_112556 R_614) (x_110002 R_614) (x_112605 R_614) (x_112606 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (x_109987 x_112555 x_112556) q_328 y_3068) (step_42 (x_109988 x_112605 x_112606) r_616 y_3068)) (step_42 (x_109987 (x_109988 x_112605 x_112606) (x_109987 x_112555 x_112556)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112557 R_614) (x_112558 R_614) (x_110002 R_614) (x_112607 T_31) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (x_109988 x_112557 x_112558) q_328 y_3068) (step_42 (Atom_42 x_112607) r_616 y_3068)) (step_42 (x_109987 (Atom_42 x_112607) (x_109988 x_112557 x_112558)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112557 R_614) (x_112558 R_614) (x_110002 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (x_109988 x_112557 x_112558) q_328 y_3068) (step_42 Eps_84 r_616 y_3068)) (step_42 (x_109987 Eps_84 (x_109988 x_112557 x_112558)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112557 R_614) (x_112558 R_614) (x_110002 R_614) (x_112608 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (x_109988 x_112557 x_112558) q_328 y_3068) (step_42 (Star_42 x_112608) r_616 y_3068)) (step_42 (x_109987 (Star_42 x_112608) (x_109988 x_112557 x_112558)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112557 R_614) (x_112558 R_614) (x_110002 R_614) (x_112609 R_614) (x_112610 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (x_109988 x_112557 x_112558) q_328 y_3068) (step_42 (x_109986 x_112609 x_112610) r_616 y_3068)) (step_42 (x_109987 (x_109986 x_112609 x_112610) (x_109988 x_112557 x_112558)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112557 R_614) (x_112558 R_614) (x_110002 R_614) (x_112611 R_614) (x_112612 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (x_109988 x_112557 x_112558) q_328 y_3068) (step_42 (x_109987 x_112611 x_112612) r_616 y_3068)) (step_42 (x_109987 (x_109987 x_112611 x_112612) (x_109988 x_112557 x_112558)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_110003 R_614) (x_112557 R_614) (x_112558 R_614) (x_110002 R_614) (x_112613 R_614) (x_112614 R_614) (r_616 R_614) (q_328 R_614) (y_3068 T_31))
	(=> (and (step_42 (x_109988 x_112557 x_112558) q_328 y_3068) (step_42 (x_109988 x_112613 x_112614) r_616 y_3068)) (step_42 (x_109987 (x_109988 x_112613 x_112614) (x_109988 x_112557 x_112558)) (x_109987 r_616 q_328) y_3068))))
(assert (forall ((x_114368 R_614) (x_114369 R_614) (x_114370 R_614) (p_565 R_614) (q_329 R_614) (y_3068 T_31))
	(=> (and (step_42 x_114369 p_565 y_3068) (step_42 x_114370 q_329 y_3068) (x_109995 x_114368 x_114369 x_114370)) (step_42 x_114368 (x_109986 p_565 q_329) y_3068))))
(assert (forall ((b_121 T_31))
	(step_42 Eps_84 (Atom_42 b_121) b_121)))
(assert (forall ((b_121 T_31) (y_3068 T_31))
	(=> (diseqT_28 b_121 y_3068) (step_42 Nil_428 (Atom_42 b_121) y_3068))))
(assert (forall ((x_110004 R_614) (y_3068 T_31))
	(step_42 Nil_428 Eps_84 y_3068)))
(assert (forall ((x_110004 R_614) (y_3068 T_31))
	(step_42 Nil_428 Nil_428 y_3068)))
(declare-fun rec_28 (Bool_426 R_614 list_375) Bool)
(assert (forall ((x_114376 Bool_426) (x_114377 R_614) (z_2642 T_31) (xs_866 list_375) (x_110005 R_614))
	(=> (and (step_42 x_114377 x_110005 z_2642) (rec_28 x_114376 x_114377 xs_866)) (rec_28 x_114376 x_110005 (cons_369 z_2642 xs_866)))))
(assert (forall ((x_114379 Bool_426) (x_110005 R_614))
	(=> (eps_85 x_114379 x_110005) (rec_28 x_114379 x_110005 nil_427))))
(assert (forall ((x_114381 Bool_426) (x_114382 Bool_426) (p_566 R_614) (q_330 R_614) (s_606 list_375))
	(=> (and true (diseqBool_211 x_114381 x_114382) (rec_28 x_114381 (Star_42 (x_109986 p_566 q_330)) s_606) (rec_28 x_114382 (x_109986 (Star_42 p_566) (Star_42 q_330)) s_606)) false)))
(check-sat)
