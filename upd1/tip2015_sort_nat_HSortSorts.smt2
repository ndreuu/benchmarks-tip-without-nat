
(set-logic HORN)
(define-fun zero_79 () Int 0)
(define-fun succ_77 ((x Int)) Int (+ x 1))
(declare-datatypes ((Bool_207 0)) (((false_207) (true_207))))
(declare-fun diseqBool_93 (Bool_207 Bool_207) Bool)
(declare-fun isfalse_93 (Bool_207) Bool)
(declare-fun istrue_93 (Bool_207) Bool)
(assert (isfalse_93 false_207))
(assert (istrue_93 true_207))
(assert (diseqBool_93 false_207 true_207))
(assert (diseqBool_93 true_207 false_207))
(declare-fun and_207 (Bool_207 Bool_207 Bool_207) Bool)
(declare-fun or_211 (Bool_207 Bool_207 Bool_207) Bool)
(declare-fun hence_207 (Bool_207 Bool_207 Bool_207) Bool)
(declare-fun not_210 (Bool_207 Bool_207) Bool)
(assert (and_207 false_207 false_207 false_207))
(assert (and_207 false_207 true_207 false_207))
(assert (and_207 false_207 false_207 true_207))
(assert (and_207 true_207 true_207 true_207))
(assert (or_211 false_207 false_207 false_207))
(assert (or_211 true_207 true_207 false_207))
(assert (or_211 true_207 false_207 true_207))
(assert (or_211 true_207 true_207 true_207))
(assert (hence_207 true_207 false_207 false_207))
(assert (hence_207 false_207 true_207 false_207))
(assert (hence_207 true_207 false_207 true_207))
(assert (hence_207 true_207 true_207 true_207))
(assert (not_210 true_207 false_207))
(assert (not_210 false_207 true_207))
(declare-fun diseqInt (Int Int) Bool)
(declare-fun p_221 (Int Int) Bool)
(declare-fun iszero_77 (Int) Bool)
(declare-fun issucc_77 (Int) Bool)
(assert (forall ((x_33815 Int))
	(p_221 x_33815 (succ_77 x_33815))))
(assert (iszero_77 zero_79))
(assert (forall ((x_33817 Int))
	(issucc_77 (succ_77 x_33817))))
(assert (forall ((x_33818 Int))
	(diseqInt zero_79 (succ_77 x_33818))))
(assert (forall ((x_33819 Int))
	(diseqInt (succ_77 x_33819) zero_79)))
(assert (forall ((x_33820 Int) (x_33821 Int))
	(=> (diseqInt x_33820 x_33821) (diseqInt (succ_77 x_33820) (succ_77 x_33821)))))
(declare-datatypes ((list_143 0)) (((nil_160) (cons_143 (head_286 Int) (tail_286 list_143)))))
(declare-fun diseqlist_143 (list_143 list_143) Bool)
(declare-fun head_288 (Int list_143) Bool)
(declare-fun tail_288 (list_143 list_143) Bool)
(declare-fun isnil_160 (list_143) Bool)
(declare-fun iscons_143 (list_143) Bool)
(assert (forall ((x_33823 Int) (x_33824 list_143))
	(head_288 x_33823 (cons_143 x_33823 x_33824))))
(assert (forall ((x_33823 Int) (x_33824 list_143))
	(tail_288 x_33824 (cons_143 x_33823 x_33824))))
(assert (isnil_160 nil_160))
(assert (forall ((x_33826 Int) (x_33827 list_143))
	(iscons_143 (cons_143 x_33826 x_33827))))
(assert (forall ((x_33828 Int) (x_33829 list_143))
	(diseqlist_143 nil_160 (cons_143 x_33828 x_33829))))
(assert (forall ((x_33830 Int) (x_33831 list_143))
	(diseqlist_143 (cons_143 x_33830 x_33831) nil_160)))
(assert (forall ((x_33832 Int) (x_33833 list_143) (x_33834 Int) (x_33835 list_143))
	(=> (diseqInt x_33832 x_33834) (diseqlist_143 (cons_143 x_33832 x_33833) (cons_143 x_33834 x_33835)))))
(assert (forall ((x_33832 Int) (x_33833 list_143) (x_33834 Int) (x_33835 list_143))
	(=> (diseqlist_143 x_33833 x_33835) (diseqlist_143 (cons_143 x_33832 x_33833) (cons_143 x_33834 x_33835)))))
(declare-datatypes ((Heap_6 0)) (((Node_9 (projNode_54 Heap_6) (projNode_55 Int) (projNode_56 Heap_6)) (Nil_161))))
(declare-fun diseqHeap_6 (Heap_6 Heap_6) Bool)
(declare-fun projNode_57 (Heap_6 Heap_6) Bool)
(declare-fun projNode_58 (Int Heap_6) Bool)
(declare-fun projNode_59 (Heap_6 Heap_6) Bool)
(declare-fun isNode_9 (Heap_6) Bool)
(declare-fun isNil_161 (Heap_6) Bool)
(assert (forall ((x_33836 Heap_6) (x_33837 Int) (x_33838 Heap_6))
	(projNode_57 x_33836 (Node_9 x_33836 x_33837 x_33838))))
(assert (forall ((x_33836 Heap_6) (x_33837 Int) (x_33838 Heap_6))
	(projNode_58 x_33837 (Node_9 x_33836 x_33837 x_33838))))
(assert (forall ((x_33836 Heap_6) (x_33837 Int) (x_33838 Heap_6))
	(projNode_59 x_33838 (Node_9 x_33836 x_33837 x_33838))))
(assert (forall ((x_33841 Heap_6) (x_33842 Int) (x_33843 Heap_6))
	(isNode_9 (Node_9 x_33841 x_33842 x_33843))))
(assert (isNil_161 Nil_161))
(assert (forall ((x_33844 Heap_6) (x_33845 Int) (x_33846 Heap_6))
	(diseqHeap_6 (Node_9 x_33844 x_33845 x_33846) Nil_161)))
(assert (forall ((x_33847 Heap_6) (x_33848 Int) (x_33849 Heap_6))
	(diseqHeap_6 Nil_161 (Node_9 x_33847 x_33848 x_33849))))
(assert (forall ((x_33850 Heap_6) (x_33851 Int) (x_33852 Heap_6) (x_33853 Heap_6) (x_33854 Int) (x_33855 Heap_6))
	(=> (diseqHeap_6 x_33850 x_33853) (diseqHeap_6 (Node_9 x_33850 x_33851 x_33852) (Node_9 x_33853 x_33854 x_33855)))))
(assert (forall ((x_33850 Heap_6) (x_33851 Int) (x_33852 Heap_6) (x_33853 Heap_6) (x_33854 Int) (x_33855 Heap_6))
	(=> (diseqInt x_33851 x_33854) (diseqHeap_6 (Node_9 x_33850 x_33851 x_33852) (Node_9 x_33853 x_33854 x_33855)))))
(assert (forall ((x_33850 Heap_6) (x_33851 Int) (x_33852 Heap_6) (x_33853 Heap_6) (x_33854 Int) (x_33855 Heap_6))
	(=> (diseqHeap_6 x_33852 x_33855) (diseqHeap_6 (Node_9 x_33850 x_33851 x_33852) (Node_9 x_33853 x_33854 x_33855)))))
(declare-datatypes ((list_144 0)) (((nil_162) (cons_144 (head_287 Heap_6) (tail_287 list_144)))))
(declare-fun diseqlist_144 (list_144 list_144) Bool)
(declare-fun head_289 (Heap_6 list_144) Bool)
(declare-fun tail_289 (list_144 list_144) Bool)
(declare-fun isnil_162 (list_144) Bool)
(declare-fun iscons_144 (list_144) Bool)
(assert (forall ((x_33857 Heap_6) (x_33858 list_144))
	(head_289 x_33857 (cons_144 x_33857 x_33858))))
(assert (forall ((x_33857 Heap_6) (x_33858 list_144))
	(tail_289 x_33858 (cons_144 x_33857 x_33858))))
(assert (isnil_162 nil_162))
(assert (forall ((x_33860 Heap_6) (x_33861 list_144))
	(iscons_144 (cons_144 x_33860 x_33861))))
(assert (forall ((x_33862 Heap_6) (x_33863 list_144))
	(diseqlist_144 nil_162 (cons_144 x_33862 x_33863))))
(assert (forall ((x_33864 Heap_6) (x_33865 list_144))
	(diseqlist_144 (cons_144 x_33864 x_33865) nil_162)))
(assert (forall ((x_33866 Heap_6) (x_33867 list_144) (x_33868 Heap_6) (x_33869 list_144))
	(=> (diseqHeap_6 x_33866 x_33868) (diseqlist_144 (cons_144 x_33866 x_33867) (cons_144 x_33868 x_33869)))))
(assert (forall ((x_33866 Heap_6) (x_33867 list_144) (x_33868 Heap_6) (x_33869 list_144))
	(=> (diseqlist_144 x_33867 x_33869) (diseqlist_144 (cons_144 x_33866 x_33867) (cons_144 x_33868 x_33869)))))
(declare-fun toHeap_8 (list_144 list_143) Bool)
(assert (forall ((x_33769 list_144) (y_1291 Int) (z_1199 list_143))
	(=> (toHeap_8 x_33769 z_1199) (toHeap_8 (cons_144 (Node_9 Nil_161 y_1291 Nil_161) x_33769) (cons_143 y_1291 z_1199)))))
(assert (toHeap_8 nil_162 nil_160))
(declare-fun leq_30 (Bool_207 Int Int) Bool)
(assert (forall ((x_33771 Bool_207) (x_33754 Int) (z_1200 Int))
	(=> (leq_30 x_33771 z_1200 x_33754) (leq_30 x_33771 (succ_77 z_1200) (succ_77 x_33754)))))
(assert (forall ((z_1200 Int))
	(leq_30 false_207 (succ_77 z_1200) zero_79)))
(assert (forall ((y_1292 Int))
	(leq_30 true_207 zero_79 y_1292)))
(declare-fun ordered_10 (Bool_207 list_143) Bool)
(assert (forall ((x_33775 Bool_207) (x_33776 Bool_207) (x_33777 Bool_207) (y_1294 Int) (xs_385 list_143) (y_1293 Int))
	(=> (and (leq_30 x_33776 y_1293 y_1294) (ordered_10 x_33777 (cons_143 y_1294 xs_385)) (and_207 x_33775 x_33776 x_33777)) (ordered_10 x_33775 (cons_143 y_1293 (cons_143 y_1294 xs_385))))))
(assert (forall ((y_1293 Int))
	(ordered_10 true_207 (cons_143 y_1293 nil_160))))
(assert (ordered_10 true_207 nil_160))
(declare-fun hmerge_6 (Heap_6 Heap_6 Heap_6) Bool)
(assert (forall ((x_33780 Heap_6))
	(hmerge_6 x_33780 Nil_161 x_33780)))
(assert (forall ((z_1202 Heap_6) (x_33757 Int) (x_33758 Heap_6))
	(hmerge_6 (Node_9 z_1202 x_33757 x_33758) (Node_9 z_1202 x_33757 x_33758) Nil_161)))
(assert (forall ((x_33784 Heap_6) (x_33759 Heap_6) (x_33760 Int) (x_33761 Heap_6) (z_1202 Heap_6) (x_33757 Int) (x_33758 Heap_6))
	(=> (and (hmerge_6 x_33784 x_33758 (Node_9 x_33759 x_33760 x_33761)) (leq_30 true_207 x_33757 x_33760)) (hmerge_6 (Node_9 x_33784 x_33757 z_1202) (Node_9 z_1202 x_33757 x_33758) (Node_9 x_33759 x_33760 x_33761)))))
(assert (forall ((x_33787 Heap_6) (x_33759 Heap_6) (x_33760 Int) (x_33761 Heap_6) (z_1202 Heap_6) (x_33757 Int) (x_33758 Heap_6))
	(=> (and (hmerge_6 x_33787 (Node_9 z_1202 x_33757 x_33758) x_33761) (leq_30 false_207 x_33757 x_33760)) (hmerge_6 (Node_9 x_33787 x_33760 x_33759) (Node_9 z_1202 x_33757 x_33758) (Node_9 x_33759 x_33760 x_33761)))))
(declare-fun hpairwise_2 (list_144 list_144) Bool)
(assert (forall ((x_33789 Heap_6) (x_33790 list_144) (r_251 Heap_6) (qs_2 list_144) (q_76 Heap_6))
	(=> (and (hmerge_6 x_33789 q_76 r_251) (hpairwise_2 x_33790 qs_2)) (hpairwise_2 (cons_144 x_33789 x_33790) (cons_144 q_76 (cons_144 r_251 qs_2))))))
(assert (forall ((q_76 Heap_6))
	(hpairwise_2 (cons_144 q_76 nil_162) (cons_144 q_76 nil_162))))
(assert (hpairwise_2 nil_162 nil_162))
(declare-fun hmerging_2 (Heap_6 list_144) Bool)
(assert (forall ((x_33793 Heap_6) (x_33794 list_144) (z_1203 Heap_6) (x_33764 list_144) (q_77 Heap_6))
	(=> (and (hpairwise_2 x_33794 (cons_144 q_77 (cons_144 z_1203 x_33764))) (hmerging_2 x_33793 x_33794)) (hmerging_2 x_33793 (cons_144 q_77 (cons_144 z_1203 x_33764))))))
(assert (forall ((q_77 Heap_6))
	(hmerging_2 q_77 (cons_144 q_77 nil_162))))
(assert (hmerging_2 Nil_161 nil_162))
(declare-fun toHeap_9 (Heap_6 list_143) Bool)
(assert (forall ((x_33798 Heap_6) (x_33799 list_144) (x_33765 list_143))
	(=> (and (toHeap_8 x_33799 x_33765) (hmerging_2 x_33798 x_33799)) (toHeap_9 x_33798 x_33765))))
(declare-fun toList_6 (list_143 Heap_6) Bool)
(assert (toList_6 nil_160 Nil_161))
(assert (forall ((x_33803 Heap_6) (x_33804 list_143) (q_78 Heap_6) (y_1298 Int) (r_252 Heap_6))
	(=> (and (hmerge_6 x_33803 q_78 r_252) (toList_6 x_33804 x_33803)) (toList_6 (cons_143 y_1298 x_33804) (Node_9 q_78 y_1298 r_252)))))
(declare-fun hsort_6 (list_143 list_143) Bool)
(assert (forall ((x_33805 list_143) (x_33806 Heap_6) (x_33767 list_143))
	(=> (and (toHeap_9 x_33806 x_33767) (toList_6 x_33805 x_33806)) (hsort_6 x_33805 x_33767))))
(assert (forall ((x_33808 list_143) (xs_386 list_143))
	(=> (and true (hsort_6 x_33808 xs_386) (ordered_10 false_207 x_33808)) false)))
(check-sat)
