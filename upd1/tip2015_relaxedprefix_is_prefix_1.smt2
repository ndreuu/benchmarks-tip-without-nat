
(set-logic HORN)
(declare-datatypes ((Bool_223 0)) (((false_223) (true_223))))
(declare-fun diseqBool_100 (Bool_223 Bool_223) Bool)
(declare-fun isfalse_100 (Bool_223) Bool)
(declare-fun istrue_100 (Bool_223) Bool)
(assert (isfalse_100 false_223))
(assert (istrue_100 true_223))
(assert (diseqBool_100 false_223 true_223))
(assert (diseqBool_100 true_223 false_223))
(declare-fun and_223 (Bool_223 Bool_223 Bool_223) Bool)
(declare-fun or_227 (Bool_223 Bool_223 Bool_223) Bool)
(declare-fun hence_223 (Bool_223 Bool_223 Bool_223) Bool)
(declare-fun not_226 (Bool_223 Bool_223) Bool)
(assert (and_223 false_223 false_223 false_223))
(assert (and_223 false_223 true_223 false_223))
(assert (and_223 false_223 false_223 true_223))
(assert (and_223 true_223 true_223 true_223))
(assert (or_227 false_223 false_223 false_223))
(assert (or_227 true_223 true_223 false_223))
(assert (or_227 true_223 false_223 true_223))
(assert (or_227 true_223 true_223 true_223))
(assert (hence_223 true_223 false_223 false_223))
(assert (hence_223 false_223 true_223 false_223))
(assert (hence_223 true_223 false_223 true_223))
(assert (hence_223 true_223 true_223 true_223))
(assert (not_226 true_223 false_223))
(assert (not_226 false_223 true_223))
(declare-datatypes ((It_2 0)) (((A_37) (B_26) (C_14))))
(declare-fun diseqIt_2 (It_2 It_2) Bool)
(declare-fun isA_4 (It_2) Bool)
(declare-fun isB_4 (It_2) Bool)
(declare-fun isC_4 (It_2) Bool)
(assert (isA_4 A_37))
(assert (isB_4 B_26))
(assert (isC_4 C_14))
(assert (diseqIt_2 A_37 B_26))
(assert (diseqIt_2 A_37 C_14))
(assert (diseqIt_2 B_26 A_37))
(assert (diseqIt_2 C_14 A_37))
(assert (diseqIt_2 B_26 C_14))
(assert (diseqIt_2 C_14 B_26))
(declare-datatypes ((list_152 0)) (((nil_171) (cons_152 (head_304 It_2) (tail_304 list_152)))))
(declare-fun diseqlist_152 (list_152 list_152) Bool)
(declare-fun head_305 (It_2 list_152) Bool)
(declare-fun tail_305 (list_152 list_152) Bool)
(declare-fun isnil_171 (list_152) Bool)
(declare-fun iscons_152 (list_152) Bool)
(assert (forall ((x_35276 It_2) (x_35277 list_152))
	(head_305 x_35276 (cons_152 x_35276 x_35277))))
(assert (forall ((x_35276 It_2) (x_35277 list_152))
	(tail_305 x_35277 (cons_152 x_35276 x_35277))))
(assert (isnil_171 nil_171))
(assert (forall ((x_35279 It_2) (x_35280 list_152))
	(iscons_152 (cons_152 x_35279 x_35280))))
(assert (forall ((x_35281 It_2) (x_35282 list_152))
	(diseqlist_152 nil_171 (cons_152 x_35281 x_35282))))
(assert (forall ((x_35283 It_2) (x_35284 list_152))
	(diseqlist_152 (cons_152 x_35283 x_35284) nil_171)))
(assert (forall ((x_35285 It_2) (x_35286 list_152) (x_35287 It_2) (x_35288 list_152))
	(=> (diseqIt_2 x_35285 x_35287) (diseqlist_152 (cons_152 x_35285 x_35286) (cons_152 x_35287 x_35288)))))
(assert (forall ((x_35285 It_2) (x_35286 list_152) (x_35287 It_2) (x_35288 list_152))
	(=> (diseqlist_152 x_35286 x_35288) (diseqlist_152 (cons_152 x_35285 x_35286) (cons_152 x_35287 x_35288)))))
(declare-fun isPrefix_2 (Bool_223 list_152 list_152) Bool)
(assert (forall ((x_35252 Bool_223) (x_35242 It_2) (x_35243 list_152) (x_35241 list_152))
	(=> (isPrefix_2 x_35252 x_35241 x_35243) (isPrefix_2 x_35252 (cons_152 x_35242 x_35241) (cons_152 x_35242 x_35243)))))
(assert (forall ((x_35242 It_2) (x_35243 list_152) (z_1323 It_2) (x_35241 list_152))
	(=> (diseqIt_2 z_1323 x_35242) (isPrefix_2 false_223 (cons_152 z_1323 x_35241) (cons_152 x_35242 x_35243)))))
(assert (forall ((z_1323 It_2) (x_35241 list_152))
	(isPrefix_2 false_223 (cons_152 z_1323 x_35241) nil_171)))
(assert (forall ((y_1432 list_152))
	(isPrefix_2 true_223 nil_171 y_1432)))
(declare-fun isRelaxedPrefix_2 (Bool_223 list_152 list_152) Bool)
(assert (forall ((x_35257 Bool_223) (x_35248 It_2) (x_35249 list_152) (x_35246 It_2) (x_35247 list_152))
	(=> (isRelaxedPrefix_2 x_35257 (cons_152 x_35246 x_35247) x_35249) (isRelaxedPrefix_2 x_35257 (cons_152 x_35248 (cons_152 x_35246 x_35247)) (cons_152 x_35248 x_35249)))))
(assert (forall ((x_35259 Bool_223) (x_35248 It_2) (x_35249 list_152) (x_35246 It_2) (x_35247 list_152) (z_1324 It_2))
	(=> (and (diseqIt_2 z_1324 x_35248) (isPrefix_2 x_35259 (cons_152 x_35246 x_35247) (cons_152 x_35248 x_35249))) (isRelaxedPrefix_2 x_35259 (cons_152 z_1324 (cons_152 x_35246 x_35247)) (cons_152 x_35248 x_35249)))))
(assert (forall ((x_35246 It_2) (x_35247 list_152) (z_1324 It_2))
	(isRelaxedPrefix_2 false_223 (cons_152 z_1324 (cons_152 x_35246 x_35247)) nil_171)))
(assert (forall ((z_1324 It_2) (y_1433 list_152))
	(isRelaxedPrefix_2 true_223 (cons_152 z_1324 nil_171) y_1433)))
(assert (forall ((y_1433 list_152))
	(isRelaxedPrefix_2 true_223 nil_171 y_1433)))
(declare-fun x_35250 (list_152 list_152 list_152) Bool)
(assert (forall ((x_35265 list_152) (z_1325 It_2) (xs_425 list_152) (y_1434 list_152))
	(=> (x_35250 x_35265 xs_425 y_1434) (x_35250 (cons_152 z_1325 x_35265) (cons_152 z_1325 xs_425) y_1434))))
(assert (forall ((x_35266 list_152))
	(x_35250 x_35266 nil_171 x_35266)))
(assert (forall ((x_35267 list_152) (xs_426 list_152) (ys_136 list_152))
	(=> (and true (x_35250 x_35267 xs_426 ys_136) (isRelaxedPrefix_2 false_223 xs_426 x_35267)) false)))
(check-sat)
