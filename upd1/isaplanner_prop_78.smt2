
(set-logic HORN)
(define-fun Z_240 () Int 0)
(define-fun S_85 ((x Int)) Int (+ x 1))
(declare-datatypes ((Bool_44 0)) (((false_44) (true_44))))
(declare-fun diseqBool_17 (Bool_44 Bool_44) Bool)
(declare-fun isfalse_17 (Bool_44) Bool)
(declare-fun istrue_17 (Bool_44) Bool)
(assert (isfalse_17 false_44))
(assert (istrue_17 true_44))
(assert (diseqBool_17 false_44 true_44))
(assert (diseqBool_17 true_44 false_44))
(declare-fun and_44 (Bool_44 Bool_44 Bool_44) Bool)
(declare-fun or_44 (Bool_44 Bool_44 Bool_44) Bool)
(declare-fun hence_44 (Bool_44 Bool_44 Bool_44) Bool)
(declare-fun not_44 (Bool_44 Bool_44) Bool)
(assert (and_44 false_44 false_44 false_44))
(assert (and_44 false_44 true_44 false_44))
(assert (and_44 false_44 false_44 true_44))
(assert (and_44 true_44 true_44 true_44))
(assert (or_44 false_44 false_44 false_44))
(assert (or_44 true_44 true_44 false_44))
(assert (or_44 true_44 false_44 true_44))
(assert (or_44 true_44 true_44 true_44))
(assert (hence_44 true_44 false_44 false_44))
(assert (hence_44 false_44 true_44 false_44))
(assert (hence_44 true_44 false_44 true_44))
(assert (hence_44 true_44 true_44 true_44))
(assert (not_44 true_44 false_44))
(assert (not_44 false_44 true_44))
(declare-fun diseqInt (Int Int) Bool)
(declare-fun projS_83 (Int Int) Bool)
(declare-fun isZ_85 (Int) Bool)
(declare-fun isS_85 (Int) Bool)
(assert (forall ((x_2377 Int))
	(projS_83 x_2377 (S_85 x_2377))))
(assert (isZ_85 Z_240))
(assert (forall ((x_2379 Int))
	(isS_85 (S_85 x_2379))))
(assert (forall ((x_2380 Int))
	(diseqInt Z_240 (S_85 x_2380))))
(assert (forall ((x_2381 Int))
	(diseqInt (S_85 x_2381) Z_240)))
(assert (forall ((x_2382 Int) (x_2383 Int))
	(=> (diseqInt x_2382 x_2383) (diseqInt (S_85 x_2382) (S_85 x_2383)))))
(declare-datatypes ((list_40 0)) (((nil_40) (cons_40 (head_80 Int) (tail_80 list_40)))))
(declare-fun diseqlist_40 (list_40 list_40) Bool)
(declare-fun head_81 (Int list_40) Bool)
(declare-fun tail_81 (list_40 list_40) Bool)
(declare-fun isnil_40 (list_40) Bool)
(declare-fun iscons_40 (list_40) Bool)
(assert (forall ((x_2385 Int) (x_2386 list_40))
	(head_81 x_2385 (cons_40 x_2385 x_2386))))
(assert (forall ((x_2385 Int) (x_2386 list_40))
	(tail_81 x_2386 (cons_40 x_2385 x_2386))))
(assert (isnil_40 nil_40))
(assert (forall ((x_2388 Int) (x_2389 list_40))
	(iscons_40 (cons_40 x_2388 x_2389))))
(assert (forall ((x_2390 Int) (x_2391 list_40))
	(diseqlist_40 nil_40 (cons_40 x_2390 x_2391))))
(assert (forall ((x_2392 Int) (x_2393 list_40))
	(diseqlist_40 (cons_40 x_2392 x_2393) nil_40)))
(assert (forall ((x_2394 Int) (x_2395 list_40) (x_2396 Int) (x_2397 list_40))
	(=> (diseqInt x_2394 x_2396) (diseqlist_40 (cons_40 x_2394 x_2395) (cons_40 x_2396 x_2397)))))
(assert (forall ((x_2394 Int) (x_2395 list_40) (x_2396 Int) (x_2397 list_40))
	(=> (diseqlist_40 x_2395 x_2397) (diseqlist_40 (cons_40 x_2394 x_2395) (cons_40 x_2396 x_2397)))))
(declare-fun x_2341 (Bool_44 Int Int) Bool)
(assert (forall ((x_2349 Bool_44) (x_2343 Int) (z_241 Int))
	(=> (x_2341 x_2349 z_241 x_2343) (x_2341 x_2349 (S_85 z_241) (S_85 x_2343)))))
(assert (forall ((z_241 Int))
	(x_2341 false_44 (S_85 z_241) Z_240)))
(assert (forall ((y_187 Int))
	(x_2341 true_44 Z_240 y_187)))
(declare-fun insort_1 (list_40 Int list_40) Bool)
(assert (forall ((z_242 Int) (xs_69 list_40) (x_2344 Int))
	(=> (x_2341 true_44 x_2344 z_242) (insort_1 (cons_40 x_2344 (cons_40 z_242 xs_69)) x_2344 (cons_40 z_242 xs_69)))))
(assert (forall ((x_2357 list_40) (z_242 Int) (xs_69 list_40) (x_2344 Int))
	(=> (and (insort_1 x_2357 x_2344 xs_69) (x_2341 false_44 x_2344 z_242)) (insort_1 (cons_40 z_242 x_2357) x_2344 (cons_40 z_242 xs_69)))))
(assert (forall ((x_2344 Int))
	(insort_1 (cons_40 x_2344 nil_40) x_2344 nil_40)))
(declare-fun sort_0 (list_40 list_40) Bool)
(assert (forall ((x_2359 list_40) (x_2360 list_40) (y_189 Int) (xs_70 list_40))
	(=> (and (sort_0 x_2360 xs_70) (insort_1 x_2359 y_189 x_2360)) (sort_0 x_2359 (cons_40 y_189 xs_70)))))
(assert (sort_0 nil_40 nil_40))
(declare-fun x_2346 (Bool_44 Bool_44 Bool_44) Bool)
(assert (forall ((x_2363 Bool_44))
	(x_2346 x_2363 true_44 x_2363)))
(assert (forall ((y_190 Bool_44))
	(x_2346 false_44 false_44 y_190)))
(declare-fun sorted_1 (Bool_44 list_40) Bool)
(assert (forall ((x_2365 Bool_44) (x_2366 Bool_44) (x_2367 Bool_44) (y_192 Int) (ys_20 list_40) (y_191 Int))
	(=> (and (x_2341 x_2366 y_191 y_192) (sorted_1 x_2367 (cons_40 y_192 ys_20)) (x_2346 x_2365 x_2366 x_2367)) (sorted_1 x_2365 (cons_40 y_191 (cons_40 y_192 ys_20))))))
(assert (forall ((y_191 Int))
	(sorted_1 true_44 (cons_40 y_191 nil_40))))
(assert (sorted_1 true_44 nil_40))
(assert (forall ((x_2371 list_40) (xs_71 list_40))
	(=> (and true (sort_0 x_2371 xs_71) (sorted_1 false_44 x_2371)) false)))
(check-sat)
