
(set-logic HORN)
(define-fun Z_59 () Int 0)
(define-fun S_21 ((x Int)) Int (+ x 1))
(declare-datatypes ((Bool_11 0)) (((false_11) (true_11))))
(declare-fun diseqBool_4 (Bool_11 Bool_11) Bool)
(declare-fun isfalse_4 (Bool_11) Bool)
(declare-fun istrue_4 (Bool_11) Bool)
(assert (isfalse_4 false_11))
(assert (istrue_4 true_11))
(assert (diseqBool_4 false_11 true_11))
(assert (diseqBool_4 true_11 false_11))
(declare-fun and_11 (Bool_11 Bool_11 Bool_11) Bool)
(declare-fun or_11 (Bool_11 Bool_11 Bool_11) Bool)
(declare-fun hence_11 (Bool_11 Bool_11 Bool_11) Bool)
(declare-fun not_11 (Bool_11 Bool_11) Bool)
(assert (and_11 false_11 false_11 false_11))
(assert (and_11 false_11 true_11 false_11))
(assert (and_11 false_11 false_11 true_11))
(assert (and_11 true_11 true_11 true_11))
(assert (or_11 false_11 false_11 false_11))
(assert (or_11 true_11 true_11 false_11))
(assert (or_11 true_11 false_11 true_11))
(assert (or_11 true_11 true_11 true_11))
(assert (hence_11 true_11 false_11 false_11))
(assert (hence_11 false_11 true_11 false_11))
(assert (hence_11 true_11 false_11 true_11))
(assert (hence_11 true_11 true_11 true_11))
(assert (not_11 true_11 false_11))
(assert (not_11 false_11 true_11))
(declare-fun diseqInt (Int Int) Bool)
(declare-fun projS_21 (Int Int) Bool)
(declare-fun isZ_21 (Int) Bool)
(declare-fun isS_21 (Int) Bool)
(assert (forall ((x_659 Int))
	(projS_21 x_659 (S_21 x_659))))
(assert (isZ_21 Z_59))
(assert (forall ((x_661 Int))
	(isS_21 (S_21 x_661))))
(assert (forall ((x_662 Int))
	(diseqInt Z_59 (S_21 x_662))))
(assert (forall ((x_663 Int))
	(diseqInt (S_21 x_663) Z_59)))
(assert (forall ((x_664 Int) (x_665 Int))
	(=> (diseqInt x_664 x_665) (diseqInt (S_21 x_664) (S_21 x_665)))))
(declare-datatypes ((list_12 0)) (((nil_12) (cons_12 (head_24 Int) (tail_24 list_12)))))
(declare-fun diseqlist_12 (list_12 list_12) Bool)
(declare-fun head_25 (Int list_12) Bool)
(declare-fun tail_25 (list_12 list_12) Bool)
(declare-fun isnil_12 (list_12) Bool)
(declare-fun iscons_12 (list_12) Bool)
(assert (forall ((x_667 Int) (x_668 list_12))
	(head_25 x_667 (cons_12 x_667 x_668))))
(assert (forall ((x_667 Int) (x_668 list_12))
	(tail_25 x_668 (cons_12 x_667 x_668))))
(assert (isnil_12 nil_12))
(assert (forall ((x_670 Int) (x_671 list_12))
	(iscons_12 (cons_12 x_670 x_671))))
(assert (forall ((x_672 Int) (x_673 list_12))
	(diseqlist_12 nil_12 (cons_12 x_672 x_673))))
(assert (forall ((x_674 Int) (x_675 list_12))
	(diseqlist_12 (cons_12 x_674 x_675) nil_12)))
(assert (forall ((x_676 Int) (x_677 list_12) (x_678 Int) (x_679 list_12))
	(=> (diseqInt x_676 x_678) (diseqlist_12 (cons_12 x_676 x_677) (cons_12 x_678 x_679)))))
(assert (forall ((x_676 Int) (x_677 list_12) (x_678 Int) (x_679 list_12))
	(=> (diseqlist_12 x_677 x_679) (diseqlist_12 (cons_12 x_676 x_677) (cons_12 x_678 x_679)))))
(declare-fun x_626 (Bool_11 Int Int) Bool)
(assert (forall ((x_634 Bool_11) (x_628 Int) (z_60 Int))
	(=> (x_626 x_634 z_60 x_628) (x_626 x_634 (S_21 z_60) (S_21 x_628)))))
(assert (forall ((z_60 Int))
	(x_626 false_11 (S_21 z_60) Z_59)))
(assert (forall ((y_48 Int))
	(x_626 true_11 Z_59 y_48)))
(declare-fun insort_0 (list_12 Int list_12) Bool)
(assert (forall ((z_61 Int) (xs_18 list_12) (x_629 Int))
	(=> (x_626 true_11 x_629 z_61) (insort_0 (cons_12 x_629 (cons_12 z_61 xs_18)) x_629 (cons_12 z_61 xs_18)))))
(assert (forall ((x_642 list_12) (z_61 Int) (xs_18 list_12) (x_629 Int))
	(=> (and (insort_0 x_642 x_629 xs_18) (x_626 false_11 x_629 z_61)) (insort_0 (cons_12 z_61 x_642) x_629 (cons_12 z_61 xs_18)))))
(assert (forall ((x_629 Int))
	(insort_0 (cons_12 x_629 nil_12) x_629 nil_12)))
(declare-fun x_630 (Bool_11 Bool_11 Bool_11) Bool)
(assert (forall ((x_644 Bool_11))
	(x_630 x_644 true_11 x_644)))
(assert (forall ((y_50 Bool_11))
	(x_630 false_11 false_11 y_50)))
(declare-fun sorted_0 (Bool_11 list_12) Bool)
(assert (forall ((x_646 Bool_11) (x_647 Bool_11) (x_648 Bool_11) (y_52 Int) (ys_6 list_12) (y_51 Int))
	(=> (and (x_626 x_647 y_51 y_52) (sorted_0 x_648 (cons_12 y_52 ys_6)) (x_630 x_646 x_647 x_648)) (sorted_0 x_646 (cons_12 y_51 (cons_12 y_52 ys_6))))))
(assert (forall ((y_51 Int))
	(sorted_0 true_11 (cons_12 y_51 nil_12))))
(assert (sorted_0 true_11 nil_12))
(assert (forall ((x_652 list_12) (x_633 Int) (xs_19 list_12))
	(=> (and true (sorted_0 true_11 xs_19) (insort_0 x_652 x_633 xs_19) (sorted_0 false_11 x_652)) false)))
(check-sat)
