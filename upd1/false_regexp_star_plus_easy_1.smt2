
(set-logic HORN)
(declare-datatypes ((Bool_435 0)) (((false_435) (true_435))))
(declare-fun diseqBool_218 (Bool_435 Bool_435) Bool)
(declare-fun isfalse_218 (Bool_435) Bool)
(declare-fun istrue_218 (Bool_435) Bool)
(assert (isfalse_218 false_435))
(assert (istrue_218 true_435))
(assert (diseqBool_218 false_435 true_435))
(assert (diseqBool_218 true_435 false_435))
(declare-fun and_441 (Bool_435 Bool_435 Bool_435) Bool)
(declare-fun or_454 (Bool_435 Bool_435 Bool_435) Bool)
(declare-fun hence_435 (Bool_435 Bool_435 Bool_435) Bool)
(declare-fun not_440 (Bool_435 Bool_435) Bool)
(assert (and_441 false_435 false_435 false_435))
(assert (and_441 false_435 true_435 false_435))
(assert (and_441 false_435 false_435 true_435))
(assert (and_441 true_435 true_435 true_435))
(assert (or_454 false_435 false_435 false_435))
(assert (or_454 true_435 true_435 false_435))
(assert (or_454 true_435 false_435 true_435))
(assert (or_454 true_435 true_435 true_435))
(assert (hence_435 true_435 false_435 false_435))
(assert (hence_435 false_435 true_435 false_435))
(assert (hence_435 true_435 false_435 true_435))
(assert (hence_435 true_435 true_435 true_435))
(assert (not_440 true_435 false_435))
(assert (not_440 false_435 true_435))
(declare-datatypes ((T_37 0)) (((A_119) (B_132) (C_74))))
(declare-fun diseqT_33 (T_37 T_37) Bool)
(declare-fun isA_40 (T_37) Bool)
(declare-fun isB_40 (T_37) Bool)
(declare-fun isC_41 (T_37) Bool)
(assert (isA_40 A_119))
(assert (isB_40 B_132))
(assert (isC_41 C_74))
(assert (diseqT_33 A_119 B_132))
(assert (diseqT_33 A_119 C_74))
(assert (diseqT_33 B_132 A_119))
(assert (diseqT_33 C_74 A_119))
(assert (diseqT_33 B_132 C_74))
(assert (diseqT_33 C_74 B_132))
(declare-datatypes ((list_390 0)) (((nil_447) (cons_384 (head_768 T_37) (tail_774 list_390)))))
(declare-fun diseqlist_384 (list_390 list_390) Bool)
(declare-fun head_769 (T_37 list_390) Bool)
(declare-fun tail_775 (list_390 list_390) Bool)
(declare-fun isnil_447 (list_390) Bool)
(declare-fun iscons_384 (list_390) Bool)
(assert (forall ((x_125530 T_37) (x_125531 list_390))
	(head_769 x_125530 (cons_384 x_125530 x_125531))))
(assert (forall ((x_125530 T_37) (x_125531 list_390))
	(tail_775 x_125531 (cons_384 x_125530 x_125531))))
(assert (isnil_447 nil_447))
(assert (forall ((x_125533 T_37) (x_125534 list_390))
	(iscons_384 (cons_384 x_125533 x_125534))))
(assert (forall ((x_125535 T_37) (x_125536 list_390))
	(diseqlist_384 nil_447 (cons_384 x_125535 x_125536))))
(assert (forall ((x_125537 T_37) (x_125538 list_390))
	(diseqlist_384 (cons_384 x_125537 x_125538) nil_447)))
(assert (forall ((x_125539 T_37) (x_125540 list_390) (x_125541 T_37) (x_125542 list_390))
	(=> (diseqT_33 x_125539 x_125541) (diseqlist_384 (cons_384 x_125539 x_125540) (cons_384 x_125541 x_125542)))))
(assert (forall ((x_125539 T_37) (x_125540 list_390) (x_125541 T_37) (x_125542 list_390))
	(=> (diseqlist_384 x_125540 x_125542) (diseqlist_384 (cons_384 x_125539 x_125540) (cons_384 x_125541 x_125542)))))
(declare-datatypes ((R_644 0)) (((Nil_448) (Eps_94) (Atom_47 (projAtom_94 T_37)) (x_125480 (proj_340 R_644) (proj_341 R_644)) (x_125481 (proj_342 R_644) (proj_343 R_644)) (Star_47 (projStar_94 R_644)))))
(declare-fun diseqR_47 (R_644 R_644) Bool)
(declare-fun projAtom_95 (T_37 R_644) Bool)
(declare-fun proj_344 (R_644 R_644) Bool)
(declare-fun proj_345 (R_644 R_644) Bool)
(declare-fun proj_346 (R_644 R_644) Bool)
(declare-fun proj_347 (R_644 R_644) Bool)
(declare-fun projStar_95 (R_644 R_644) Bool)
(declare-fun isNil_448 (R_644) Bool)
(declare-fun isEps_47 (R_644) Bool)
(declare-fun isAtom_47 (R_644) Bool)
(declare-fun isx_100 (R_644) Bool)
(declare-fun isx_101 (R_644) Bool)
(declare-fun isStar_47 (R_644) Bool)
(assert (forall ((x_125545 T_37))
	(projAtom_95 x_125545 (Atom_47 x_125545))))
(assert (forall ((x_125547 R_644) (x_125548 R_644))
	(proj_344 x_125547 (x_125480 x_125547 x_125548))))
(assert (forall ((x_125547 R_644) (x_125548 R_644))
	(proj_345 x_125548 (x_125480 x_125547 x_125548))))
(assert (forall ((x_125550 R_644) (x_125551 R_644))
	(proj_346 x_125550 (x_125481 x_125550 x_125551))))
(assert (forall ((x_125550 R_644) (x_125551 R_644))
	(proj_347 x_125551 (x_125481 x_125550 x_125551))))
(assert (forall ((x_125553 R_644))
	(projStar_95 x_125553 (Star_47 x_125553))))
(assert (isNil_448 Nil_448))
(assert (isEps_47 Eps_94))
(assert (forall ((x_125555 T_37))
	(isAtom_47 (Atom_47 x_125555))))
(assert (forall ((x_125556 R_644) (x_125557 R_644))
	(isx_100 (x_125480 x_125556 x_125557))))
(assert (forall ((x_125558 R_644) (x_125559 R_644))
	(isx_101 (x_125481 x_125558 x_125559))))
(assert (forall ((x_125560 R_644))
	(isStar_47 (Star_47 x_125560))))
(assert (diseqR_47 Nil_448 Eps_94))
(assert (forall ((x_125561 T_37))
	(diseqR_47 Nil_448 (Atom_47 x_125561))))
(assert (forall ((x_125562 R_644) (x_125563 R_644))
	(diseqR_47 Nil_448 (x_125480 x_125562 x_125563))))
(assert (forall ((x_125564 R_644) (x_125565 R_644))
	(diseqR_47 Nil_448 (x_125481 x_125564 x_125565))))
(assert (forall ((x_125566 R_644))
	(diseqR_47 Nil_448 (Star_47 x_125566))))
(assert (diseqR_47 Eps_94 Nil_448))
(assert (forall ((x_125567 T_37))
	(diseqR_47 (Atom_47 x_125567) Nil_448)))
(assert (forall ((x_125568 R_644) (x_125569 R_644))
	(diseqR_47 (x_125480 x_125568 x_125569) Nil_448)))
(assert (forall ((x_125570 R_644) (x_125571 R_644))
	(diseqR_47 (x_125481 x_125570 x_125571) Nil_448)))
(assert (forall ((x_125572 R_644))
	(diseqR_47 (Star_47 x_125572) Nil_448)))
(assert (forall ((x_125573 T_37))
	(diseqR_47 Eps_94 (Atom_47 x_125573))))
(assert (forall ((x_125574 R_644) (x_125575 R_644))
	(diseqR_47 Eps_94 (x_125480 x_125574 x_125575))))
(assert (forall ((x_125576 R_644) (x_125577 R_644))
	(diseqR_47 Eps_94 (x_125481 x_125576 x_125577))))
(assert (forall ((x_125578 R_644))
	(diseqR_47 Eps_94 (Star_47 x_125578))))
(assert (forall ((x_125579 T_37))
	(diseqR_47 (Atom_47 x_125579) Eps_94)))
(assert (forall ((x_125580 R_644) (x_125581 R_644))
	(diseqR_47 (x_125480 x_125580 x_125581) Eps_94)))
(assert (forall ((x_125582 R_644) (x_125583 R_644))
	(diseqR_47 (x_125481 x_125582 x_125583) Eps_94)))
(assert (forall ((x_125584 R_644))
	(diseqR_47 (Star_47 x_125584) Eps_94)))
(assert (forall ((x_125585 T_37) (x_125586 R_644) (x_125587 R_644))
	(diseqR_47 (Atom_47 x_125585) (x_125480 x_125586 x_125587))))
(assert (forall ((x_125588 T_37) (x_125589 R_644) (x_125590 R_644))
	(diseqR_47 (Atom_47 x_125588) (x_125481 x_125589 x_125590))))
(assert (forall ((x_125591 T_37) (x_125592 R_644))
	(diseqR_47 (Atom_47 x_125591) (Star_47 x_125592))))
(assert (forall ((x_125593 R_644) (x_125594 R_644) (x_125595 T_37))
	(diseqR_47 (x_125480 x_125593 x_125594) (Atom_47 x_125595))))
(assert (forall ((x_125596 R_644) (x_125597 R_644) (x_125598 T_37))
	(diseqR_47 (x_125481 x_125596 x_125597) (Atom_47 x_125598))))
(assert (forall ((x_125599 R_644) (x_125600 T_37))
	(diseqR_47 (Star_47 x_125599) (Atom_47 x_125600))))
(assert (forall ((x_125601 R_644) (x_125602 R_644) (x_125603 R_644) (x_125604 R_644))
	(diseqR_47 (x_125480 x_125601 x_125602) (x_125481 x_125603 x_125604))))
(assert (forall ((x_125605 R_644) (x_125606 R_644) (x_125607 R_644))
	(diseqR_47 (x_125480 x_125605 x_125606) (Star_47 x_125607))))
(assert (forall ((x_125608 R_644) (x_125609 R_644) (x_125610 R_644) (x_125611 R_644))
	(diseqR_47 (x_125481 x_125608 x_125609) (x_125480 x_125610 x_125611))))
(assert (forall ((x_125612 R_644) (x_125613 R_644) (x_125614 R_644))
	(diseqR_47 (Star_47 x_125612) (x_125480 x_125613 x_125614))))
(assert (forall ((x_125615 R_644) (x_125616 R_644) (x_125617 R_644))
	(diseqR_47 (x_125481 x_125615 x_125616) (Star_47 x_125617))))
(assert (forall ((x_125618 R_644) (x_125619 R_644) (x_125620 R_644))
	(diseqR_47 (Star_47 x_125618) (x_125481 x_125619 x_125620))))
(assert (forall ((x_125621 T_37) (x_125622 T_37))
	(=> (diseqT_33 x_125621 x_125622) (diseqR_47 (Atom_47 x_125621) (Atom_47 x_125622)))))
(assert (forall ((x_125623 R_644) (x_125624 R_644) (x_125625 R_644) (x_125626 R_644))
	(=> (diseqR_47 x_125623 x_125625) (diseqR_47 (x_125480 x_125623 x_125624) (x_125480 x_125625 x_125626)))))
(assert (forall ((x_125623 R_644) (x_125624 R_644) (x_125625 R_644) (x_125626 R_644))
	(=> (diseqR_47 x_125624 x_125626) (diseqR_47 (x_125480 x_125623 x_125624) (x_125480 x_125625 x_125626)))))
(assert (forall ((x_125627 R_644) (x_125628 R_644) (x_125629 R_644) (x_125630 R_644))
	(=> (diseqR_47 x_125627 x_125629) (diseqR_47 (x_125481 x_125627 x_125628) (x_125481 x_125629 x_125630)))))
(assert (forall ((x_125627 R_644) (x_125628 R_644) (x_125629 R_644) (x_125630 R_644))
	(=> (diseqR_47 x_125628 x_125630) (diseqR_47 (x_125481 x_125627 x_125628) (x_125481 x_125629 x_125630)))))
(assert (forall ((x_125631 R_644) (x_125632 R_644))
	(=> (diseqR_47 x_125631 x_125632) (diseqR_47 (Star_47 x_125631) (Star_47 x_125632)))))
(declare-fun eps_95 (Bool_435 R_644) Bool)
(assert (forall ((y_3172 R_644))
	(eps_95 true_435 (Star_47 y_3172))))
(assert (forall ((x_125489 Bool_435) (x_125490 Bool_435) (x_125491 Bool_435) (r_645 R_644) (q_361 R_644))
	(=> (and (eps_95 x_125490 r_645) (eps_95 x_125491 q_361) (and_441 x_125489 x_125490 x_125491)) (eps_95 x_125489 (x_125481 r_645 q_361)))))
(assert (forall ((x_125492 Bool_435) (x_125493 Bool_435) (x_125494 Bool_435) (p_593 R_644) (q_362 R_644))
	(=> (and (eps_95 x_125493 p_593) (eps_95 x_125494 q_362) (or_454 x_125492 x_125493 x_125494)) (eps_95 x_125492 (x_125480 p_593 q_362)))))
(assert (eps_95 true_435 Eps_94))
(assert (forall ((x_125483 R_644) (x_125487 T_37))
	(eps_95 false_435 (Atom_47 x_125487))))
(assert (forall ((x_125483 R_644))
	(eps_95 false_435 Nil_448)))
(declare-fun step_47 (R_644 R_644 T_37) Bool)
(assert (forall ((x_125499 R_644) (p_594 R_644) (y_3173 T_37))
	(=> (step_47 x_125499 p_594 y_3173) (step_47 (x_125481 x_125499 (Star_47 p_594)) (Star_47 p_594) y_3173))))
(assert (forall ((x_125502 R_644) (x_125503 R_644) (r_646 R_644) (q_363 R_644) (y_3173 T_37))
	(=> (and (step_47 x_125502 r_646 y_3173) (step_47 x_125503 q_363 y_3173) (eps_95 true_435 r_646)) (step_47 (x_125480 (x_125481 x_125502 q_363) x_125503) (x_125481 r_646 q_363) y_3173))))
(assert (forall ((x_125506 R_644) (r_646 R_644) (q_363 R_644) (y_3173 T_37))
	(=> (and (step_47 x_125506 r_646 y_3173) (eps_95 false_435 r_646)) (step_47 (x_125480 (x_125481 x_125506 q_363) Nil_448) (x_125481 r_646 q_363) y_3173))))
(assert (forall ((x_125508 R_644) (x_125509 R_644) (p_595 R_644) (q_364 R_644) (y_3173 T_37))
	(=> (and (step_47 x_125508 p_595 y_3173) (step_47 x_125509 q_364 y_3173)) (step_47 (x_125480 x_125508 x_125509) (x_125480 p_595 q_364) y_3173))))
(assert (forall ((b_133 T_37))
	(step_47 Eps_94 (Atom_47 b_133) b_133)))
(assert (forall ((b_133 T_37) (y_3173 T_37))
	(=> (diseqT_33 b_133 y_3173) (step_47 Nil_448 (Atom_47 b_133) y_3173))))
(assert (forall ((x_125485 R_644) (y_3173 T_37))
	(step_47 Nil_448 Eps_94 y_3173)))
(assert (forall ((x_125485 R_644) (y_3173 T_37))
	(step_47 Nil_448 Nil_448 y_3173)))
(declare-fun rec_33 (Bool_435 R_644 list_390) Bool)
(assert (forall ((x_125514 Bool_435) (x_125515 R_644) (z_2713 T_37) (xs_882 list_390) (x_125486 R_644))
	(=> (and (step_47 x_125515 x_125486 z_2713) (rec_33 x_125514 x_125515 xs_882)) (rec_33 x_125514 x_125486 (cons_384 z_2713 xs_882)))))
(assert (forall ((x_125517 Bool_435) (x_125486 R_644))
	(=> (eps_95 x_125517 x_125486) (rec_33 x_125517 x_125486 nil_447))))
(assert (forall ((p_596 R_644) (q_365 R_644) (a_120 T_37) (b_134 T_37))
	(=> (and true (rec_33 true_435 (Star_47 (x_125480 p_596 q_365)) (cons_384 a_120 (cons_384 b_134 nil_447))) (rec_33 false_435 (x_125480 (Star_47 p_596) (Star_47 q_365)) (cons_384 a_120 (cons_384 b_134 nil_447)))) false)))
(check-sat)
