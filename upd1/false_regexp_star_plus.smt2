
(set-logic HORN)
(declare-datatypes ((Bool_428 0)) (((false_428) (true_428))))
(declare-fun diseqBool_212 (Bool_428 Bool_428) Bool)
(declare-fun isfalse_212 (Bool_428) Bool)
(declare-fun istrue_212 (Bool_428) Bool)
(assert (isfalse_212 false_428))
(assert (istrue_212 true_428))
(assert (diseqBool_212 false_428 true_428))
(assert (diseqBool_212 true_428 false_428))
(declare-fun and_434 (Bool_428 Bool_428 Bool_428) Bool)
(declare-fun or_445 (Bool_428 Bool_428 Bool_428) Bool)
(declare-fun hence_428 (Bool_428 Bool_428 Bool_428) Bool)
(declare-fun not_433 (Bool_428 Bool_428) Bool)
(assert (and_434 false_428 false_428 false_428))
(assert (and_434 false_428 true_428 false_428))
(assert (and_434 false_428 false_428 true_428))
(assert (and_434 true_428 true_428 true_428))
(assert (or_445 false_428 false_428 false_428))
(assert (or_445 true_428 true_428 false_428))
(assert (or_445 true_428 false_428 true_428))
(assert (or_445 true_428 true_428 true_428))
(assert (hence_428 true_428 false_428 false_428))
(assert (hence_428 false_428 true_428 false_428))
(assert (hence_428 true_428 false_428 true_428))
(assert (hence_428 true_428 true_428 true_428))
(assert (not_433 true_428 false_428))
(assert (not_433 false_428 true_428))
(declare-datatypes ((T_32 0)) (((A_115) (B_122) (C_69))))
(declare-fun diseqT_29 (T_32 T_32) Bool)
(declare-fun isA_36 (T_32) Bool)
(declare-fun isB_36 (T_32) Bool)
(declare-fun isC_37 (T_32) Bool)
(assert (isA_36 A_115))
(assert (isB_36 B_122))
(assert (isC_37 C_69))
(assert (diseqT_29 A_115 B_122))
(assert (diseqT_29 A_115 C_69))
(assert (diseqT_29 B_122 A_115))
(assert (diseqT_29 C_69 A_115))
(assert (diseqT_29 B_122 C_69))
(assert (diseqT_29 C_69 B_122))
(declare-datatypes ((list_377 0)) (((nil_430) (cons_371 (head_742 T_32) (tail_748 list_377)))))
(declare-fun diseqlist_371 (list_377 list_377) Bool)
(declare-fun head_743 (T_32 list_377) Bool)
(declare-fun tail_749 (list_377 list_377) Bool)
(declare-fun isnil_430 (list_377) Bool)
(declare-fun iscons_371 (list_377) Bool)
(assert (forall ((x_114645 T_32) (x_114646 list_377))
	(head_743 x_114645 (cons_371 x_114645 x_114646))))
(assert (forall ((x_114645 T_32) (x_114646 list_377))
	(tail_749 x_114646 (cons_371 x_114645 x_114646))))
(assert (isnil_430 nil_430))
(assert (forall ((x_114648 T_32) (x_114649 list_377))
	(iscons_371 (cons_371 x_114648 x_114649))))
(assert (forall ((x_114650 T_32) (x_114651 list_377))
	(diseqlist_371 nil_430 (cons_371 x_114650 x_114651))))
(assert (forall ((x_114652 T_32) (x_114653 list_377))
	(diseqlist_371 (cons_371 x_114652 x_114653) nil_430)))
(assert (forall ((x_114654 T_32) (x_114655 list_377) (x_114656 T_32) (x_114657 list_377))
	(=> (diseqT_29 x_114654 x_114656) (diseqlist_371 (cons_371 x_114654 x_114655) (cons_371 x_114656 x_114657)))))
(assert (forall ((x_114654 T_32) (x_114655 list_377) (x_114656 T_32) (x_114657 list_377))
	(=> (diseqlist_371 x_114655 x_114657) (diseqlist_371 (cons_371 x_114654 x_114655) (cons_371 x_114656 x_114657)))))
(declare-datatypes ((R_619 0)) (((Nil_431) (Eps_86) (Atom_43 (projAtom_86 T_32)) (x_114595 (proj_300 R_619) (proj_301 R_619)) (x_114596 (proj_302 R_619) (proj_303 R_619)) (Star_43 (projStar_86 R_619)))))
(declare-fun diseqR_43 (R_619 R_619) Bool)
(declare-fun projAtom_87 (T_32 R_619) Bool)
(declare-fun proj_304 (R_619 R_619) Bool)
(declare-fun proj_305 (R_619 R_619) Bool)
(declare-fun proj_306 (R_619 R_619) Bool)
(declare-fun proj_307 (R_619 R_619) Bool)
(declare-fun projStar_87 (R_619 R_619) Bool)
(declare-fun isNil_431 (R_619) Bool)
(declare-fun isEps_43 (R_619) Bool)
(declare-fun isAtom_43 (R_619) Bool)
(declare-fun isx_90 (R_619) Bool)
(declare-fun isx_91 (R_619) Bool)
(declare-fun isStar_43 (R_619) Bool)
(assert (forall ((x_114660 T_32))
	(projAtom_87 x_114660 (Atom_43 x_114660))))
(assert (forall ((x_114662 R_619) (x_114663 R_619))
	(proj_304 x_114662 (x_114595 x_114662 x_114663))))
(assert (forall ((x_114662 R_619) (x_114663 R_619))
	(proj_305 x_114663 (x_114595 x_114662 x_114663))))
(assert (forall ((x_114665 R_619) (x_114666 R_619))
	(proj_306 x_114665 (x_114596 x_114665 x_114666))))
(assert (forall ((x_114665 R_619) (x_114666 R_619))
	(proj_307 x_114666 (x_114596 x_114665 x_114666))))
(assert (forall ((x_114668 R_619))
	(projStar_87 x_114668 (Star_43 x_114668))))
(assert (isNil_431 Nil_431))
(assert (isEps_43 Eps_86))
(assert (forall ((x_114670 T_32))
	(isAtom_43 (Atom_43 x_114670))))
(assert (forall ((x_114671 R_619) (x_114672 R_619))
	(isx_90 (x_114595 x_114671 x_114672))))
(assert (forall ((x_114673 R_619) (x_114674 R_619))
	(isx_91 (x_114596 x_114673 x_114674))))
(assert (forall ((x_114675 R_619))
	(isStar_43 (Star_43 x_114675))))
(assert (diseqR_43 Nil_431 Eps_86))
(assert (forall ((x_114676 T_32))
	(diseqR_43 Nil_431 (Atom_43 x_114676))))
(assert (forall ((x_114677 R_619) (x_114678 R_619))
	(diseqR_43 Nil_431 (x_114595 x_114677 x_114678))))
(assert (forall ((x_114679 R_619) (x_114680 R_619))
	(diseqR_43 Nil_431 (x_114596 x_114679 x_114680))))
(assert (forall ((x_114681 R_619))
	(diseqR_43 Nil_431 (Star_43 x_114681))))
(assert (diseqR_43 Eps_86 Nil_431))
(assert (forall ((x_114682 T_32))
	(diseqR_43 (Atom_43 x_114682) Nil_431)))
(assert (forall ((x_114683 R_619) (x_114684 R_619))
	(diseqR_43 (x_114595 x_114683 x_114684) Nil_431)))
(assert (forall ((x_114685 R_619) (x_114686 R_619))
	(diseqR_43 (x_114596 x_114685 x_114686) Nil_431)))
(assert (forall ((x_114687 R_619))
	(diseqR_43 (Star_43 x_114687) Nil_431)))
(assert (forall ((x_114688 T_32))
	(diseqR_43 Eps_86 (Atom_43 x_114688))))
(assert (forall ((x_114689 R_619) (x_114690 R_619))
	(diseqR_43 Eps_86 (x_114595 x_114689 x_114690))))
(assert (forall ((x_114691 R_619) (x_114692 R_619))
	(diseqR_43 Eps_86 (x_114596 x_114691 x_114692))))
(assert (forall ((x_114693 R_619))
	(diseqR_43 Eps_86 (Star_43 x_114693))))
(assert (forall ((x_114694 T_32))
	(diseqR_43 (Atom_43 x_114694) Eps_86)))
(assert (forall ((x_114695 R_619) (x_114696 R_619))
	(diseqR_43 (x_114595 x_114695 x_114696) Eps_86)))
(assert (forall ((x_114697 R_619) (x_114698 R_619))
	(diseqR_43 (x_114596 x_114697 x_114698) Eps_86)))
(assert (forall ((x_114699 R_619))
	(diseqR_43 (Star_43 x_114699) Eps_86)))
(assert (forall ((x_114700 T_32) (x_114701 R_619) (x_114702 R_619))
	(diseqR_43 (Atom_43 x_114700) (x_114595 x_114701 x_114702))))
(assert (forall ((x_114703 T_32) (x_114704 R_619) (x_114705 R_619))
	(diseqR_43 (Atom_43 x_114703) (x_114596 x_114704 x_114705))))
(assert (forall ((x_114706 T_32) (x_114707 R_619))
	(diseqR_43 (Atom_43 x_114706) (Star_43 x_114707))))
(assert (forall ((x_114708 R_619) (x_114709 R_619) (x_114710 T_32))
	(diseqR_43 (x_114595 x_114708 x_114709) (Atom_43 x_114710))))
(assert (forall ((x_114711 R_619) (x_114712 R_619) (x_114713 T_32))
	(diseqR_43 (x_114596 x_114711 x_114712) (Atom_43 x_114713))))
(assert (forall ((x_114714 R_619) (x_114715 T_32))
	(diseqR_43 (Star_43 x_114714) (Atom_43 x_114715))))
(assert (forall ((x_114716 R_619) (x_114717 R_619) (x_114718 R_619) (x_114719 R_619))
	(diseqR_43 (x_114595 x_114716 x_114717) (x_114596 x_114718 x_114719))))
(assert (forall ((x_114720 R_619) (x_114721 R_619) (x_114722 R_619))
	(diseqR_43 (x_114595 x_114720 x_114721) (Star_43 x_114722))))
(assert (forall ((x_114723 R_619) (x_114724 R_619) (x_114725 R_619) (x_114726 R_619))
	(diseqR_43 (x_114596 x_114723 x_114724) (x_114595 x_114725 x_114726))))
(assert (forall ((x_114727 R_619) (x_114728 R_619) (x_114729 R_619))
	(diseqR_43 (Star_43 x_114727) (x_114595 x_114728 x_114729))))
(assert (forall ((x_114730 R_619) (x_114731 R_619) (x_114732 R_619))
	(diseqR_43 (x_114596 x_114730 x_114731) (Star_43 x_114732))))
(assert (forall ((x_114733 R_619) (x_114734 R_619) (x_114735 R_619))
	(diseqR_43 (Star_43 x_114733) (x_114596 x_114734 x_114735))))
(assert (forall ((x_114736 T_32) (x_114737 T_32))
	(=> (diseqT_29 x_114736 x_114737) (diseqR_43 (Atom_43 x_114736) (Atom_43 x_114737)))))
(assert (forall ((x_114738 R_619) (x_114739 R_619) (x_114740 R_619) (x_114741 R_619))
	(=> (diseqR_43 x_114738 x_114740) (diseqR_43 (x_114595 x_114738 x_114739) (x_114595 x_114740 x_114741)))))
(assert (forall ((x_114738 R_619) (x_114739 R_619) (x_114740 R_619) (x_114741 R_619))
	(=> (diseqR_43 x_114739 x_114741) (diseqR_43 (x_114595 x_114738 x_114739) (x_114595 x_114740 x_114741)))))
(assert (forall ((x_114742 R_619) (x_114743 R_619) (x_114744 R_619) (x_114745 R_619))
	(=> (diseqR_43 x_114742 x_114744) (diseqR_43 (x_114596 x_114742 x_114743) (x_114596 x_114744 x_114745)))))
(assert (forall ((x_114742 R_619) (x_114743 R_619) (x_114744 R_619) (x_114745 R_619))
	(=> (diseqR_43 x_114743 x_114745) (diseqR_43 (x_114596 x_114742 x_114743) (x_114596 x_114744 x_114745)))))
(assert (forall ((x_114746 R_619) (x_114747 R_619))
	(=> (diseqR_43 x_114746 x_114747) (diseqR_43 (Star_43 x_114746) (Star_43 x_114747)))))
(declare-fun eps_87 (Bool_428 R_619) Bool)
(assert (forall ((y_3074 R_619))
	(eps_87 true_428 (Star_43 y_3074))))
(assert (forall ((x_114604 Bool_428) (x_114605 Bool_428) (x_114606 Bool_428) (r_620 R_619) (q_331 R_619))
	(=> (and (eps_87 x_114605 r_620) (eps_87 x_114606 q_331) (and_434 x_114604 x_114605 x_114606)) (eps_87 x_114604 (x_114596 r_620 q_331)))))
(assert (forall ((x_114607 Bool_428) (x_114608 Bool_428) (x_114609 Bool_428) (p_567 R_619) (q_332 R_619))
	(=> (and (eps_87 x_114608 p_567) (eps_87 x_114609 q_332) (or_445 x_114607 x_114608 x_114609)) (eps_87 x_114607 (x_114595 p_567 q_332)))))
(assert (eps_87 true_428 Eps_86))
(assert (forall ((x_114598 R_619) (x_114602 T_32))
	(eps_87 false_428 (Atom_43 x_114602))))
(assert (forall ((x_114598 R_619))
	(eps_87 false_428 Nil_431)))
(declare-fun step_43 (R_619 R_619 T_32) Bool)
(assert (forall ((x_114614 R_619) (p_568 R_619) (y_3075 T_32))
	(=> (step_43 x_114614 p_568 y_3075) (step_43 (x_114596 x_114614 (Star_43 p_568)) (Star_43 p_568) y_3075))))
(assert (forall ((x_114617 R_619) (x_114618 R_619) (r_621 R_619) (q_333 R_619) (y_3075 T_32))
	(=> (and (step_43 x_114617 r_621 y_3075) (step_43 x_114618 q_333 y_3075) (eps_87 true_428 r_621)) (step_43 (x_114595 (x_114596 x_114617 q_333) x_114618) (x_114596 r_621 q_333) y_3075))))
(assert (forall ((x_114621 R_619) (r_621 R_619) (q_333 R_619) (y_3075 T_32))
	(=> (and (step_43 x_114621 r_621 y_3075) (eps_87 false_428 r_621)) (step_43 (x_114595 (x_114596 x_114621 q_333) Nil_431) (x_114596 r_621 q_333) y_3075))))
(assert (forall ((x_114623 R_619) (x_114624 R_619) (p_569 R_619) (q_334 R_619) (y_3075 T_32))
	(=> (and (step_43 x_114623 p_569 y_3075) (step_43 x_114624 q_334 y_3075)) (step_43 (x_114595 x_114623 x_114624) (x_114595 p_569 q_334) y_3075))))
(assert (forall ((b_123 T_32))
	(step_43 Eps_86 (Atom_43 b_123) b_123)))
(assert (forall ((b_123 T_32) (y_3075 T_32))
	(=> (diseqT_29 b_123 y_3075) (step_43 Nil_431 (Atom_43 b_123) y_3075))))
(assert (forall ((x_114600 R_619) (y_3075 T_32))
	(step_43 Nil_431 Eps_86 y_3075)))
(assert (forall ((x_114600 R_619) (y_3075 T_32))
	(step_43 Nil_431 Nil_431 y_3075)))
(declare-fun rec_29 (Bool_428 R_619 list_377) Bool)
(assert (forall ((x_114629 Bool_428) (x_114630 R_619) (z_2650 T_32) (xs_869 list_377) (x_114601 R_619))
	(=> (and (step_43 x_114630 x_114601 z_2650) (rec_29 x_114629 x_114630 xs_869)) (rec_29 x_114629 x_114601 (cons_371 z_2650 xs_869)))))
(assert (forall ((x_114632 Bool_428) (x_114601 R_619))
	(=> (eps_87 x_114632 x_114601) (rec_29 x_114632 x_114601 nil_430))))
(assert (forall ((x_114634 Bool_428) (x_114635 Bool_428) (p_570 R_619) (q_335 R_619) (s_610 list_377))
	(=> (and true (diseqBool_212 x_114634 x_114635) (rec_29 x_114634 (Star_43 (x_114595 p_570 q_335)) s_610) (rec_29 x_114635 (x_114595 (Star_43 p_570) (Star_43 q_335)) s_610)) false)))
(check-sat)
