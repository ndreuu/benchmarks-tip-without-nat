
(set-logic HORN)
(declare-datatypes ((Bool_163 0)) (((false_163) (true_163))))
(declare-fun diseqBool_69 (Bool_163 Bool_163) Bool)
(declare-fun isfalse_69 (Bool_163) Bool)
(declare-fun istrue_69 (Bool_163) Bool)
(assert (isfalse_69 false_163))
(assert (istrue_69 true_163))
(assert (diseqBool_69 false_163 true_163))
(assert (diseqBool_69 true_163 false_163))
(declare-fun and_163 (Bool_163 Bool_163 Bool_163) Bool)
(declare-fun or_165 (Bool_163 Bool_163 Bool_163) Bool)
(declare-fun hence_163 (Bool_163 Bool_163 Bool_163) Bool)
(declare-fun not_164 (Bool_163 Bool_163) Bool)
(assert (and_163 false_163 false_163 false_163))
(assert (and_163 false_163 true_163 false_163))
(assert (and_163 false_163 false_163 true_163))
(assert (and_163 true_163 true_163 true_163))
(assert (or_165 false_163 false_163 false_163))
(assert (or_165 true_163 true_163 false_163))
(assert (or_165 true_163 false_163 true_163))
(assert (or_165 true_163 true_163 true_163))
(assert (hence_163 true_163 false_163 false_163))
(assert (hence_163 false_163 true_163 false_163))
(assert (hence_163 true_163 false_163 true_163))
(assert (hence_163 true_163 true_163 true_163))
(assert (not_164 true_163 false_163))
(assert (not_164 false_163 true_163))
(declare-datatypes ((It_1 0)) (((A_29) (B_18) (C_8))))
(declare-fun diseqIt_1 (It_1 It_1) Bool)
(declare-fun isA_1 (It_1) Bool)
(declare-fun isB_1 (It_1) Bool)
(declare-fun isC_1 (It_1) Bool)
(assert (isA_1 A_29))
(assert (isB_1 B_18))
(assert (isC_1 C_8))
(assert (diseqIt_1 A_29 B_18))
(assert (diseqIt_1 A_29 C_8))
(assert (diseqIt_1 B_18 A_29))
(assert (diseqIt_1 C_8 A_29))
(assert (diseqIt_1 B_18 C_8))
(assert (diseqIt_1 C_8 B_18))
(declare-datatypes ((list_117 0)) (((nil_130) (cons_117 (head_234 It_1) (tail_234 list_117)))))
(declare-fun diseqlist_117 (list_117 list_117) Bool)
(declare-fun head_235 (It_1 list_117) Bool)
(declare-fun tail_235 (list_117 list_117) Bool)
(declare-fun isnil_130 (list_117) Bool)
(declare-fun iscons_117 (list_117) Bool)
(assert (forall ((x_25369 It_1) (x_25370 list_117))
	(head_235 x_25369 (cons_117 x_25369 x_25370))))
(assert (forall ((x_25369 It_1) (x_25370 list_117))
	(tail_235 x_25370 (cons_117 x_25369 x_25370))))
(assert (isnil_130 nil_130))
(assert (forall ((x_25372 It_1) (x_25373 list_117))
	(iscons_117 (cons_117 x_25372 x_25373))))
(assert (forall ((x_25374 It_1) (x_25375 list_117))
	(diseqlist_117 nil_130 (cons_117 x_25374 x_25375))))
(assert (forall ((x_25376 It_1) (x_25377 list_117))
	(diseqlist_117 (cons_117 x_25376 x_25377) nil_130)))
(assert (forall ((x_25378 It_1) (x_25379 list_117) (x_25380 It_1) (x_25381 list_117))
	(=> (diseqIt_1 x_25378 x_25380) (diseqlist_117 (cons_117 x_25378 x_25379) (cons_117 x_25380 x_25381)))))
(assert (forall ((x_25378 It_1) (x_25379 list_117) (x_25380 It_1) (x_25381 list_117))
	(=> (diseqlist_117 x_25379 x_25381) (diseqlist_117 (cons_117 x_25378 x_25379) (cons_117 x_25380 x_25381)))))
(declare-fun isPrefix_1 (Bool_163 list_117 list_117) Bool)
(assert (forall ((x_25342 Bool_163) (x_25331 It_1) (x_25332 list_117) (x_25330 list_117))
	(=> (isPrefix_1 x_25342 x_25330 x_25332) (isPrefix_1 x_25342 (cons_117 x_25331 x_25330) (cons_117 x_25331 x_25332)))))
(assert (forall ((x_25331 It_1) (x_25332 list_117) (z_921 It_1) (x_25330 list_117))
	(=> (diseqIt_1 z_921 x_25331) (isPrefix_1 false_163 (cons_117 z_921 x_25330) (cons_117 x_25331 x_25332)))))
(assert (forall ((z_921 It_1) (x_25330 list_117))
	(isPrefix_1 false_163 (cons_117 z_921 x_25330) nil_130)))
(assert (forall ((y_940 list_117))
	(isPrefix_1 true_163 nil_130 y_940)))
(declare-fun isRelaxedPrefix_1 (Bool_163 list_117 list_117) Bool)
(assert (forall ((x_25347 Bool_163) (x_25337 It_1) (x_25338 list_117) (x_25335 It_1) (x_25336 list_117))
	(=> (isRelaxedPrefix_1 x_25347 (cons_117 x_25335 x_25336) x_25338) (isRelaxedPrefix_1 x_25347 (cons_117 x_25337 (cons_117 x_25335 x_25336)) (cons_117 x_25337 x_25338)))))
(assert (forall ((x_25349 Bool_163) (x_25337 It_1) (x_25338 list_117) (x_25335 It_1) (x_25336 list_117) (z_922 It_1))
	(=> (and (diseqIt_1 z_922 x_25337) (isPrefix_1 x_25349 (cons_117 x_25335 x_25336) (cons_117 x_25337 x_25338))) (isRelaxedPrefix_1 x_25349 (cons_117 z_922 (cons_117 x_25335 x_25336)) (cons_117 x_25337 x_25338)))))
(assert (forall ((x_25335 It_1) (x_25336 list_117) (z_922 It_1))
	(isRelaxedPrefix_1 false_163 (cons_117 z_922 (cons_117 x_25335 x_25336)) nil_130)))
(assert (forall ((z_922 It_1) (y_941 list_117))
	(isRelaxedPrefix_1 true_163 (cons_117 z_922 nil_130) y_941)))
(assert (forall ((y_941 list_117))
	(isRelaxedPrefix_1 true_163 nil_130 y_941)))
(declare-fun x_25339 (list_117 list_117 list_117) Bool)
(assert (forall ((x_25355 list_117) (z_923 It_1) (xs_296 list_117) (y_942 list_117))
	(=> (x_25339 x_25355 xs_296 y_942) (x_25339 (cons_117 z_923 x_25355) (cons_117 z_923 xs_296) y_942))))
(assert (forall ((x_25356 list_117))
	(x_25339 x_25356 nil_130 x_25356)))
(assert (forall ((x_25357 list_117) (x_25358 list_117) (x_25359 list_117) (x_25360 list_117) (x_25341 It_1) (xs_297 list_117) (ys_89 list_117) (zs_23 list_117))
	(=> (and true (x_25339 x_25357 (cons_117 x_25341 nil_130) ys_89) (x_25339 x_25358 xs_297 x_25357) (x_25339 x_25359 ys_89 zs_23) (x_25339 x_25360 xs_297 x_25359) (isRelaxedPrefix_1 false_163 x_25358 x_25360)) false)))
(check-sat)
