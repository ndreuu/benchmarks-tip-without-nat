
(set-logic HORN)
(define-fun Z_2 () Int 0)
(define-fun S_0 ((x Int)) Int (+ x 1))
(declare-fun diseqInt (Int Int) Bool)
(declare-fun unS_1 (Int Int) Bool)
(declare-fun isZ_0 (Int) Bool)
(declare-fun isS_0 (Int) Bool)
(assert (forall ((x_54 Int))
	(unS_1 x_54 (S_0 x_54))))
(assert (isZ_0 Z_2))
(assert (forall ((x_56 Int))
	(isS_0 (S_0 x_56))))
(assert (forall ((x_57 Int))
	(diseqInt Z_2 (S_0 x_57))))
(assert (forall ((x_58 Int))
	(diseqInt (S_0 x_58) Z_2)))
(assert (forall ((x_59 Int) (x_60 Int))
	(=> (diseqInt x_59 x_60) (diseqInt (S_0 x_59) (S_0 x_60)))))
(declare-fun add_0 (Int Int Int) Bool)
(declare-fun minus_0 (Int Int Int) Bool)
(declare-fun le_0 (Int Int) Bool)
(declare-fun ge_0 (Int Int) Bool)
(declare-fun lt_0 (Int Int) Bool)
(declare-fun gt_0 (Int Int) Bool)
(declare-fun mult_0 (Int Int Int) Bool)
(declare-fun div_0 (Int Int Int) Bool)
(declare-fun mod_0 (Int Int Int) Bool)
(assert (forall ((y_3 Int))
	(add_0 y_3 Z_2 y_3)))
(assert (forall ((x_15 Int) (y_3 Int) (r_0 Int))
	(=> (add_0 r_0 x_15 y_3) (add_0 (S_0 r_0) (S_0 x_15) y_3))))
(assert (forall ((y_3 Int))
	(minus_0 Z_2 Z_2 y_3)))
(assert (forall ((x_15 Int) (y_3 Int) (r_0 Int))
	(=> (minus_0 r_0 x_15 y_3) (minus_0 (S_0 r_0) (S_0 x_15) y_3))))
(assert (forall ((y_3 Int))
	(le_0 Z_2 y_3)))
(assert (forall ((x_15 Int) (y_3 Int))
	(=> (le_0 x_15 y_3) (le_0 (S_0 x_15) (S_0 y_3)))))
(assert (forall ((y_3 Int))
	(ge_0 y_3 Z_2)))
(assert (forall ((x_15 Int) (y_3 Int))
	(=> (ge_0 x_15 y_3) (ge_0 (S_0 x_15) (S_0 y_3)))))
(assert (forall ((y_3 Int))
	(lt_0 Z_2 (S_0 y_3))))
(assert (forall ((x_15 Int) (y_3 Int))
	(=> (lt_0 x_15 y_3) (lt_0 (S_0 x_15) (S_0 y_3)))))
(assert (forall ((y_3 Int))
	(gt_0 (S_0 y_3) Z_2)))
(assert (forall ((x_15 Int) (y_3 Int))
	(=> (gt_0 x_15 y_3) (gt_0 (S_0 x_15) (S_0 y_3)))))
(assert (forall ((y_3 Int))
	(mult_0 Z_2 Z_2 y_3)))
(assert (forall ((x_15 Int) (y_3 Int) (r_0 Int) (z_3 Int))
	(=> (and (mult_0 r_0 x_15 y_3) (add_0 z_3 r_0 y_3)) (mult_0 z_3 (S_0 x_15) y_3))))
(assert (forall ((x_15 Int) (y_3 Int))
	(=> (lt_0 x_15 y_3) (div_0 Z_2 x_15 y_3))))
(assert (forall ((x_15 Int) (y_3 Int) (r_0 Int) (z_3 Int))
	(=> (and (ge_0 x_15 y_3) (minus_0 z_3 x_15 y_3) (div_0 r_0 z_3 y_3)) (div_0 (S_0 r_0) x_15 y_3))))
(assert (forall ((x_15 Int) (y_3 Int))
	(=> (lt_0 x_15 y_3) (mod_0 x_15 x_15 y_3))))
(assert (forall ((x_15 Int) (y_3 Int) (r_0 Int) (z_3 Int))
	(=> (and (ge_0 x_15 y_3) (minus_0 z_3 x_15 y_3) (mod_0 r_0 z_3 y_3)) (mod_0 r_0 x_15 y_3))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 Int) (projpair_1 Int)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-fun projpair_2 (Int pair_0) Bool)
(declare-fun projpair_3 (Int pair_0) Bool)
(declare-fun ispair_0 (pair_0) Bool)
(assert (forall ((x_16 Int) (x_17 Int))
	(projpair_2 x_16 (pair_1 x_16 x_17))))
(assert (forall ((x_16 Int) (x_17 Int))
	(projpair_3 x_17 (pair_1 x_16 x_17))))
(assert (forall ((x_19 Int) (x_20 Int))
	(ispair_0 (pair_1 x_19 x_20))))
(assert (forall ((x_21 Int) (x_22 Int) (x_23 Int) (x_24 Int))
	(=> (diseqInt x_21 x_23) (diseqpair_0 (pair_1 x_21 x_22) (pair_1 x_23 x_24)))))
(assert (forall ((x_21 Int) (x_22 Int) (x_23 Int) (x_24 Int))
	(=> (diseqInt x_22 x_24) (diseqpair_0 (pair_1 x_21 x_22) (pair_1 x_23 x_24)))))
(declare-datatypes ((list_0 0)) (((nil_0) (cons_0 (head_0 Int) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_2 (Int list_0) Bool)
(declare-fun tail_2 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_26 Int) (x_27 list_0))
	(head_2 x_26 (cons_0 x_26 x_27))))
(assert (forall ((x_26 Int) (x_27 list_0))
	(tail_2 x_27 (cons_0 x_26 x_27))))
(assert (isnil_0 nil_0))
(assert (forall ((x_29 Int) (x_30 list_0))
	(iscons_0 (cons_0 x_29 x_30))))
(assert (forall ((x_31 Int) (x_32 list_0))
	(diseqlist_0 nil_0 (cons_0 x_31 x_32))))
(assert (forall ((x_33 Int) (x_34 list_0))
	(diseqlist_0 (cons_0 x_33 x_34) nil_0)))
(assert (forall ((x_35 Int) (x_36 list_0) (x_37 Int) (x_38 list_0))
	(=> (diseqInt x_35 x_37) (diseqlist_0 (cons_0 x_35 x_36) (cons_0 x_37 x_38)))))
(assert (forall ((x_35 Int) (x_36 list_0) (x_37 Int) (x_38 list_0))
	(=> (diseqlist_0 x_36 x_38) (diseqlist_0 (cons_0 x_35 x_36) (cons_0 x_37 x_38)))))
(declare-datatypes ((list_1 0)) (((nil_1) (cons_1 (head_1 pair_0) (tail_1 list_1)))))
(declare-fun diseqlist_1 (list_1 list_1) Bool)
(declare-fun head_3 (pair_0 list_1) Bool)
(declare-fun tail_3 (list_1 list_1) Bool)
(declare-fun isnil_1 (list_1) Bool)
(declare-fun iscons_1 (list_1) Bool)
(assert (forall ((x_40 pair_0) (x_41 list_1))
	(head_3 x_40 (cons_1 x_40 x_41))))
(assert (forall ((x_40 pair_0) (x_41 list_1))
	(tail_3 x_41 (cons_1 x_40 x_41))))
(assert (isnil_1 nil_1))
(assert (forall ((x_43 pair_0) (x_44 list_1))
	(iscons_1 (cons_1 x_43 x_44))))
(assert (forall ((x_45 pair_0) (x_46 list_1))
	(diseqlist_1 nil_1 (cons_1 x_45 x_46))))
(assert (forall ((x_47 pair_0) (x_48 list_1))
	(diseqlist_1 (cons_1 x_47 x_48) nil_1)))
(assert (forall ((x_49 pair_0) (x_50 list_1) (x_51 pair_0) (x_52 list_1))
	(=> (diseqpair_0 x_49 x_51) (diseqlist_1 (cons_1 x_49 x_50) (cons_1 x_51 x_52)))))
(assert (forall ((x_49 pair_0) (x_50 list_1) (x_51 pair_0) (x_52 list_1))
	(=> (diseqlist_1 x_50 x_52) (diseqlist_1 (cons_1 x_49 x_50) (cons_1 x_51 x_52)))))
(declare-fun zip_0 (list_1 list_0 list_0) Bool)
(assert (forall ((x_7 list_1) (x_2 Int) (x_3 list_0) (z_0 Int) (x_1 list_0))
	(=> (zip_0 x_7 x_1 x_3) (zip_0 (cons_1 (pair_1 z_0 x_2) x_7) (cons_0 z_0 x_1) (cons_0 x_2 x_3)))))
(assert (forall ((z_0 Int) (x_1 list_0))
	(zip_0 nil_1 (cons_0 z_0 x_1) nil_0)))
(assert (forall ((y_0 list_0))
	(zip_0 nil_1 nil_0 y_0)))
(declare-fun zipConcat_0 (list_1 Int list_0 list_0) Bool)
(assert (forall ((x_11 list_1) (y_2 Int) (ys_0 list_0) (x_4 Int) (y_1 list_0))
	(=> (zip_0 x_11 y_1 ys_0) (zipConcat_0 (cons_1 (pair_1 x_4 y_2) x_11) x_4 y_1 (cons_0 y_2 ys_0)))))
(assert (forall ((x_4 Int) (y_1 list_0))
	(zipConcat_0 nil_1 x_4 y_1 nil_0)))
(assert (forall ((x_13 list_1) (x_14 list_1) (x_5 Int) (xs_0 list_0) (ys_1 list_0))
	(=> (and true (diseqlist_1 x_13 x_14) (zip_0 x_13 (cons_0 x_5 xs_0) ys_1) (zipConcat_0 x_14 x_5 xs_0 ys_1)) false)))
(check-sat)
